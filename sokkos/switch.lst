   1               		.file	"switch.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	read_keypad
  12               	read_keypad:
  13               	.LVL0:
  14               	.LFB2:
  15               		.file 1 "switch.c"
   1:switch.c      **** /* 
   2:switch.c      ****  * The software for the x0xb0x is available for use in accordance with the 
   3:switch.c      ****  * following open source license (MIT License). For more information about
   4:switch.c      ****  * OS licensing, please visit -> http://www.opensource.org/
   5:switch.c      ****  *
   6:switch.c      ****  * For more information about the x0xb0x project, please visit
   7:switch.c      ****  * -> http://www.ladyada.net/make/x0xb0x
   8:switch.c      ****  *
   9:switch.c      ****  *                                     *****
  10:switch.c      ****  * Copyright (c) 2005 Limor Fried
  11:switch.c      ****  *
  12:switch.c      ****  * Permission is hereby granted, free of charge, to any person obtaining a 
  13:switch.c      ****  * copy of this software and associated documentation files (the "Software"), 
  14:switch.c      ****  * to deal in the Software without restriction, including without limitation 
  15:switch.c      ****  * the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  16:switch.c      ****  * and/or sell copies of the Software, and to permit persons to whom the 
  17:switch.c      ****  * Software is furnished to do so, subject to the following conditions:
  18:switch.c      ****  *
  19:switch.c      ****  * The above copyright notice and this permission notice shall be included in 
  20:switch.c      ****  * all copies or substantial portions of the Software.
  21:switch.c      ****  *
  22:switch.c      ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
  23:switch.c      ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
  24:switch.c      ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  25:switch.c      ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
  26:switch.c      ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
  27:switch.c      ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  28:switch.c      ****  * IN THE SOFTWARE.
  29:switch.c      ****  *                                     *****
  30:switch.c      ****  *
  31:switch.c      ****  */
  32:switch.c      **** 
  33:switch.c      **** #include <inttypes.h>
  34:switch.c      **** #include <avr/io.h>
  35:switch.c      **** #include <avr/interrupt.h>
  36:switch.c      **** #include <stdio.h>
  37:switch.c      **** #include "switch.h"
  38:switch.c      **** #include "led.h"
  39:switch.c      **** #include "main.h"
  40:switch.c      **** #include "delay.h"
  41:switch.c      ****  
  42:switch.c      **** uint8_t last_tempo;
  43:switch.c      **** uint8_t switches[3];
  44:switch.c      **** uint8_t last_switches[3];
  45:switch.c      **** uint8_t pressed_switches[3];
  46:switch.c      **** uint8_t released_switches[3];
  47:switch.c      **** 
  48:switch.c      **** uint8_t bank_switched = 0;   // has the bank knob been moved?
  49:switch.c      **** uint8_t function, bank;
  50:switch.c      **** uint8_t last_func, last_bank;
  51:switch.c      **** 
  52:switch.c      **** volatile extern uint16_t tempo;
  53:switch.c      **** volatile extern uint16_t newtempo; // changed by the interrupt then updated to the current tempo?
  54:switch.c      **** 
  55:switch.c      **** volatile uint8_t debounce_timer = 0;     // modified by timer0 in main.c
  56:switch.c      **** 
  57:switch.c      **** 
  58:switch.c      **** const static uint8_t numkey_tab[8] = {
  59:switch.c      ****   KEY_C,
  60:switch.c      ****   KEY_D,
  61:switch.c      ****   KEY_E,
  62:switch.c      ****   KEY_F,
  63:switch.c      ****   KEY_G,
  64:switch.c      ****   KEY_A,
  65:switch.c      ****   KEY_B,
  66:switch.c      ****   KEY_C2
  67:switch.c      **** };
  68:switch.c      **** 
  69:switch.c      **** const uint8_t loopkey_tab[16] = {
  70:switch.c      ****   KEY_C,
  71:switch.c      ****   KEY_CS,
  72:switch.c      ****   KEY_D,
  73:switch.c      ****   KEY_DS,
  74:switch.c      ****   KEY_E,
  75:switch.c      ****   KEY_F,
  76:switch.c      ****   KEY_FS,
  77:switch.c      ****   KEY_G,
  78:switch.c      ****   KEY_GS,
  79:switch.c      ****   KEY_A,
  80:switch.c      ****   KEY_AS,
  81:switch.c      ****   KEY_B,
  82:switch.c      ****   KEY_C2,
  83:switch.c      ****   KEY_REST,
  84:switch.c      ****   KEY_ACCENT,
  85:switch.c      ****   KEY_SLIDE
  86:switch.c      **** };
  87:switch.c      **** 
  88:switch.c      **** void read_switches(void) {
  89:switch.c      ****   uint8_t i, s, l, t;
  90:switch.c      ****   uint8_t temp_switches[3];
  91:switch.c      ****   uint8_t keypress_switches[3];
  92:switch.c      **** 
  93:switch.c      ****   // check if tempo has been changed by interrupt
  94:switch.c      ****   if (newtempo != tempo)
  95:switch.c      ****     change_tempo(newtempo);
  96:switch.c      **** 
  97:switch.c      ****   for (i = 0; i < 3; i++) 
  98:switch.c      ****     {
  99:switch.c      ****       pressed_switches[i] = 0;
 100:switch.c      ****       released_switches[i] = 0;
 101:switch.c      ****     }
 102:switch.c      ****   // to debounce switches, check if it's been more than 20 ms since
 103:switch.c      ****   // the last check, and that the switch is the same as it was 20ms ago.
 104:switch.c      ****   if (debounce_timer < 20)  // timer is in 1ms incr
 105:switch.c      ****     return;                // we only want to be called every 20 ms or more
 106:switch.c      **** 
 107:switch.c      ****   debounce_timer = 0;        // reset the timer
 108:switch.c      **** 
 109:switch.c      ****   select_bank_read(); // wait a bit then call read_bank
 110:switch.c      **** 
 111:switch.c      ****   read_keypad(temp_switches);
 112:switch.c      ****   keypress_switches[0] = switches[0];
 113:switch.c      ****   keypress_switches[1] = switches[1];
 114:switch.c      ****   keypress_switches[2] = switches[2];
 115:switch.c      ****   for (i=0; i<24; i++) {
 116:switch.c      ****     s = (switches[i/8] & (1 <<(i % 8)));
 117:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 118:switch.c      ****     t = (temp_switches[i/8] & (1 <<(i % 8)));
 119:switch.c      ****     //printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
 120:switch.c      ****     if (s != 0) {
 121:switch.c      ****       switches[i/8] = (switches[i/8] & ~(1 << (i % 8))) | (l | t);
 122:switch.c      ****     } else {
 123:switch.c      ****       switches[i/8] = (switches[i/8] & ~(1 << (i % 8))) | (l & t);
 124:switch.c      ****     }
 125:switch.c      ****   }
 126:switch.c      **** 
 127:switch.c      ****   i = read_bank();
 128:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 129:switch.c      ****     bank = i;
 130:switch.c      ****     bank_switched = 1;
 131:switch.c      ****     //putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 132:switch.c      ****   }
 133:switch.c      ****   last_bank = i;
 134:switch.c      **** 
 135:switch.c      ****   select_func_read();
 136:switch.c      **** 
 137:switch.c      ****   for (i=0; i<3; i++) {
 138:switch.c      ****     last_switches[i] = temp_switches[i];
 139:switch.c      **** 
 140:switch.c      ****     pressed_switches[i] = (keypress_switches[i] ^ switches[i]) & switches[i];
 141:switch.c      ****     released_switches[i] = (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 142:switch.c      ****   }
 143:switch.c      ****   /*printf("pressed %x %x %x, released %x %x %x\n\r",
 144:switch.c      **** 	 pressed_switches[0], pressed_switches[1], pressed_switches[2],
 145:switch.c      **** 	 released_switches[0], released_switches[1], released_switches[2]);
 146:switch.c      ****   */
 147:switch.c      **** 
 148:switch.c      **** 
 149:switch.c      ****   i = read_function();
 150:switch.c      ****   if ((i != function) && (i == last_func)) {
 151:switch.c      ****     function = i;
 152:switch.c      ****     //putstring("Function #"); putnum_ud(function); putstring("\n\r");
 153:switch.c      ****   }
 154:switch.c      ****   last_func = i;
 155:switch.c      **** 
 156:switch.c      ****   clock_leds();
 157:switch.c      **** }
 158:switch.c      **** 
 159:switch.c      **** void read_keypad(uint8_t *switchinput) {
  16               		.loc 1 159 40 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 160:switch.c      ****   uint8_t i;
  22               		.loc 1 160 3 view .LVU1
 161:switch.c      **** 
 162:switch.c      ****   cli();
  23               		.loc 1 162 3 view .LVU2
  24               	/* #APP */
  25               	 ;  162 "switch.c" 1
  26 0000 F894      		cli
  27               	 ;  0 "" 2
 163:switch.c      **** 
 164:switch.c      ****   cbi(SWITCH_LATCH_PORT, SWITCH_LATCH_PIN);
  28               		.loc 1 164 3 view .LVU3
  29               	/* #NOAPP */
  30 0002 C098      		cbi 0x18,0
 165:switch.c      ****   NOP; NOP; NOP; NOP;
  31               		.loc 1 165 3 view .LVU4
  32               	/* #APP */
  33               	 ;  165 "switch.c" 1
  34 0004 0000      		nop
  35               	 ;  0 "" 2
  36               		.loc 1 165 8 view .LVU5
  37               	 ;  165 "switch.c" 1
  38 0006 0000      		nop
  39               	 ;  0 "" 2
  40               		.loc 1 165 13 view .LVU6
  41               	 ;  165 "switch.c" 1
  42 0008 0000      		nop
  43               	 ;  0 "" 2
  44               		.loc 1 165 18 view .LVU7
  45               	 ;  165 "switch.c" 1
  46 000a 0000      		nop
  47               	 ;  0 "" 2
 166:switch.c      ****   sbi(SWITCH_LATCH_PORT, SWITCH_LATCH_PIN);
  48               		.loc 1 166 3 view .LVU8
  49               	/* #NOAPP */
  50 000c C09A      		sbi 0x18,0
 167:switch.c      ****   for (i=0; i<3; i++) {
  51               		.loc 1 167 3 view .LVU9
  52               	.LVL1:
  53               		.loc 1 167 3 is_stmt 0 view .LVU10
  54 000e FC01      		movw r30,r24
  55 0010 0396      		adiw r24,3
  56               	.LVL2:
  57               	.L3:
 168:switch.c      ****     SPDR = 0;
  58               		.loc 1 168 5 is_stmt 1 view .LVU11
  59               		.loc 1 168 10 is_stmt 0 view .LVU12
  60 0012 1FB8      		out 0xf,__zero_reg__
 169:switch.c      ****     while (!(SPSR & (1<<SPIF)));
  61               		.loc 1 169 5 is_stmt 1 view .LVU13
  62               	.L2:
  63               		.loc 1 169 32 discriminator 1 view .LVU14
  64               		.loc 1 169 11 is_stmt 0 discriminator 1 view .LVU15
  65 0014 779B      		sbis 0xe,7
  66 0016 00C0      		rjmp .L2
 170:switch.c      ****     switchinput[i] = SPDR;
  67               		.loc 1 170 5 is_stmt 1 discriminator 2 view .LVU16
  68               		.loc 1 170 22 is_stmt 0 discriminator 2 view .LVU17
  69 0018 2FB1      		in r18,0xf
  70               		.loc 1 170 20 discriminator 2 view .LVU18
  71 001a 2193      		st Z+,r18
  72               	.LVL3:
 167:switch.c      ****     SPDR = 0;
  73               		.loc 1 167 3 discriminator 2 view .LVU19
  74 001c E817      		cp r30,r24
  75 001e F907      		cpc r31,r25
  76 0020 01F4      		brne .L3
 171:switch.c      ****   }
 172:switch.c      ****   //printf("got %2x %2x %2x\n\r", switches[2], switches[1], switches[0]);
 173:switch.c      **** 
 174:switch.c      ****   sei();
  77               		.loc 1 174 3 is_stmt 1 view .LVU20
  78               	/* #APP */
  79               	 ;  174 "switch.c" 1
  80 0022 7894      		sei
  81               	 ;  0 "" 2
  82               	/* #NOAPP */
  83               	/* epilogue start */
 175:switch.c      **** }
  84               		.loc 1 175 1 is_stmt 0 view .LVU21
  85 0024 0895      		ret
  86               		.cfi_endproc
  87               	.LFE2:
  89               	.global	select_bank_read
  91               	select_bank_read:
  92               	.LFB3:
 176:switch.c      **** 
 177:switch.c      **** // we need to call this, then wait a bit, then read the value off the pins
 178:switch.c      **** void select_bank_read(void) {
  93               		.loc 1 178 29 is_stmt 1 view -0
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
 179:switch.c      ****   BANK_COMMON_PORT &= ~_BV(BANK_COMMON_PIN);
  99               		.loc 1 179 3 view .LVU23
 100               		.loc 1 179 20 is_stmt 0 view .LVU24
 101 0026 DE98      		cbi 0x1b,6
 102               	/* epilogue start */
 180:switch.c      **** }
 103               		.loc 1 180 1 view .LVU25
 104 0028 0895      		ret
 105               		.cfi_endproc
 106               	.LFE3:
 108               	.global	select_func_read
 110               	select_func_read:
 111               	.LFB4:
 181:switch.c      **** 
 182:switch.c      **** // we need to call this, then wait a bit, then read the value off the pins
 183:switch.c      **** void select_func_read(void) {
 112               		.loc 1 183 29 is_stmt 1 view -0
 113               		.cfi_startproc
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
 184:switch.c      ****   FUNC_COMMON_PORT |= _BV(FUNC_COMMON_PIN);
 118               		.loc 1 184 3 view .LVU27
 119               		.loc 1 184 20 is_stmt 0 view .LVU28
 120 002a DE9A      		sbi 0x1b,6
 121               	/* epilogue start */
 185:switch.c      **** }
 122               		.loc 1 185 1 view .LVU29
 123 002c 0895      		ret
 124               		.cfi_endproc
 125               	.LFE4:
 127               	.global	read_bank
 129               	read_bank:
 130               	.LFB5:
 186:switch.c      **** 
 187:switch.c      **** uint8_t read_bank() {
 131               		.loc 1 187 21 is_stmt 1 view -0
 132               		.cfi_startproc
 133               	/* prologue: function */
 134               	/* frame size = 0 */
 135               	/* stack size = 0 */
 136               	.L__stack_usage = 0
 188:switch.c      ****   uint8_t val;
 137               		.loc 1 188 3 view .LVU31
 189:switch.c      **** 
 190:switch.c      ****   val = BANK_PIN;
 138               		.loc 1 190 3 view .LVU32
 139               		.loc 1 190 7 is_stmt 0 view .LVU33
 140 002e 89B3      		in r24,0x19
 141               	.LVL4:
 191:switch.c      ****   val = (val >> 2) & 0xF;
 142               		.loc 1 191 3 is_stmt 1 view .LVU34
 143               		.loc 1 191 20 is_stmt 0 view .LVU35
 144 0030 8695      		lsr r24
 145 0032 8695      		lsr r24
 146               	.LVL5:
 147               		.loc 1 191 7 view .LVU36
 148 0034 8F70      		andi r24,lo8(15)
 149               	.LVL6:
 192:switch.c      ****   val = (val >> 3) | ((val >> 1)&0x2) | ((val << 1)&0x4) | ((val << 3)&0x8);
 150               		.loc 1 192 3 is_stmt 1 view .LVU37
 151               		.loc 1 192 47 is_stmt 0 view .LVU38
 152 0036 282F      		mov r18,r24
 153 0038 30E0      		ldi r19,0
 154               		.loc 1 192 33 view .LVU39
 155 003a 982F      		mov r25,r24
 156 003c 9695      		lsr r25
 157 003e 9270      		andi r25,lo8(2)
 158               		.loc 1 192 20 view .LVU40
 159 0040 8695      		lsr r24
 160 0042 8695      		lsr r24
 161 0044 8695      		lsr r24
 162               	.LVL7:
 163               		.loc 1 192 20 view .LVU41
 164 0046 982B      		or r25,r24
 165               		.loc 1 192 47 view .LVU42
 166 0048 A901      		movw r20,r18
 167 004a 440F      		lsl r20
 168 004c 551F      		rol r21
 169               		.loc 1 192 52 view .LVU43
 170 004e 4470      		andi r20,lo8(4)
 171               		.loc 1 192 39 view .LVU44
 172 0050 942B      		or r25,r20
 173               		.loc 1 192 66 view .LVU45
 174 0052 43E0      		ldi r20,3
 175               		1:
 176 0054 220F      		lsl r18
 177 0056 331F      		rol r19
 178 0058 4A95      		dec r20
 179 005a 01F4      		brne 1b
 180               	.LVL8:
 181               		.loc 1 192 71 view .LVU46
 182 005c 2870      		andi r18,lo8(8)
 183               		.loc 1 192 58 view .LVU47
 184 005e 922B      		or r25,r18
 185               	.LVL9:
 193:switch.c      ****   return 15-val;
 186               		.loc 1 193 3 is_stmt 1 view .LVU48
 194:switch.c      **** }
 187               		.loc 1 194 1 is_stmt 0 view .LVU49
 188 0060 8FE0      		ldi r24,lo8(15)
 189 0062 891B      		sub r24,r25
 190               	/* epilogue start */
 191 0064 0895      		ret
 192               		.cfi_endproc
 193               	.LFE5:
 195               	.global	read_function
 197               	read_function:
 198               	.LFB6:
 195:switch.c      **** 
 196:switch.c      **** uint8_t read_function() {
 199               		.loc 1 196 25 is_stmt 1 view -0
 200               		.cfi_startproc
 201               	/* prologue: function */
 202               	/* frame size = 0 */
 203               	/* stack size = 0 */
 204               	.L__stack_usage = 0
 197:switch.c      ****   uint8_t val;
 205               		.loc 1 197 3 view .LVU51
 198:switch.c      **** 
 199:switch.c      ****   val = FUNC_PIN;
 206               		.loc 1 199 3 view .LVU52
 207               		.loc 1 199 7 is_stmt 0 view .LVU53
 208 0066 89B3      		in r24,0x19
 209               	.LVL10:
 200:switch.c      ****   val = (val >> 2) & 0xF;
 210               		.loc 1 200 3 is_stmt 1 view .LVU54
 211               		.loc 1 200 20 is_stmt 0 view .LVU55
 212 0068 8695      		lsr r24
 213 006a 8695      		lsr r24
 214               	.LVL11:
 201:switch.c      **** 
 202:switch.c      ****   return val;
 215               		.loc 1 202 3 is_stmt 1 view .LVU56
 203:switch.c      **** }
 216               		.loc 1 203 1 is_stmt 0 view .LVU57
 217 006c 8F70      		andi r24,lo8(15)
 218               	.LVL12:
 219               	/* epilogue start */
 220               		.loc 1 203 1 view .LVU58
 221 006e 0895      		ret
 222               		.cfi_endproc
 223               	.LFE6:
 225               	.global	read_switches
 227               	read_switches:
 228               	.LFB1:
  88:switch.c      ****   uint8_t i, s, l, t;
 229               		.loc 1 88 26 is_stmt 1 view -0
 230               		.cfi_startproc
 231 0070 AF92      		push r10
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 10, -2
 234 0072 BF92      		push r11
 235               		.cfi_def_cfa_offset 4
 236               		.cfi_offset 11, -3
 237 0074 DF92      		push r13
 238               		.cfi_def_cfa_offset 5
 239               		.cfi_offset 13, -4
 240 0076 EF92      		push r14
 241               		.cfi_def_cfa_offset 6
 242               		.cfi_offset 14, -5
 243 0078 FF92      		push r15
 244               		.cfi_def_cfa_offset 7
 245               		.cfi_offset 15, -6
 246 007a 0F93      		push r16
 247               		.cfi_def_cfa_offset 8
 248               		.cfi_offset 16, -7
 249 007c 1F93      		push r17
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 17, -8
 252 007e CF93      		push r28
 253               		.cfi_def_cfa_offset 10
 254               		.cfi_offset 28, -9
 255 0080 DF93      		push r29
 256               		.cfi_def_cfa_offset 11
 257               		.cfi_offset 29, -10
 258 0082 00D0      		rcall .
 259 0084 00D0      		rcall .
 260 0086 00D0      		rcall .
 261               		.cfi_def_cfa_offset 17
 262 0088 CDB7      		in r28,__SP_L__
 263 008a DEB7      		in r29,__SP_H__
 264               		.cfi_def_cfa_register 28
 265               	/* prologue: function */
 266               	/* frame size = 6 */
 267               	/* stack size = 15 */
 268               	.L__stack_usage = 15
  89:switch.c      ****   uint8_t temp_switches[3];
 269               		.loc 1 89 3 view .LVU60
  90:switch.c      ****   uint8_t keypress_switches[3];
 270               		.loc 1 90 3 view .LVU61
  91:switch.c      **** 
 271               		.loc 1 91 3 view .LVU62
  94:switch.c      ****     change_tempo(newtempo);
 272               		.loc 1 94 3 view .LVU63
  94:switch.c      ****     change_tempo(newtempo);
 273               		.loc 1 94 16 is_stmt 0 view .LVU64
 274 008c 2091 0000 		lds r18,newtempo
 275 0090 3091 0000 		lds r19,newtempo+1
 276 0094 8091 0000 		lds r24,tempo
 277 0098 9091 0000 		lds r25,tempo+1
  94:switch.c      ****     change_tempo(newtempo);
 278               		.loc 1 94 6 view .LVU65
 279 009c 2817      		cp r18,r24
 280 009e 3907      		cpc r19,r25
 281 00a0 01F0      		breq .L11
  95:switch.c      **** 
 282               		.loc 1 95 5 is_stmt 1 view .LVU66
 283 00a2 8091 0000 		lds r24,newtempo
 284 00a6 9091 0000 		lds r25,newtempo+1
 285 00aa 0E94 0000 		call change_tempo
 286               	.LVL13:
 287               	.L11:
  99:switch.c      ****       released_switches[i] = 0;
 288               		.loc 1 99 7 discriminator 1 view .LVU67
  99:switch.c      ****       released_switches[i] = 0;
 289               		.loc 1 99 27 is_stmt 0 discriminator 1 view .LVU68
 290 00ae 1092 0000 		sts pressed_switches,__zero_reg__
 100:switch.c      ****     }
 291               		.loc 1 100 7 is_stmt 1 discriminator 1 view .LVU69
 100:switch.c      ****     }
 292               		.loc 1 100 28 is_stmt 0 discriminator 1 view .LVU70
 293 00b2 1092 0000 		sts released_switches,__zero_reg__
 294               	.LVL14:
  99:switch.c      ****       released_switches[i] = 0;
 295               		.loc 1 99 7 is_stmt 1 discriminator 1 view .LVU71
  99:switch.c      ****       released_switches[i] = 0;
 296               		.loc 1 99 27 is_stmt 0 discriminator 1 view .LVU72
 297 00b6 1092 0000 		sts pressed_switches+1,__zero_reg__
 100:switch.c      ****     }
 298               		.loc 1 100 7 is_stmt 1 discriminator 1 view .LVU73
 100:switch.c      ****     }
 299               		.loc 1 100 28 is_stmt 0 discriminator 1 view .LVU74
 300 00ba 1092 0000 		sts released_switches+1,__zero_reg__
 301               	.LVL15:
  99:switch.c      ****       released_switches[i] = 0;
 302               		.loc 1 99 7 is_stmt 1 discriminator 1 view .LVU75
  99:switch.c      ****       released_switches[i] = 0;
 303               		.loc 1 99 27 is_stmt 0 discriminator 1 view .LVU76
 304 00be 1092 0000 		sts pressed_switches+2,__zero_reg__
 100:switch.c      ****     }
 305               		.loc 1 100 7 is_stmt 1 discriminator 1 view .LVU77
 100:switch.c      ****     }
 306               		.loc 1 100 28 is_stmt 0 discriminator 1 view .LVU78
 307 00c2 1092 0000 		sts released_switches+2,__zero_reg__
 308               	.LVL16:
 104:switch.c      ****     return;                // we only want to be called every 20 ms or more
 309               		.loc 1 104 3 is_stmt 1 discriminator 1 view .LVU79
 104:switch.c      ****     return;                // we only want to be called every 20 ms or more
 310               		.loc 1 104 22 is_stmt 0 discriminator 1 view .LVU80
 311 00c6 8091 0000 		lds r24,debounce_timer
 104:switch.c      ****     return;                // we only want to be called every 20 ms or more
 312               		.loc 1 104 6 discriminator 1 view .LVU81
 313 00ca 8431      		cpi r24,lo8(20)
 314 00cc 00F4      		brsh .+2
 315 00ce 00C0      		rjmp .L10
 107:switch.c      **** 
 316               		.loc 1 107 3 is_stmt 1 view .LVU82
 107:switch.c      **** 
 317               		.loc 1 107 18 is_stmt 0 view .LVU83
 318 00d0 1092 0000 		sts debounce_timer,__zero_reg__
 109:switch.c      **** 
 319               		.loc 1 109 3 is_stmt 1 view .LVU84
 320 00d4 0E94 0000 		call select_bank_read
 321               	.LVL17:
 111:switch.c      ****   keypress_switches[0] = switches[0];
 322               		.loc 1 111 3 view .LVU85
 323 00d8 CE01      		movw r24,r28
 324 00da 0496      		adiw r24,4
 325 00dc 0E94 0000 		call read_keypad
 326               	.LVL18:
 112:switch.c      ****   keypress_switches[1] = switches[1];
 327               		.loc 1 112 3 view .LVU86
 112:switch.c      ****   keypress_switches[1] = switches[1];
 328               		.loc 1 112 24 is_stmt 0 view .LVU87
 329 00e0 8091 0000 		lds r24,switches
 330 00e4 8983      		std Y+1,r24
 113:switch.c      ****   keypress_switches[2] = switches[2];
 331               		.loc 1 113 3 is_stmt 1 view .LVU88
 113:switch.c      ****   keypress_switches[2] = switches[2];
 332               		.loc 1 113 24 is_stmt 0 view .LVU89
 333 00e6 8091 0000 		lds r24,switches+1
 334 00ea 8A83      		std Y+2,r24
 114:switch.c      ****   for (i=0; i<24; i++) {
 335               		.loc 1 114 3 is_stmt 1 view .LVU90
 114:switch.c      ****   for (i=0; i<24; i++) {
 336               		.loc 1 114 24 is_stmt 0 view .LVU91
 337 00ec 8091 0000 		lds r24,switches+2
 338 00f0 8B83      		std Y+3,r24
 115:switch.c      ****     s = (switches[i/8] & (1 <<(i % 8)));
 339               		.loc 1 115 3 is_stmt 1 view .LVU92
 340               	.LVL19:
 115:switch.c      ****     s = (switches[i/8] & (1 <<(i % 8)));
 341               		.loc 1 115 9 is_stmt 0 view .LVU93
 342 00f2 90E0      		ldi r25,0
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 343               		.loc 1 116 29 view .LVU94
 344 00f4 41E0      		ldi r20,lo8(1)
 345 00f6 50E0      		ldi r21,0
 346               	.LVL20:
 347               	.L16:
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 348               		.loc 1 116 5 is_stmt 1 view .LVU95
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 349               		.loc 1 116 20 is_stmt 0 view .LVU96
 350 00f8 292F      		mov r18,r25
 351 00fa 2695      		lsr r18
 352 00fc 2695      		lsr r18
 353 00fe 2695      		lsr r18
 354 0100 30E0      		ldi r19,0
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 355               		.loc 1 116 18 view .LVU97
 356 0102 F901      		movw r30,r18
 357 0104 E050      		subi r30,lo8(-(switches))
 358 0106 F040      		sbci r31,hi8(-(switches))
 359 0108 F080      		ld r15,Z
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 360               		.loc 1 116 34 view .LVU98
 361 010a 892F      		mov r24,r25
 362 010c 8770      		andi r24,lo8(7)
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 363               		.loc 1 116 29 view .LVU99
 364 010e BA01      		movw r22,r20
 365 0110 00C0      		rjmp 2f
 366               		1:
 367 0112 660F      		lsl r22
 368               		2:
 369 0114 8A95      		dec r24
 370 0116 02F4      		brpl 1b
 371               	.LVL21:
 117:switch.c      ****     t = (temp_switches[i/8] & (1 <<(i % 8)));
 372               		.loc 1 117 5 is_stmt 1 view .LVU100
 117:switch.c      ****     t = (temp_switches[i/8] & (1 <<(i % 8)));
 373               		.loc 1 117 23 is_stmt 0 view .LVU101
 374 0118 8901      		movw r16,r18
 375 011a 0050      		subi r16,lo8(-(last_switches))
 376 011c 1040      		sbci r17,hi8(-(last_switches))
 377 011e D801      		movw r26,r16
 378 0120 8C91      		ld r24,X
 379               	.LVL22:
 118:switch.c      ****     //printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
 380               		.loc 1 118 5 is_stmt 1 view .LVU102
 118:switch.c      ****     //printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
 381               		.loc 1 118 23 is_stmt 0 view .LVU103
 382 0122 A4E0      		ldi r26,lo8(4)
 383 0124 B0E0      		ldi r27,0
 384 0126 AC0F      		add r26,r28
 385 0128 BD1F      		adc r27,r29
 386 012a 2A0F      		add r18,r26
 387 012c 3B1F      		adc r19,r27
 388 012e D901      		movw r26,r18
 389 0130 3C91      		ld r19,X
 390               	.LVL23:
 120:switch.c      ****       switches[i/8] = (switches[i/8] & ~(1 << (i % 8))) | (l | t);
 391               		.loc 1 120 5 is_stmt 1 view .LVU104
 392 0132 262F      		mov r18,r22
 393 0134 2095      		com r18
 394 0136 2F21      		and r18,r15
 116:switch.c      ****     l = (last_switches[i/8] & (1 <<(i % 8)));
 395               		.loc 1 116 24 is_stmt 0 view .LVU105
 396 0138 AF2D      		mov r26,r15
 397 013a A623      		and r26,r22
 120:switch.c      ****       switches[i/8] = (switches[i/8] & ~(1 << (i % 8))) | (l | t);
 398               		.loc 1 120 8 view .LVU106
 399 013c 01F4      		brne .+2
 400 013e 00C0      		rjmp .L14
 121:switch.c      ****     } else {
 401               		.loc 1 121 7 is_stmt 1 view .LVU107
 121:switch.c      ****     } else {
 402               		.loc 1 121 57 is_stmt 0 view .LVU108
 403 0140 832B      		or r24,r19
 404               	.LVL24:
 121:switch.c      ****     } else {
 405               		.loc 1 121 57 view .LVU109
 406 0142 8623      		and r24,r22
 407               	.L22:
 123:switch.c      ****     }
 408               		.loc 1 123 57 view .LVU110
 409 0144 822B      		or r24,r18
 123:switch.c      ****     }
 410               		.loc 1 123 21 view .LVU111
 411 0146 8083      		st Z,r24
 115:switch.c      ****     s = (switches[i/8] & (1 <<(i % 8)));
 412               		.loc 1 115 20 view .LVU112
 413 0148 9F5F      		subi r25,lo8(-(1))
 414               	.LVL25:
 115:switch.c      ****     s = (switches[i/8] & (1 <<(i % 8)));
 415               		.loc 1 115 3 view .LVU113
 416 014a 9831      		cpi r25,lo8(24)
 417 014c 01F4      		brne .L16
 127:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 418               		.loc 1 127 3 is_stmt 1 view .LVU114
 127:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 419               		.loc 1 127 7 is_stmt 0 view .LVU115
 420 014e 0E94 0000 		call read_bank
 421               	.LVL26:
 128:switch.c      ****     bank = i;
 422               		.loc 1 128 3 is_stmt 1 view .LVU116
 128:switch.c      ****     bank = i;
 423               		.loc 1 128 6 is_stmt 0 view .LVU117
 424 0152 9091 0000 		lds r25,bank
 425 0156 9817      		cp r25,r24
 426 0158 01F0      		breq .L17
 128:switch.c      ****     bank = i;
 427               		.loc 1 128 19 discriminator 1 view .LVU118
 428 015a 9091 0000 		lds r25,last_bank
 429 015e 9813      		cpse r25,r24
 430 0160 00C0      		rjmp .L17
 129:switch.c      ****     bank_switched = 1;
 431               		.loc 1 129 5 is_stmt 1 view .LVU119
 129:switch.c      ****     bank_switched = 1;
 432               		.loc 1 129 10 is_stmt 0 view .LVU120
 433 0162 8093 0000 		sts bank,r24
 130:switch.c      ****     //putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 434               		.loc 1 130 5 is_stmt 1 view .LVU121
 130:switch.c      ****     //putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 435               		.loc 1 130 19 is_stmt 0 view .LVU122
 436 0166 91E0      		ldi r25,lo8(1)
 437 0168 9093 0000 		sts bank_switched,r25
 438               	.L17:
 133:switch.c      **** 
 439               		.loc 1 133 3 is_stmt 1 view .LVU123
 133:switch.c      **** 
 440               		.loc 1 133 13 is_stmt 0 view .LVU124
 441 016c 8093 0000 		sts last_bank,r24
 135:switch.c      **** 
 442               		.loc 1 135 3 is_stmt 1 view .LVU125
 443 0170 0E94 0000 		call select_func_read
 444               	.LVL27:
 137:switch.c      ****     last_switches[i] = temp_switches[i];
 445               		.loc 1 137 3 view .LVU126
 137:switch.c      ****     last_switches[i] = temp_switches[i];
 446               		.loc 1 137 3 is_stmt 0 view .LVU127
 447 0174 FE01      		movw r30,r28
 448 0176 3496      		adiw r30,4
 449 0178 00E0      		ldi r16,lo8(last_switches)
 450 017a 10E0      		ldi r17,hi8(last_switches)
 451 017c BE01      		movw r22,r28
 452 017e 6F5F      		subi r22,-1
 453 0180 7F4F      		sbci r23,-1
 454 0182 40E0      		ldi r20,lo8(switches)
 455 0184 50E0      		ldi r21,hi8(switches)
 456 0186 20E0      		ldi r18,lo8(pressed_switches)
 457 0188 30E0      		ldi r19,hi8(pressed_switches)
 458 018a 80E0      		ldi r24,lo8(released_switches)
 459 018c A82E      		mov r10,r24
 460 018e 80E0      		ldi r24,hi8(released_switches)
 461 0190 B82E      		mov r11,r24
 462 0192 7E01      		movw r14,r28
 463 0194 B7E0      		ldi r27,7
 464 0196 EB0E      		add r14,r27
 465 0198 F11C      		adc r15,__zero_reg__
 466               	.LVL28:
 467               	.L18:
 138:switch.c      **** 
 468               		.loc 1 138 5 is_stmt 1 discriminator 3 view .LVU128
 138:switch.c      **** 
 469               		.loc 1 138 37 is_stmt 0 discriminator 3 view .LVU129
 470 019a 8191      		ld r24,Z+
 138:switch.c      **** 
 471               		.loc 1 138 22 discriminator 3 view .LVU130
 472 019c D801      		movw r26,r16
 473 019e 8D93      		st X+,r24
 474 01a0 8D01      		movw r16,r26
 140:switch.c      ****     released_switches[i] = (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 475               		.loc 1 140 5 is_stmt 1 discriminator 3 view .LVU131
 140:switch.c      ****     released_switches[i] = (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 476               		.loc 1 140 45 is_stmt 0 discriminator 3 view .LVU132
 477 01a2 DB01      		movw r26,r22
 478 01a4 DD90      		ld r13,X+
 479 01a6 BD01      		movw r22,r26
 140:switch.c      ****     released_switches[i] = (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 480               		.loc 1 140 59 discriminator 3 view .LVU133
 481 01a8 DA01      		movw r26,r20
 482 01aa 8D91      		ld r24,X+
 483 01ac AD01      		movw r20,r26
 140:switch.c      ****     released_switches[i] = (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 484               		.loc 1 140 25 discriminator 3 view .LVU134
 485 01ae 9D2D      		mov r25,r13
 486 01b0 9095      		com r25
 487 01b2 9823      		and r25,r24
 488 01b4 D901      		movw r26,r18
 489 01b6 9D93      		st X+,r25
 490 01b8 9D01      		movw r18,r26
 141:switch.c      ****   }
 491               		.loc 1 141 5 is_stmt 1 discriminator 3 view .LVU135
 141:switch.c      ****   }
 492               		.loc 1 141 26 is_stmt 0 discriminator 3 view .LVU136
 493 01ba 8095      		com r24
 494 01bc 8D21      		and r24,r13
 495 01be D501      		movw r26,r10
 496 01c0 8D93      		st X+,r24
 497 01c2 5D01      		movw r10,r26
 137:switch.c      ****     last_switches[i] = temp_switches[i];
 498               		.loc 1 137 3 discriminator 3 view .LVU137
 499 01c4 EE16      		cp r14,r30
 500 01c6 FF06      		cpc r15,r31
 501 01c8 01F4      		brne .L18
 149:switch.c      ****   if ((i != function) && (i == last_func)) {
 502               		.loc 1 149 3 is_stmt 1 view .LVU138
 149:switch.c      ****   if ((i != function) && (i == last_func)) {
 503               		.loc 1 149 7 is_stmt 0 view .LVU139
 504 01ca 0E94 0000 		call read_function
 505               	.LVL29:
 150:switch.c      ****     function = i;
 506               		.loc 1 150 3 is_stmt 1 view .LVU140
 150:switch.c      ****     function = i;
 507               		.loc 1 150 6 is_stmt 0 view .LVU141
 508 01ce 9091 0000 		lds r25,function
 509 01d2 9817      		cp r25,r24
 510 01d4 01F0      		breq .L19
 150:switch.c      ****     function = i;
 511               		.loc 1 150 23 discriminator 1 view .LVU142
 512 01d6 9091 0000 		lds r25,last_func
 513 01da 9813      		cpse r25,r24
 514 01dc 00C0      		rjmp .L19
 151:switch.c      ****     //putstring("Function #"); putnum_ud(function); putstring("\n\r");
 515               		.loc 1 151 5 is_stmt 1 view .LVU143
 151:switch.c      ****     //putstring("Function #"); putnum_ud(function); putstring("\n\r");
 516               		.loc 1 151 14 is_stmt 0 view .LVU144
 517 01de 8093 0000 		sts function,r24
 518               	.L19:
 154:switch.c      **** 
 519               		.loc 1 154 3 is_stmt 1 view .LVU145
 154:switch.c      **** 
 520               		.loc 1 154 13 is_stmt 0 view .LVU146
 521 01e2 8093 0000 		sts last_func,r24
 156:switch.c      **** }
 522               		.loc 1 156 3 is_stmt 1 view .LVU147
 523 01e6 0E94 0000 		call clock_leds
 524               	.LVL30:
 525               	.L10:
 526               	/* epilogue start */
 157:switch.c      **** 
 527               		.loc 1 157 1 is_stmt 0 view .LVU148
 528 01ea 2696      		adiw r28,6
 529 01ec 0FB6      		in __tmp_reg__,__SREG__
 530 01ee F894      		cli
 531 01f0 DEBF      		out __SP_H__,r29
 532 01f2 0FBE      		out __SREG__,__tmp_reg__
 533 01f4 CDBF      		out __SP_L__,r28
 534 01f6 DF91      		pop r29
 535 01f8 CF91      		pop r28
 536 01fa 1F91      		pop r17
 537 01fc 0F91      		pop r16
 538 01fe FF90      		pop r15
 539 0200 EF90      		pop r14
 540 0202 DF90      		pop r13
 541 0204 BF90      		pop r11
 542 0206 AF90      		pop r10
 543 0208 0895      		ret
 544               	.LVL31:
 545               	.L14:
 123:switch.c      ****     }
 546               		.loc 1 123 7 is_stmt 1 view .LVU149
 117:switch.c      ****     t = (temp_switches[i/8] & (1 <<(i % 8)));
 547               		.loc 1 117 29 is_stmt 0 view .LVU150
 548 020a 8623      		and r24,r22
 549               	.LVL32:
 123:switch.c      ****     }
 550               		.loc 1 123 57 view .LVU151
 551 020c 8323      		and r24,r19
 552 020e 00C0      		rjmp .L22
 553               		.cfi_endproc
 554               	.LFE1:
 556               	.global	key_action
 558               	key_action:
 559               	.LVL33:
 560               	.LFB7:
 204:switch.c      **** 
 205:switch.c      **** // prototype for key pressing/releasing detection
 206:switch.c      **** uint8_t key_action(uint8_t key, uint8_t* keyvec) { 
 561               		.loc 1 206 50 is_stmt 1 view -0
 562               		.cfi_startproc
 563               	/* prologue: function */
 564               	/* frame size = 0 */
 565               	/* stack size = 0 */
 566               	.L__stack_usage = 0
 567               		.loc 1 206 50 is_stmt 0 view .LVU153
 568 0210 282F      		mov r18,r24
 207:switch.c      ****   if (key >= 24)
 569               		.loc 1 207 3 is_stmt 1 view .LVU154
 570               		.loc 1 207 6 is_stmt 0 view .LVU155
 571 0212 2831      		cpi r18,lo8(24)
 572 0214 00F4      		brsh .L25
 208:switch.c      ****     return 0;
 209:switch.c      **** 
 210:switch.c      ****   if ((keyvec[key/8] & (1 << key%8)) != 0)
 573               		.loc 1 210 3 is_stmt 1 view .LVU156
 574               		.loc 1 210 18 is_stmt 0 view .LVU157
 575 0216 E22F      		mov r30,r18
 576 0218 E695      		lsr r30
 577 021a E695      		lsr r30
 578 021c E695      		lsr r30
 579               		.loc 1 210 14 view .LVU158
 580 021e E60F      		add r30,r22
 581 0220 F72F      		mov r31,r23
 582 0222 F11D      		adc r31,__zero_reg__
 583 0224 9081      		ld r25,Z
 584 0226 892F      		mov r24,r25
 585               	.LVL34:
 586               		.loc 1 210 14 view .LVU159
 587 0228 90E0      		ldi r25,0
 588               		.loc 1 210 33 view .LVU160
 589 022a 2770      		andi r18,lo8(7)
 590               	.LVL35:
 591               		.loc 1 210 38 view .LVU161
 592 022c 00C0      		rjmp 2f
 593               		1:
 594 022e 9595      		asr r25
 595 0230 8795      		ror r24
 596               		2:
 597 0232 2A95      		dec r18
 598 0234 02F4      		brpl 1b
 599               		.loc 1 210 6 view .LVU162
 600 0236 8170      		andi r24,lo8(1)
 601 0238 0895      		ret
 602               	.LVL36:
 603               	.L25:
 208:switch.c      ****     return 0;
 604               		.loc 1 208 12 view .LVU163
 605 023a 80E0      		ldi r24,0
 606               	/* epilogue start */
 211:switch.c      ****     return 1;
 212:switch.c      ****   else
 213:switch.c      ****     return 0;
 214:switch.c      **** }
 607               		.loc 1 214 1 view .LVU164
 608 023c 0895      		ret
 609               		.cfi_endproc
 610               	.LFE7:
 612               	.global	is_pressed
 614               	is_pressed:
 615               	.LVL37:
 616               	.LFB8:
 215:switch.c      **** 
 216:switch.c      **** // returns 1 if that key is pressed
 217:switch.c      **** uint8_t is_pressed(uint8_t key) { 
 617               		.loc 1 217 33 is_stmt 1 view -0
 618               		.cfi_startproc
 619               	/* prologue: function */
 620               	/* frame size = 0 */
 621               	/* stack size = 0 */
 622               	.L__stack_usage = 0
 218:switch.c      ****   return key_action(key, switches);
 623               		.loc 1 218 3 view .LVU166
 624               		.loc 1 218 10 is_stmt 0 view .LVU167
 625 023e 60E0      		ldi r22,lo8(switches)
 626 0240 70E0      		ldi r23,hi8(switches)
 627 0242 0E94 0000 		call key_action
 628               	.LVL38:
 629               	/* epilogue start */
 219:switch.c      **** }
 630               		.loc 1 219 1 view .LVU168
 631 0246 0895      		ret
 632               		.cfi_endproc
 633               	.LFE8:
 636               	get_lowest_key_pressed:
 637               	.LVL39:
 638               	.LFB12:
 220:switch.c      **** 
 221:switch.c      **** uint8_t just_pressed(uint8_t key) { 
 222:switch.c      ****   return key_action(key, pressed_switches);
 223:switch.c      **** }
 224:switch.c      **** 
 225:switch.c      **** uint8_t just_released(uint8_t key) { 
 226:switch.c      ****   return key_action(key, released_switches);
 227:switch.c      **** }
 228:switch.c      **** 
 229:switch.c      **** uint8_t no_keys_pressed(void) {
 230:switch.c      ****   if ((switches[0] == 0) && (switches[1] == 0) && (switches[2] == 0))
 231:switch.c      ****     return 1;
 232:switch.c      ****   return 0;
 233:switch.c      **** }
 234:switch.c      **** 
 235:switch.c      **** static uint8_t get_lowest_key_pressed(const uint8_t* key_tab, uint8_t size) {
 639               		.loc 1 235 77 is_stmt 1 view -0
 640               		.cfi_startproc
 641               		.loc 1 235 77 is_stmt 0 view .LVU170
 642 0248 0F93      		push r16
 643               		.cfi_def_cfa_offset 3
 644               		.cfi_offset 16, -2
 645 024a 1F93      		push r17
 646               		.cfi_def_cfa_offset 4
 647               		.cfi_offset 17, -3
 648 024c CF93      		push r28
 649               		.cfi_def_cfa_offset 5
 650               		.cfi_offset 28, -4
 651 024e DF93      		push r29
 652               		.cfi_def_cfa_offset 6
 653               		.cfi_offset 29, -5
 654               	/* prologue: function */
 655               	/* frame size = 0 */
 656               	/* stack size = 4 */
 657               	.L__stack_usage = 4
 658 0250 D62F      		mov r29,r22
 236:switch.c      ****   uint8_t i;
 659               		.loc 1 236 3 is_stmt 1 view .LVU171
 237:switch.c      ****   for (i = 0; i < size; i++) {
 660               		.loc 1 237 3 view .LVU172
 661               	.LVL40:
 662               		.loc 1 237 3 is_stmt 0 view .LVU173
 663 0252 8C01      		movw r16,r24
 664               		.loc 1 237 10 view .LVU174
 665 0254 C0E0      		ldi r28,0
 666               	.LVL41:
 667               	.L29:
 238:switch.c      ****     if (is_pressed(key_tab[i]))
 668               		.loc 1 238 5 is_stmt 1 view .LVU175
 669               		.loc 1 238 9 is_stmt 0 view .LVU176
 670 0256 F801      		movw r30,r16
 671 0258 8191      		ld r24,Z+
 672 025a 8F01      		movw r16,r30
 673 025c 0E94 0000 		call is_pressed
 674               	.LVL42:
 675 0260 CF5F      		subi r28,lo8(-(1))
 676               	.LVL43:
 677               		.loc 1 238 8 view .LVU177
 678 0262 8111      		cpse r24,__zero_reg__
 679 0264 00C0      		rjmp .L27
 680               	.LVL44:
 237:switch.c      ****   for (i = 0; i < size; i++) {
 681               		.loc 1 237 3 discriminator 2 view .LVU178
 682 0266 CD13      		cpse r28,r29
 683 0268 00C0      		rjmp .L29
 239:switch.c      ****       return i+1;
 240:switch.c      ****   }
 241:switch.c      ****   return 0;
 684               		.loc 1 241 10 view .LVU179
 685 026a C0E0      		ldi r28,0
 686               	.LVL45:
 687               	.L27:
 242:switch.c      **** }
 688               		.loc 1 242 1 view .LVU180
 689 026c 8C2F      		mov r24,r28
 690               	/* epilogue start */
 691 026e DF91      		pop r29
 692               	.LVL46:
 693               		.loc 1 242 1 view .LVU181
 694 0270 CF91      		pop r28
 695 0272 1F91      		pop r17
 696 0274 0F91      		pop r16
 697 0276 0895      		ret
 698               		.cfi_endproc
 699               	.LFE12:
 701               	.global	just_pressed
 703               	just_pressed:
 704               	.LVL47:
 705               	.LFB9:
 221:switch.c      ****   return key_action(key, pressed_switches);
 706               		.loc 1 221 35 is_stmt 1 view -0
 707               		.cfi_startproc
 708               	/* prologue: function */
 709               	/* frame size = 0 */
 710               	/* stack size = 0 */
 711               	.L__stack_usage = 0
 222:switch.c      **** }
 712               		.loc 1 222 3 view .LVU183
 222:switch.c      **** }
 713               		.loc 1 222 10 is_stmt 0 view .LVU184
 714 0278 60E0      		ldi r22,lo8(pressed_switches)
 715 027a 70E0      		ldi r23,hi8(pressed_switches)
 716 027c 0E94 0000 		call key_action
 717               	.LVL48:
 718               	/* epilogue start */
 223:switch.c      **** 
 719               		.loc 1 223 1 view .LVU185
 720 0280 0895      		ret
 721               		.cfi_endproc
 722               	.LFE9:
 725               	get_lowest_key_just_pressed:
 726               	.LVL49:
 727               	.LFB15:
 243:switch.c      **** 
 244:switch.c      **** int8_t get_lowest_notekey_pressed(void) {
 245:switch.c      ****   return get_lowest_key_pressed(loopkey_tab, 13)-1;
 246:switch.c      **** }
 247:switch.c      **** 
 248:switch.c      **** uint8_t get_lowest_numkey_pressed(void) {
 249:switch.c      ****   return get_lowest_key_pressed(numkey_tab, 8);
 250:switch.c      **** }
 251:switch.c      **** 
 252:switch.c      **** 
 253:switch.c      **** static uint8_t get_lowest_key_just_pressed(const uint8_t* key_tab, uint8_t size) {
 728               		.loc 1 253 82 is_stmt 1 view -0
 729               		.cfi_startproc
 730               		.loc 1 253 82 is_stmt 0 view .LVU187
 731 0282 0F93      		push r16
 732               		.cfi_def_cfa_offset 3
 733               		.cfi_offset 16, -2
 734 0284 1F93      		push r17
 735               		.cfi_def_cfa_offset 4
 736               		.cfi_offset 17, -3
 737 0286 CF93      		push r28
 738               		.cfi_def_cfa_offset 5
 739               		.cfi_offset 28, -4
 740 0288 DF93      		push r29
 741               		.cfi_def_cfa_offset 6
 742               		.cfi_offset 29, -5
 743               	/* prologue: function */
 744               	/* frame size = 0 */
 745               	/* stack size = 4 */
 746               	.L__stack_usage = 4
 747 028a D62F      		mov r29,r22
 254:switch.c      ****   uint8_t i;
 748               		.loc 1 254 3 is_stmt 1 view .LVU188
 255:switch.c      ****   for (i = 0; i < size; i++) {
 749               		.loc 1 255 3 view .LVU189
 750               	.LVL50:
 751               		.loc 1 255 3 is_stmt 0 view .LVU190
 752 028c 8C01      		movw r16,r24
 753               		.loc 1 255 10 view .LVU191
 754 028e C0E0      		ldi r28,0
 755               	.LVL51:
 756               	.L34:
 256:switch.c      ****     if (just_pressed(key_tab[i]))
 757               		.loc 1 256 5 is_stmt 1 view .LVU192
 758               		.loc 1 256 9 is_stmt 0 view .LVU193
 759 0290 F801      		movw r30,r16
 760 0292 8191      		ld r24,Z+
 761 0294 8F01      		movw r16,r30
 762 0296 0E94 0000 		call just_pressed
 763               	.LVL52:
 764 029a CF5F      		subi r28,lo8(-(1))
 765               	.LVL53:
 766               		.loc 1 256 8 view .LVU194
 767 029c 8111      		cpse r24,__zero_reg__
 768 029e 00C0      		rjmp .L32
 769               	.LVL54:
 255:switch.c      ****   for (i = 0; i < size; i++) {
 770               		.loc 1 255 3 discriminator 2 view .LVU195
 771 02a0 CD13      		cpse r28,r29
 772 02a2 00C0      		rjmp .L34
 257:switch.c      ****       return i+1;
 258:switch.c      ****   }
 259:switch.c      ****   return 0;
 773               		.loc 1 259 10 view .LVU196
 774 02a4 C0E0      		ldi r28,0
 775               	.LVL55:
 776               	.L32:
 260:switch.c      **** }
 777               		.loc 1 260 1 view .LVU197
 778 02a6 8C2F      		mov r24,r28
 779               	/* epilogue start */
 780 02a8 DF91      		pop r29
 781               	.LVL56:
 782               		.loc 1 260 1 view .LVU198
 783 02aa CF91      		pop r28
 784 02ac 1F91      		pop r17
 785 02ae 0F91      		pop r16
 786 02b0 0895      		ret
 787               		.cfi_endproc
 788               	.LFE15:
 790               	.global	just_released
 792               	just_released:
 793               	.LVL57:
 794               	.LFB10:
 225:switch.c      ****   return key_action(key, released_switches);
 795               		.loc 1 225 36 is_stmt 1 view -0
 796               		.cfi_startproc
 797               	/* prologue: function */
 798               	/* frame size = 0 */
 799               	/* stack size = 0 */
 800               	.L__stack_usage = 0
 226:switch.c      **** }
 801               		.loc 1 226 3 view .LVU200
 226:switch.c      **** }
 802               		.loc 1 226 10 is_stmt 0 view .LVU201
 803 02b2 60E0      		ldi r22,lo8(released_switches)
 804 02b4 70E0      		ldi r23,hi8(released_switches)
 805 02b6 0E94 0000 		call key_action
 806               	.LVL58:
 807               	/* epilogue start */
 227:switch.c      **** 
 808               		.loc 1 227 1 view .LVU202
 809 02ba 0895      		ret
 810               		.cfi_endproc
 811               	.LFE10:
 813               	.global	no_keys_pressed
 815               	no_keys_pressed:
 816               	.LFB11:
 229:switch.c      ****   if ((switches[0] == 0) && (switches[1] == 0) && (switches[2] == 0))
 817               		.loc 1 229 31 is_stmt 1 view -0
 818               		.cfi_startproc
 819               	/* prologue: function */
 820               	/* frame size = 0 */
 821               	/* stack size = 0 */
 822               	.L__stack_usage = 0
 230:switch.c      ****     return 1;
 823               		.loc 1 230 3 view .LVU204
 230:switch.c      ****     return 1;
 824               		.loc 1 230 48 is_stmt 0 view .LVU205
 825 02bc 9091 0000 		lds r25,switches
 826 02c0 8091 0000 		lds r24,switches+1
 827 02c4 982B      		or r25,r24
 828 02c6 8091 0000 		lds r24,switches+2
 829 02ca 982B      		or r25,r24
 830 02cc 81E0      		ldi r24,lo8(1)
 831 02ce 01F0      		breq .L38
 832 02d0 80E0      		ldi r24,0
 833               	.L38:
 834               	/* epilogue start */
 233:switch.c      **** 
 835               		.loc 1 233 1 view .LVU206
 836 02d2 0895      		ret
 837               		.cfi_endproc
 838               	.LFE11:
 840               	.global	get_lowest_notekey_pressed
 842               	get_lowest_notekey_pressed:
 843               	.LFB13:
 244:switch.c      ****   return get_lowest_key_pressed(loopkey_tab, 13)-1;
 844               		.loc 1 244 41 is_stmt 1 view -0
 845               		.cfi_startproc
 846               	/* prologue: function */
 847               	/* frame size = 0 */
 848               	/* stack size = 0 */
 849               	.L__stack_usage = 0
 245:switch.c      **** }
 850               		.loc 1 245 3 view .LVU208
 245:switch.c      **** }
 851               		.loc 1 245 10 is_stmt 0 view .LVU209
 852 02d4 6DE0      		ldi r22,lo8(13)
 853 02d6 80E0      		ldi r24,lo8(loopkey_tab)
 854 02d8 90E0      		ldi r25,hi8(loopkey_tab)
 855 02da 0E94 0000 		call get_lowest_key_pressed
 856               	.LVL59:
 246:switch.c      **** 
 857               		.loc 1 246 1 view .LVU210
 858 02de 8150      		subi r24,lo8(-(-1))
 859               	/* epilogue start */
 860 02e0 0895      		ret
 861               		.cfi_endproc
 862               	.LFE13:
 864               	.global	get_lowest_numkey_pressed
 866               	get_lowest_numkey_pressed:
 867               	.LFB14:
 248:switch.c      ****   return get_lowest_key_pressed(numkey_tab, 8);
 868               		.loc 1 248 41 is_stmt 1 view -0
 869               		.cfi_startproc
 870               	/* prologue: function */
 871               	/* frame size = 0 */
 872               	/* stack size = 0 */
 873               	.L__stack_usage = 0
 249:switch.c      **** }
 874               		.loc 1 249 3 view .LVU212
 249:switch.c      **** }
 875               		.loc 1 249 10 is_stmt 0 view .LVU213
 876 02e2 68E0      		ldi r22,lo8(8)
 877 02e4 80E0      		ldi r24,lo8(numkey_tab)
 878 02e6 90E0      		ldi r25,hi8(numkey_tab)
 879 02e8 0E94 0000 		call get_lowest_key_pressed
 880               	.LVL60:
 881               	/* epilogue start */
 250:switch.c      **** 
 882               		.loc 1 250 1 view .LVU214
 883 02ec 0895      		ret
 884               		.cfi_endproc
 885               	.LFE14:
 887               	.global	get_lowest_numkey_just_pressed
 889               	get_lowest_numkey_just_pressed:
 890               	.LFB16:
 261:switch.c      **** 
 262:switch.c      **** uint8_t get_lowest_numkey_just_pressed(void) {
 891               		.loc 1 262 46 is_stmt 1 view -0
 892               		.cfi_startproc
 893               	/* prologue: function */
 894               	/* frame size = 0 */
 895               	/* stack size = 0 */
 896               	.L__stack_usage = 0
 263:switch.c      ****   return get_lowest_key_just_pressed(numkey_tab, 8);
 897               		.loc 1 263 3 view .LVU216
 898               		.loc 1 263 10 is_stmt 0 view .LVU217
 899 02ee 68E0      		ldi r22,lo8(8)
 900 02f0 80E0      		ldi r24,lo8(numkey_tab)
 901 02f2 90E0      		ldi r25,hi8(numkey_tab)
 902 02f4 0E94 0000 		call get_lowest_key_just_pressed
 903               	.LVL61:
 904               	/* epilogue start */
 264:switch.c      **** }
 905               		.loc 1 264 1 view .LVU218
 906 02f8 0895      		ret
 907               		.cfi_endproc
 908               	.LFE16:
 910               	.global	get_lowest_loopkey_just_pressed
 912               	get_lowest_loopkey_just_pressed:
 913               	.LFB17:
 265:switch.c      **** 
 266:switch.c      **** uint8_t get_lowest_loopkey_just_pressed(void) {
 914               		.loc 1 266 47 is_stmt 1 view -0
 915               		.cfi_startproc
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 0 */
 919               	.L__stack_usage = 0
 267:switch.c      ****   return get_lowest_key_just_pressed(loopkey_tab, 16);
 920               		.loc 1 267 3 view .LVU220
 921               		.loc 1 267 10 is_stmt 0 view .LVU221
 922 02fa 60E1      		ldi r22,lo8(16)
 923 02fc 80E0      		ldi r24,lo8(loopkey_tab)
 924 02fe 90E0      		ldi r25,hi8(loopkey_tab)
 925 0300 0E94 0000 		call get_lowest_key_just_pressed
 926               	.LVL62:
 927               	/* epilogue start */
 268:switch.c      **** }
 928               		.loc 1 268 1 view .LVU222
 929 0304 0895      		ret
 930               		.cfi_endproc
 931               	.LFE17:
 933               	.global	get_lowest_notekey_just_pressed
 935               	get_lowest_notekey_just_pressed:
 936               	.LFB18:
 269:switch.c      **** 
 270:switch.c      **** uint8_t get_lowest_notekey_just_pressed(void) {
 937               		.loc 1 270 47 is_stmt 1 view -0
 938               		.cfi_startproc
 939               	/* prologue: function */
 940               	/* frame size = 0 */
 941               	/* stack size = 0 */
 942               	.L__stack_usage = 0
 271:switch.c      ****   return get_lowest_key_just_pressed(loopkey_tab, 13);
 943               		.loc 1 271 3 view .LVU224
 944               		.loc 1 271 10 is_stmt 0 view .LVU225
 945 0306 6DE0      		ldi r22,lo8(13)
 946 0308 80E0      		ldi r24,lo8(loopkey_tab)
 947 030a 90E0      		ldi r25,hi8(loopkey_tab)
 948 030c 0E94 0000 		call get_lowest_key_just_pressed
 949               	.LVL63:
 950               	/* epilogue start */
 272:switch.c      **** }
 951               		.loc 1 272 1 view .LVU226
 952 0310 0895      		ret
 953               		.cfi_endproc
 954               	.LFE18:
 956               	.global	has_bank_knob_changed
 958               	has_bank_knob_changed:
 959               	.LFB19:
 273:switch.c      **** 
 274:switch.c      **** uint8_t has_bank_knob_changed(void) {
 960               		.loc 1 274 37 is_stmt 1 view -0
 961               		.cfi_startproc
 962               	/* prologue: function */
 963               	/* frame size = 0 */
 964               	/* stack size = 0 */
 965               	.L__stack_usage = 0
 275:switch.c      ****   uint8_t temp = bank_switched;
 966               		.loc 1 275 3 view .LVU228
 967               		.loc 1 275 11 is_stmt 0 view .LVU229
 968 0312 8091 0000 		lds r24,bank_switched
 969               	.LVL64:
 276:switch.c      ****   bank_switched = 0;
 970               		.loc 1 276 3 is_stmt 1 view .LVU230
 971               		.loc 1 276 17 is_stmt 0 view .LVU231
 972 0316 1092 0000 		sts bank_switched,__zero_reg__
 277:switch.c      ****   return temp;
 973               		.loc 1 277 3 is_stmt 1 view .LVU232
 974               	/* epilogue start */
 278:switch.c      **** }
 975               		.loc 1 278 1 is_stmt 0 view .LVU233
 976 031a 0895      		ret
 977               		.cfi_endproc
 978               	.LFE19:
 980               	.global	loopkey_tab
 981               		.section	.rodata
 984               	loopkey_tab:
 985 0000 0409 050A 		.ascii	"\004\t\005\n\006\007\013\021\f\022\r\020\023\024\025\026"
 985      0607 0B11 
 985      0C12 0D10 
 985      1314 1516 
 988               	numkey_tab:
 989 0010 0405 0607 		.ascii	"\004\005\006\007\021\022\020\023"
 989      1112 1013 
 990               	.global	debounce_timer
 991               		.section .bss
 994               	debounce_timer:
 995 0000 00        		.zero	1
 996               		.comm	last_bank,1,1
 997               		.comm	last_func,1,1
 998               		.comm	bank,1,1
 999               		.comm	function,1,1
 1000               	.global	bank_switched
 1003               	bank_switched:
 1004 0001 00        		.zero	1
 1005               		.comm	released_switches,3,1
 1006               		.comm	pressed_switches,3,1
 1007               		.comm	last_switches,3,1
 1008               		.comm	switches,3,1
 1009               		.comm	last_tempo,1,1
 1010               		.text
 1011               	.Letext0:
 1012               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 1013               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdio.h"
 1014               		.file 4 "main.h"
 1015               		.file 5 "led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 switch.c
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:4      *ABS*:000000000000003f __SREG__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:12     .text:0000000000000000 read_keypad
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:91     .text:0000000000000026 select_bank_read
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:110    .text:000000000000002a select_func_read
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:129    .text:000000000000002e read_bank
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:197    .text:0000000000000066 read_function
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:227    .text:0000000000000070 read_switches
                            *COM*:0000000000000003 pressed_switches
                            *COM*:0000000000000003 released_switches
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:994    .bss:0000000000000000 debounce_timer
                            *COM*:0000000000000003 switches
                            *COM*:0000000000000003 last_switches
                            *COM*:0000000000000001 bank
                            *COM*:0000000000000001 last_bank
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:1003   .bss:0000000000000001 bank_switched
                            *COM*:0000000000000001 function
                            *COM*:0000000000000001 last_func
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:558    .text:0000000000000210 key_action
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:614    .text:000000000000023e is_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:636    .text:0000000000000248 get_lowest_key_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:703    .text:0000000000000278 just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:725    .text:0000000000000282 get_lowest_key_just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:792    .text:00000000000002b2 just_released
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:815    .text:00000000000002bc no_keys_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:842    .text:00000000000002d4 get_lowest_notekey_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:984    .rodata:0000000000000000 loopkey_tab
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:866    .text:00000000000002e2 get_lowest_numkey_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:988    .rodata:0000000000000010 numkey_tab
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:889    .text:00000000000002ee get_lowest_numkey_just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:912    .text:00000000000002fa get_lowest_loopkey_just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:935    .text:0000000000000306 get_lowest_notekey_just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccui9NqR.s:958    .text:0000000000000312 has_bank_knob_changed
                            *COM*:0000000000000001 last_tempo

UNDEFINED SYMBOLS
newtempo
tempo
change_tempo
clock_leds
__do_copy_data
__do_clear_bss
