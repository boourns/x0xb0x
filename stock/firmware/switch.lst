   1               		.file	"switch.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	read_keypad
  12               	read_keypad:
  13               	.LVL0:
  14               	.LFB2:
  15               		.file 1 "switch.c"
   1:switch.c      **** /*
   2:switch.c      ****  * The software for the x0xb0x is available for use in accordance with the
   3:switch.c      ****  * following open source license (MIT License). For more information about
   4:switch.c      ****  * OS licensing, please visit -> http://www.opensource.org/
   5:switch.c      ****  *
   6:switch.c      ****  * For more information about the x0xb0x project, please visit
   7:switch.c      ****  * -> http://www.ladyada.net/make/x0xb0x
   8:switch.c      ****  *
   9:switch.c      ****  *                                     *****
  10:switch.c      ****  * Copyright (c) 2005 Limor Fried
  11:switch.c      ****  *
  12:switch.c      ****  * Permission is hereby granted, free of charge, to any person obtaining a
  13:switch.c      ****  * copy of this software and associated documentation files (the "Software"),
  14:switch.c      ****  * to deal in the Software without restriction, including without limitation
  15:switch.c      ****  * the rights to use, copy, modify, merge, publish, distribute, sublicense,
  16:switch.c      ****  * and/or sell copies of the Software, and to permit persons to whom the
  17:switch.c      ****  * Software is furnished to do so, subject to the following conditions:
  18:switch.c      ****  *
  19:switch.c      ****  * The above copyright notice and this permission notice shall be included in
  20:switch.c      ****  * all copies or substantial portions of the Software.
  21:switch.c      ****  *
  22:switch.c      ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  23:switch.c      ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  24:switch.c      ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  25:switch.c      ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  26:switch.c      ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  27:switch.c      ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  28:switch.c      ****  * IN THE SOFTWARE.
  29:switch.c      ****  *                                     *****
  30:switch.c      ****  *
  31:switch.c      ****  */
  32:switch.c      **** 
  33:switch.c      **** #include <inttypes.h>
  34:switch.c      **** #include <avr/io.h>
  35:switch.c      **** #include <avr/interrupt.h>
  36:switch.c      **** #include <stdio.h>
  37:switch.c      **** #include "switch.h"
  38:switch.c      **** #include "led.h"
  39:switch.c      **** #include "main.h"
  40:switch.c      **** #include "delay.h"
  41:switch.c      **** 
  42:switch.c      **** uint8_t last_tempo;
  43:switch.c      **** uint8_t switches[3];
  44:switch.c      **** uint8_t last_switches[3];
  45:switch.c      **** uint8_t pressed_switches[3];
  46:switch.c      **** uint8_t released_switches[3];
  47:switch.c      **** 
  48:switch.c      **** uint8_t bank_switched = 0; // has the bank knob been moved?
  49:switch.c      **** uint8_t function, bank;
  50:switch.c      **** uint8_t last_func, last_bank;
  51:switch.c      **** 
  52:switch.c      **** volatile extern uint16_t tempo;
  53:switch.c      **** volatile extern uint16_t
  54:switch.c      ****     newtempo; // changed by the interrupt then updated to the current tempo?
  55:switch.c      **** 
  56:switch.c      **** volatile uint8_t debounce_timer = 0; // modified by timer0 in main.c
  57:switch.c      **** 
  58:switch.c      **** const static uint8_t notekey_tab[13] = {KEY_C,  KEY_CS, KEY_D, KEY_DS, KEY_E,
  59:switch.c      ****                                         KEY_F,  KEY_FS, KEY_G, KEY_GS, KEY_A,
  60:switch.c      ****                                         KEY_AS, KEY_B,  KEY_C2};
  61:switch.c      **** 
  62:switch.c      **** const static uint8_t numkey_tab[8] = {KEY_C, KEY_D, KEY_E, KEY_F,
  63:switch.c      ****                                       KEY_G, KEY_A, KEY_B, KEY_C2};
  64:switch.c      **** 
  65:switch.c      **** void read_switches(void) {
  66:switch.c      ****   uint8_t i, s, l, t;
  67:switch.c      ****   uint8_t temp_switches[3];
  68:switch.c      ****   uint8_t keypress_switches[3];
  69:switch.c      **** 
  70:switch.c      ****   // check if tempo has been changed by interrupt
  71:switch.c      ****   if (newtempo != tempo)
  72:switch.c      ****     change_tempo(newtempo);
  73:switch.c      **** 
  74:switch.c      ****   for (i = 0; i < 3; i++) {
  75:switch.c      ****     pressed_switches[i] = 0;
  76:switch.c      ****     released_switches[i] = 0;
  77:switch.c      ****   }
  78:switch.c      ****   // to debounce switches, check if it's been more than 20 ms since
  79:switch.c      ****   // the last check, and that the switch is the same as it was 20ms ago.
  80:switch.c      ****   if (debounce_timer < 20) // timer is in 1ms incr
  81:switch.c      ****     return;                // we only want to be called every 20 ms or more
  82:switch.c      **** 
  83:switch.c      ****   debounce_timer = 0; // reset the timer
  84:switch.c      **** 
  85:switch.c      ****   select_bank_read(); // wait a bit then call read_bank
  86:switch.c      **** 
  87:switch.c      ****   read_keypad(temp_switches);
  88:switch.c      ****   keypress_switches[0] = switches[0];
  89:switch.c      ****   keypress_switches[1] = switches[1];
  90:switch.c      ****   keypress_switches[2] = switches[2];
  91:switch.c      ****   for (i = 0; i < 24; i++) {
  92:switch.c      ****     s = (switches[i / 8] & (1 << (i % 8)));
  93:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
  94:switch.c      ****     t = (temp_switches[i / 8] & (1 << (i % 8)));
  95:switch.c      ****     // printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
  96:switch.c      ****     if (s != 0) {
  97:switch.c      ****       switches[i / 8] = (switches[i / 8] & ~(1 << (i % 8))) | (l | t);
  98:switch.c      ****     } else {
  99:switch.c      ****       switches[i / 8] = (switches[i / 8] & ~(1 << (i % 8))) | (l & t);
 100:switch.c      ****     }
 101:switch.c      ****   }
 102:switch.c      **** 
 103:switch.c      ****   i = read_bank();
 104:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 105:switch.c      ****     bank = i;
 106:switch.c      ****     bank_switched = 1;
 107:switch.c      ****     // putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 108:switch.c      ****   }
 109:switch.c      ****   last_bank = i;
 110:switch.c      **** 
 111:switch.c      ****   select_func_read();
 112:switch.c      **** 
 113:switch.c      ****   for (i = 0; i < 3; i++) {
 114:switch.c      ****     last_switches[i] = temp_switches[i];
 115:switch.c      **** 
 116:switch.c      ****     pressed_switches[i] = (keypress_switches[i] ^ switches[i]) & switches[i];
 117:switch.c      ****     released_switches[i] =
 118:switch.c      ****         (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 119:switch.c      ****   }
 120:switch.c      ****   /*printf("pressed %x %x %x, released %x %x %x\n\r",
 121:switch.c      ****          pressed_switches[0], pressed_switches[1], pressed_switches[2],
 122:switch.c      ****          released_switches[0], released_switches[1], released_switches[2]);
 123:switch.c      ****   */
 124:switch.c      **** 
 125:switch.c      ****   i = read_function();
 126:switch.c      ****   if ((i != function) && (i == last_func)) {
 127:switch.c      ****     function = i;
 128:switch.c      ****     // putstring("Function #"); putnum_ud(function); putstring("\n\r");
 129:switch.c      ****   }
 130:switch.c      ****   last_func = i;
 131:switch.c      **** 
 132:switch.c      ****   clock_leds();
 133:switch.c      **** }
 134:switch.c      **** 
 135:switch.c      **** void read_keypad(uint8_t *switchinput) {
  16               		.loc 1 135 40 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 136:switch.c      ****   uint8_t i;
  22               		.loc 1 136 3 view .LVU1
 137:switch.c      **** 
 138:switch.c      ****   cli();
  23               		.loc 1 138 3 view .LVU2
  24               	/* #APP */
  25               	 ;  138 "switch.c" 1
  26 0000 F894      		cli
  27               	 ;  0 "" 2
 139:switch.c      **** 
 140:switch.c      ****   cbi(SWITCH_LATCH_PORT, SWITCH_LATCH_PIN);
  28               		.loc 1 140 3 view .LVU3
  29               	/* #NOAPP */
  30 0002 C098      		cbi 0x18,0
 141:switch.c      ****   NOP;
  31               		.loc 1 141 3 view .LVU4
  32               	/* #APP */
  33               	 ;  141 "switch.c" 1
  34 0004 0000      		nop
  35               	 ;  0 "" 2
 142:switch.c      ****   NOP;
  36               		.loc 1 142 3 view .LVU5
  37               	 ;  142 "switch.c" 1
  38 0006 0000      		nop
  39               	 ;  0 "" 2
 143:switch.c      ****   NOP;
  40               		.loc 1 143 3 view .LVU6
  41               	 ;  143 "switch.c" 1
  42 0008 0000      		nop
  43               	 ;  0 "" 2
 144:switch.c      ****   NOP;
  44               		.loc 1 144 3 view .LVU7
  45               	 ;  144 "switch.c" 1
  46 000a 0000      		nop
  47               	 ;  0 "" 2
 145:switch.c      ****   sbi(SWITCH_LATCH_PORT, SWITCH_LATCH_PIN);
  48               		.loc 1 145 3 view .LVU8
  49               	/* #NOAPP */
  50 000c C09A      		sbi 0x18,0
 146:switch.c      ****   for (i = 0; i < 3; i++) {
  51               		.loc 1 146 3 view .LVU9
  52               	.LVL1:
  53               		.loc 1 146 3 is_stmt 0 view .LVU10
  54 000e FC01      		movw r30,r24
  55 0010 0396      		adiw r24,3
  56               	.LVL2:
  57               	.L3:
 147:switch.c      ****     SPDR = 0;
  58               		.loc 1 147 5 is_stmt 1 view .LVU11
  59               		.loc 1 147 10 is_stmt 0 view .LVU12
  60 0012 1FB8      		out 0xf,__zero_reg__
 148:switch.c      ****     while (!(SPSR & (1 << SPIF)))
  61               		.loc 1 148 5 is_stmt 1 view .LVU13
  62               	.L2:
 149:switch.c      ****       ;
  63               		.loc 1 149 7 discriminator 1 view .LVU14
 148:switch.c      ****     while (!(SPSR & (1 << SPIF)))
  64               		.loc 1 148 11 is_stmt 0 discriminator 1 view .LVU15
  65 0014 779B      		sbis 0xe,7
  66 0016 00C0      		rjmp .L2
 150:switch.c      ****     switchinput[i] = SPDR;
  67               		.loc 1 150 5 is_stmt 1 discriminator 2 view .LVU16
  68               		.loc 1 150 22 is_stmt 0 discriminator 2 view .LVU17
  69 0018 2FB1      		in r18,0xf
  70               		.loc 1 150 20 discriminator 2 view .LVU18
  71 001a 2193      		st Z+,r18
  72               	.LVL3:
 146:switch.c      ****     SPDR = 0;
  73               		.loc 1 146 3 discriminator 2 view .LVU19
  74 001c E817      		cp r30,r24
  75 001e F907      		cpc r31,r25
  76 0020 01F4      		brne .L3
 151:switch.c      ****   }
 152:switch.c      ****   // printf("got %2x %2x %2x\n\r", switches[2], switches[1], switches[0]);
 153:switch.c      **** 
 154:switch.c      ****   sei();
  77               		.loc 1 154 3 is_stmt 1 view .LVU20
  78               	/* #APP */
  79               	 ;  154 "switch.c" 1
  80 0022 7894      		sei
  81               	 ;  0 "" 2
  82               	/* #NOAPP */
  83               	/* epilogue start */
 155:switch.c      **** }
  84               		.loc 1 155 1 is_stmt 0 view .LVU21
  85 0024 0895      		ret
  86               		.cfi_endproc
  87               	.LFE2:
  89               	.global	select_bank_read
  91               	select_bank_read:
  92               	.LFB3:
 156:switch.c      **** 
 157:switch.c      **** // we need to call this, then wait a bit, then read the value off the pins
 158:switch.c      **** void select_bank_read(void) { BANK_COMMON_PORT &= ~_BV(BANK_COMMON_PIN); }
  93               		.loc 1 158 29 is_stmt 1 view -0
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               		.loc 1 158 31 view .LVU23
 100               		.loc 1 158 48 is_stmt 0 view .LVU24
 101 0026 DE98      		cbi 0x1b,6
 102               	/* epilogue start */
 103               		.loc 1 158 1 view .LVU25
 104 0028 0895      		ret
 105               		.cfi_endproc
 106               	.LFE3:
 108               	.global	select_func_read
 110               	select_func_read:
 111               	.LFB4:
 159:switch.c      **** 
 160:switch.c      **** // we need to call this, then wait a bit, then read the value off the pins
 161:switch.c      **** void select_func_read(void) { FUNC_COMMON_PORT |= _BV(FUNC_COMMON_PIN); }
 112               		.loc 1 161 29 is_stmt 1 view -0
 113               		.cfi_startproc
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
 118               		.loc 1 161 31 view .LVU27
 119               		.loc 1 161 48 is_stmt 0 view .LVU28
 120 002a DE9A      		sbi 0x1b,6
 121               	/* epilogue start */
 122               		.loc 1 161 1 view .LVU29
 123 002c 0895      		ret
 124               		.cfi_endproc
 125               	.LFE4:
 127               	.global	read_bank
 129               	read_bank:
 130               	.LFB5:
 162:switch.c      **** 
 163:switch.c      **** uint8_t read_bank() {
 131               		.loc 1 163 21 is_stmt 1 view -0
 132               		.cfi_startproc
 133               	/* prologue: function */
 134               	/* frame size = 0 */
 135               	/* stack size = 0 */
 136               	.L__stack_usage = 0
 164:switch.c      ****   uint8_t val;
 137               		.loc 1 164 3 view .LVU31
 165:switch.c      **** 
 166:switch.c      ****   val = BANK_PIN;
 138               		.loc 1 166 3 view .LVU32
 139               		.loc 1 166 7 is_stmt 0 view .LVU33
 140 002e 89B3      		in r24,0x19
 141               	.LVL4:
 167:switch.c      ****   val = (val >> 2) & 0xF;
 142               		.loc 1 167 3 is_stmt 1 view .LVU34
 143               		.loc 1 167 20 is_stmt 0 view .LVU35
 144 0030 8695      		lsr r24
 145 0032 8695      		lsr r24
 146               	.LVL5:
 147               		.loc 1 167 7 view .LVU36
 148 0034 8F70      		andi r24,lo8(15)
 149               	.LVL6:
 168:switch.c      ****   val =
 150               		.loc 1 168 3 is_stmt 1 view .LVU37
 169:switch.c      ****       (val >> 3) | ((val >> 1) & 0x2) | ((val << 1) & 0x4) | ((val << 3) & 0x8);
 151               		.loc 1 169 47 is_stmt 0 view .LVU38
 152 0036 282F      		mov r18,r24
 153 0038 30E0      		ldi r19,0
 154               		.loc 1 169 32 view .LVU39
 155 003a 982F      		mov r25,r24
 156 003c 9695      		lsr r25
 157 003e 9270      		andi r25,lo8(2)
 158               		.loc 1 169 18 view .LVU40
 159 0040 8695      		lsr r24
 160 0042 8695      		lsr r24
 161 0044 8695      		lsr r24
 162               	.LVL7:
 163               		.loc 1 169 18 view .LVU41
 164 0046 982B      		or r25,r24
 165               		.loc 1 169 47 view .LVU42
 166 0048 A901      		movw r20,r18
 167 004a 440F      		lsl r20
 168 004c 551F      		rol r21
 169               		.loc 1 169 53 view .LVU43
 170 004e 4470      		andi r20,lo8(4)
 171               		.loc 1 169 39 view .LVU44
 172 0050 942B      		or r25,r20
 173               		.loc 1 169 68 view .LVU45
 174 0052 43E0      		ldi r20,3
 175               		1:
 176 0054 220F      		lsl r18
 177 0056 331F      		rol r19
 178 0058 4A95      		dec r20
 179 005a 01F4      		brne 1b
 180               	.LVL8:
 181               		.loc 1 169 74 view .LVU46
 182 005c 2870      		andi r18,lo8(8)
 183               		.loc 1 169 60 view .LVU47
 184 005e 922B      		or r25,r18
 185               	.LVL9:
 170:switch.c      ****   return 15 - val;
 186               		.loc 1 170 3 is_stmt 1 view .LVU48
 171:switch.c      **** }
 187               		.loc 1 171 1 is_stmt 0 view .LVU49
 188 0060 8FE0      		ldi r24,lo8(15)
 189 0062 891B      		sub r24,r25
 190               	/* epilogue start */
 191 0064 0895      		ret
 192               		.cfi_endproc
 193               	.LFE5:
 195               	.global	read_function
 197               	read_function:
 198               	.LFB6:
 172:switch.c      **** 
 173:switch.c      **** uint8_t read_function() {
 199               		.loc 1 173 25 is_stmt 1 view -0
 200               		.cfi_startproc
 201               	/* prologue: function */
 202               	/* frame size = 0 */
 203               	/* stack size = 0 */
 204               	.L__stack_usage = 0
 174:switch.c      ****   uint8_t val;
 205               		.loc 1 174 3 view .LVU51
 175:switch.c      **** 
 176:switch.c      ****   val = FUNC_PIN;
 206               		.loc 1 176 3 view .LVU52
 207               		.loc 1 176 7 is_stmt 0 view .LVU53
 208 0066 89B3      		in r24,0x19
 209               	.LVL10:
 177:switch.c      ****   val = (val >> 2) & 0xF;
 210               		.loc 1 177 3 is_stmt 1 view .LVU54
 211               		.loc 1 177 20 is_stmt 0 view .LVU55
 212 0068 8695      		lsr r24
 213 006a 8695      		lsr r24
 214               	.LVL11:
 178:switch.c      **** 
 179:switch.c      ****   return val;
 215               		.loc 1 179 3 is_stmt 1 view .LVU56
 180:switch.c      **** }
 216               		.loc 1 180 1 is_stmt 0 view .LVU57
 217 006c 8F70      		andi r24,lo8(15)
 218               	.LVL12:
 219               	/* epilogue start */
 220               		.loc 1 180 1 view .LVU58
 221 006e 0895      		ret
 222               		.cfi_endproc
 223               	.LFE6:
 225               	.global	read_switches
 227               	read_switches:
 228               	.LFB1:
  65:switch.c      ****   uint8_t i, s, l, t;
 229               		.loc 1 65 26 is_stmt 1 view -0
 230               		.cfi_startproc
 231 0070 AF92      		push r10
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 10, -2
 234 0072 BF92      		push r11
 235               		.cfi_def_cfa_offset 4
 236               		.cfi_offset 11, -3
 237 0074 DF92      		push r13
 238               		.cfi_def_cfa_offset 5
 239               		.cfi_offset 13, -4
 240 0076 EF92      		push r14
 241               		.cfi_def_cfa_offset 6
 242               		.cfi_offset 14, -5
 243 0078 FF92      		push r15
 244               		.cfi_def_cfa_offset 7
 245               		.cfi_offset 15, -6
 246 007a 0F93      		push r16
 247               		.cfi_def_cfa_offset 8
 248               		.cfi_offset 16, -7
 249 007c 1F93      		push r17
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 17, -8
 252 007e CF93      		push r28
 253               		.cfi_def_cfa_offset 10
 254               		.cfi_offset 28, -9
 255 0080 DF93      		push r29
 256               		.cfi_def_cfa_offset 11
 257               		.cfi_offset 29, -10
 258 0082 00D0      		rcall .
 259 0084 00D0      		rcall .
 260 0086 00D0      		rcall .
 261               		.cfi_def_cfa_offset 17
 262 0088 CDB7      		in r28,__SP_L__
 263 008a DEB7      		in r29,__SP_H__
 264               		.cfi_def_cfa_register 28
 265               	/* prologue: function */
 266               	/* frame size = 6 */
 267               	/* stack size = 15 */
 268               	.L__stack_usage = 15
  66:switch.c      ****   uint8_t temp_switches[3];
 269               		.loc 1 66 3 view .LVU60
  67:switch.c      ****   uint8_t keypress_switches[3];
 270               		.loc 1 67 3 view .LVU61
  68:switch.c      **** 
 271               		.loc 1 68 3 view .LVU62
  71:switch.c      ****     change_tempo(newtempo);
 272               		.loc 1 71 3 view .LVU63
  71:switch.c      ****     change_tempo(newtempo);
 273               		.loc 1 71 16 is_stmt 0 view .LVU64
 274 008c 2091 0000 		lds r18,newtempo
 275 0090 3091 0000 		lds r19,newtempo+1
 276 0094 8091 0000 		lds r24,tempo
 277 0098 9091 0000 		lds r25,tempo+1
  71:switch.c      ****     change_tempo(newtempo);
 278               		.loc 1 71 6 view .LVU65
 279 009c 2817      		cp r18,r24
 280 009e 3907      		cpc r19,r25
 281 00a0 01F0      		breq .L11
  72:switch.c      **** 
 282               		.loc 1 72 5 is_stmt 1 view .LVU66
 283 00a2 8091 0000 		lds r24,newtempo
 284 00a6 9091 0000 		lds r25,newtempo+1
 285 00aa 0E94 0000 		call change_tempo
 286               	.LVL13:
 287               	.L11:
  75:switch.c      ****     released_switches[i] = 0;
 288               		.loc 1 75 5 discriminator 1 view .LVU67
  75:switch.c      ****     released_switches[i] = 0;
 289               		.loc 1 75 25 is_stmt 0 discriminator 1 view .LVU68
 290 00ae 1092 0000 		sts pressed_switches,__zero_reg__
  76:switch.c      ****   }
 291               		.loc 1 76 5 is_stmt 1 discriminator 1 view .LVU69
  76:switch.c      ****   }
 292               		.loc 1 76 26 is_stmt 0 discriminator 1 view .LVU70
 293 00b2 1092 0000 		sts released_switches,__zero_reg__
 294               	.LVL14:
  75:switch.c      ****     released_switches[i] = 0;
 295               		.loc 1 75 5 is_stmt 1 discriminator 1 view .LVU71
  75:switch.c      ****     released_switches[i] = 0;
 296               		.loc 1 75 25 is_stmt 0 discriminator 1 view .LVU72
 297 00b6 1092 0000 		sts pressed_switches+1,__zero_reg__
  76:switch.c      ****   }
 298               		.loc 1 76 5 is_stmt 1 discriminator 1 view .LVU73
  76:switch.c      ****   }
 299               		.loc 1 76 26 is_stmt 0 discriminator 1 view .LVU74
 300 00ba 1092 0000 		sts released_switches+1,__zero_reg__
 301               	.LVL15:
  75:switch.c      ****     released_switches[i] = 0;
 302               		.loc 1 75 5 is_stmt 1 discriminator 1 view .LVU75
  75:switch.c      ****     released_switches[i] = 0;
 303               		.loc 1 75 25 is_stmt 0 discriminator 1 view .LVU76
 304 00be 1092 0000 		sts pressed_switches+2,__zero_reg__
  76:switch.c      ****   }
 305               		.loc 1 76 5 is_stmt 1 discriminator 1 view .LVU77
  76:switch.c      ****   }
 306               		.loc 1 76 26 is_stmt 0 discriminator 1 view .LVU78
 307 00c2 1092 0000 		sts released_switches+2,__zero_reg__
 308               	.LVL16:
  80:switch.c      ****     return;                // we only want to be called every 20 ms or more
 309               		.loc 1 80 3 is_stmt 1 discriminator 1 view .LVU79
  80:switch.c      ****     return;                // we only want to be called every 20 ms or more
 310               		.loc 1 80 22 is_stmt 0 discriminator 1 view .LVU80
 311 00c6 8091 0000 		lds r24,debounce_timer
  80:switch.c      ****     return;                // we only want to be called every 20 ms or more
 312               		.loc 1 80 6 discriminator 1 view .LVU81
 313 00ca 8431      		cpi r24,lo8(20)
 314 00cc 00F4      		brsh .+2
 315 00ce 00C0      		rjmp .L10
  83:switch.c      **** 
 316               		.loc 1 83 3 is_stmt 1 view .LVU82
  83:switch.c      **** 
 317               		.loc 1 83 18 is_stmt 0 view .LVU83
 318 00d0 1092 0000 		sts debounce_timer,__zero_reg__
  85:switch.c      **** 
 319               		.loc 1 85 3 is_stmt 1 view .LVU84
 320 00d4 0E94 0000 		call select_bank_read
 321               	.LVL17:
  87:switch.c      ****   keypress_switches[0] = switches[0];
 322               		.loc 1 87 3 view .LVU85
 323 00d8 CE01      		movw r24,r28
 324 00da 0496      		adiw r24,4
 325 00dc 0E94 0000 		call read_keypad
 326               	.LVL18:
  88:switch.c      ****   keypress_switches[1] = switches[1];
 327               		.loc 1 88 3 view .LVU86
  88:switch.c      ****   keypress_switches[1] = switches[1];
 328               		.loc 1 88 24 is_stmt 0 view .LVU87
 329 00e0 8091 0000 		lds r24,switches
 330 00e4 8983      		std Y+1,r24
  89:switch.c      ****   keypress_switches[2] = switches[2];
 331               		.loc 1 89 3 is_stmt 1 view .LVU88
  89:switch.c      ****   keypress_switches[2] = switches[2];
 332               		.loc 1 89 24 is_stmt 0 view .LVU89
 333 00e6 8091 0000 		lds r24,switches+1
 334 00ea 8A83      		std Y+2,r24
  90:switch.c      ****   for (i = 0; i < 24; i++) {
 335               		.loc 1 90 3 is_stmt 1 view .LVU90
  90:switch.c      ****   for (i = 0; i < 24; i++) {
 336               		.loc 1 90 24 is_stmt 0 view .LVU91
 337 00ec 8091 0000 		lds r24,switches+2
 338 00f0 8B83      		std Y+3,r24
  91:switch.c      ****     s = (switches[i / 8] & (1 << (i % 8)));
 339               		.loc 1 91 3 is_stmt 1 view .LVU92
 340               	.LVL19:
  91:switch.c      ****     s = (switches[i / 8] & (1 << (i % 8)));
 341               		.loc 1 91 10 is_stmt 0 view .LVU93
 342 00f2 90E0      		ldi r25,0
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 343               		.loc 1 92 31 view .LVU94
 344 00f4 41E0      		ldi r20,lo8(1)
 345 00f6 50E0      		ldi r21,0
 346               	.LVL20:
 347               	.L16:
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 348               		.loc 1 92 5 is_stmt 1 view .LVU95
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 349               		.loc 1 92 21 is_stmt 0 view .LVU96
 350 00f8 292F      		mov r18,r25
 351 00fa 2695      		lsr r18
 352 00fc 2695      		lsr r18
 353 00fe 2695      		lsr r18
 354 0100 30E0      		ldi r19,0
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 355               		.loc 1 92 18 view .LVU97
 356 0102 F901      		movw r30,r18
 357 0104 E050      		subi r30,lo8(-(switches))
 358 0106 F040      		sbci r31,hi8(-(switches))
 359 0108 F080      		ld r15,Z
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 360               		.loc 1 92 37 view .LVU98
 361 010a 892F      		mov r24,r25
 362 010c 8770      		andi r24,lo8(7)
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 363               		.loc 1 92 31 view .LVU99
 364 010e BA01      		movw r22,r20
 365 0110 00C0      		rjmp 2f
 366               		1:
 367 0112 660F      		lsl r22
 368               		2:
 369 0114 8A95      		dec r24
 370 0116 02F4      		brpl 1b
 371               	.LVL21:
  93:switch.c      ****     t = (temp_switches[i / 8] & (1 << (i % 8)));
 372               		.loc 1 93 5 is_stmt 1 view .LVU100
  93:switch.c      ****     t = (temp_switches[i / 8] & (1 << (i % 8)));
 373               		.loc 1 93 23 is_stmt 0 view .LVU101
 374 0118 8901      		movw r16,r18
 375 011a 0050      		subi r16,lo8(-(last_switches))
 376 011c 1040      		sbci r17,hi8(-(last_switches))
 377 011e D801      		movw r26,r16
 378 0120 8C91      		ld r24,X
 379               	.LVL22:
  94:switch.c      ****     // printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
 380               		.loc 1 94 5 is_stmt 1 view .LVU102
  94:switch.c      ****     // printf("%d: s %x, l %x, t %x\n\r", i, s, l, t);
 381               		.loc 1 94 23 is_stmt 0 view .LVU103
 382 0122 A4E0      		ldi r26,lo8(4)
 383 0124 B0E0      		ldi r27,0
 384 0126 AC0F      		add r26,r28
 385 0128 BD1F      		adc r27,r29
 386 012a 2A0F      		add r18,r26
 387 012c 3B1F      		adc r19,r27
 388 012e D901      		movw r26,r18
 389 0130 3C91      		ld r19,X
 390               	.LVL23:
  96:switch.c      ****       switches[i / 8] = (switches[i / 8] & ~(1 << (i % 8))) | (l | t);
 391               		.loc 1 96 5 is_stmt 1 view .LVU104
 392 0132 262F      		mov r18,r22
 393 0134 2095      		com r18
 394 0136 2F21      		and r18,r15
  92:switch.c      ****     l = (last_switches[i / 8] & (1 << (i % 8)));
 395               		.loc 1 92 26 is_stmt 0 view .LVU105
 396 0138 AF2D      		mov r26,r15
 397 013a A623      		and r26,r22
  96:switch.c      ****       switches[i / 8] = (switches[i / 8] & ~(1 << (i % 8))) | (l | t);
 398               		.loc 1 96 8 view .LVU106
 399 013c 01F4      		brne .+2
 400 013e 00C0      		rjmp .L14
  97:switch.c      ****     } else {
 401               		.loc 1 97 7 is_stmt 1 view .LVU107
  97:switch.c      ****     } else {
 402               		.loc 1 97 61 is_stmt 0 view .LVU108
 403 0140 832B      		or r24,r19
 404               	.LVL24:
  97:switch.c      ****     } else {
 405               		.loc 1 97 61 view .LVU109
 406 0142 8623      		and r24,r22
 407               	.L22:
  99:switch.c      ****     }
 408               		.loc 1 99 61 view .LVU110
 409 0144 822B      		or r24,r18
  99:switch.c      ****     }
 410               		.loc 1 99 23 view .LVU111
 411 0146 8083      		st Z,r24
  91:switch.c      ****     s = (switches[i / 8] & (1 << (i % 8)));
 412               		.loc 1 91 24 view .LVU112
 413 0148 9F5F      		subi r25,lo8(-(1))
 414               	.LVL25:
  91:switch.c      ****     s = (switches[i / 8] & (1 << (i % 8)));
 415               		.loc 1 91 3 view .LVU113
 416 014a 9831      		cpi r25,lo8(24)
 417 014c 01F4      		brne .L16
 103:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 418               		.loc 1 103 3 is_stmt 1 view .LVU114
 103:switch.c      ****   if ((i != bank) && (i == last_bank)) {
 419               		.loc 1 103 7 is_stmt 0 view .LVU115
 420 014e 0E94 0000 		call read_bank
 421               	.LVL26:
 104:switch.c      ****     bank = i;
 422               		.loc 1 104 3 is_stmt 1 view .LVU116
 104:switch.c      ****     bank = i;
 423               		.loc 1 104 6 is_stmt 0 view .LVU117
 424 0152 9091 0000 		lds r25,bank
 425 0156 9817      		cp r25,r24
 426 0158 01F0      		breq .L17
 104:switch.c      ****     bank = i;
 427               		.loc 1 104 19 discriminator 1 view .LVU118
 428 015a 9091 0000 		lds r25,last_bank
 429 015e 9813      		cpse r25,r24
 430 0160 00C0      		rjmp .L17
 105:switch.c      ****     bank_switched = 1;
 431               		.loc 1 105 5 is_stmt 1 view .LVU119
 105:switch.c      ****     bank_switched = 1;
 432               		.loc 1 105 10 is_stmt 0 view .LVU120
 433 0162 8093 0000 		sts bank,r24
 106:switch.c      ****     // putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 434               		.loc 1 106 5 is_stmt 1 view .LVU121
 106:switch.c      ****     // putstring("Bank #"); putnum_ud(bank); putstring("\n\r");
 435               		.loc 1 106 19 is_stmt 0 view .LVU122
 436 0166 91E0      		ldi r25,lo8(1)
 437 0168 9093 0000 		sts bank_switched,r25
 438               	.L17:
 109:switch.c      **** 
 439               		.loc 1 109 3 is_stmt 1 view .LVU123
 109:switch.c      **** 
 440               		.loc 1 109 13 is_stmt 0 view .LVU124
 441 016c 8093 0000 		sts last_bank,r24
 111:switch.c      **** 
 442               		.loc 1 111 3 is_stmt 1 view .LVU125
 443 0170 0E94 0000 		call select_func_read
 444               	.LVL27:
 113:switch.c      ****     last_switches[i] = temp_switches[i];
 445               		.loc 1 113 3 view .LVU126
 113:switch.c      ****     last_switches[i] = temp_switches[i];
 446               		.loc 1 113 3 is_stmt 0 view .LVU127
 447 0174 FE01      		movw r30,r28
 448 0176 3496      		adiw r30,4
 449 0178 00E0      		ldi r16,lo8(last_switches)
 450 017a 10E0      		ldi r17,hi8(last_switches)
 451 017c BE01      		movw r22,r28
 452 017e 6F5F      		subi r22,-1
 453 0180 7F4F      		sbci r23,-1
 454 0182 40E0      		ldi r20,lo8(switches)
 455 0184 50E0      		ldi r21,hi8(switches)
 456 0186 20E0      		ldi r18,lo8(pressed_switches)
 457 0188 30E0      		ldi r19,hi8(pressed_switches)
 458 018a 80E0      		ldi r24,lo8(released_switches)
 459 018c A82E      		mov r10,r24
 460 018e 80E0      		ldi r24,hi8(released_switches)
 461 0190 B82E      		mov r11,r24
 462 0192 7E01      		movw r14,r28
 463 0194 B7E0      		ldi r27,7
 464 0196 EB0E      		add r14,r27
 465 0198 F11C      		adc r15,__zero_reg__
 466               	.LVL28:
 467               	.L18:
 114:switch.c      **** 
 468               		.loc 1 114 5 is_stmt 1 discriminator 3 view .LVU128
 114:switch.c      **** 
 469               		.loc 1 114 37 is_stmt 0 discriminator 3 view .LVU129
 470 019a 8191      		ld r24,Z+
 114:switch.c      **** 
 471               		.loc 1 114 22 discriminator 3 view .LVU130
 472 019c D801      		movw r26,r16
 473 019e 8D93      		st X+,r24
 474 01a0 8D01      		movw r16,r26
 116:switch.c      ****     released_switches[i] =
 475               		.loc 1 116 5 is_stmt 1 discriminator 3 view .LVU131
 116:switch.c      ****     released_switches[i] =
 476               		.loc 1 116 45 is_stmt 0 discriminator 3 view .LVU132
 477 01a2 DB01      		movw r26,r22
 478 01a4 DD90      		ld r13,X+
 479 01a6 BD01      		movw r22,r26
 116:switch.c      ****     released_switches[i] =
 480               		.loc 1 116 59 discriminator 3 view .LVU133
 481 01a8 DA01      		movw r26,r20
 482 01aa 8D91      		ld r24,X+
 483 01ac AD01      		movw r20,r26
 116:switch.c      ****     released_switches[i] =
 484               		.loc 1 116 25 discriminator 3 view .LVU134
 485 01ae 9D2D      		mov r25,r13
 486 01b0 9095      		com r25
 487 01b2 9823      		and r25,r24
 488 01b4 D901      		movw r26,r18
 489 01b6 9D93      		st X+,r25
 490 01b8 9D01      		movw r18,r26
 117:switch.c      ****         (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 491               		.loc 1 117 5 is_stmt 1 discriminator 3 view .LVU135
 117:switch.c      ****         (keypress_switches[i] ^ switches[i]) & keypress_switches[i];
 492               		.loc 1 117 26 is_stmt 0 discriminator 3 view .LVU136
 493 01ba 8095      		com r24
 494 01bc 8D21      		and r24,r13
 495 01be D501      		movw r26,r10
 496 01c0 8D93      		st X+,r24
 497 01c2 5D01      		movw r10,r26
 113:switch.c      ****     last_switches[i] = temp_switches[i];
 498               		.loc 1 113 3 discriminator 3 view .LVU137
 499 01c4 EE16      		cp r14,r30
 500 01c6 FF06      		cpc r15,r31
 501 01c8 01F4      		brne .L18
 125:switch.c      ****   if ((i != function) && (i == last_func)) {
 502               		.loc 1 125 3 is_stmt 1 view .LVU138
 125:switch.c      ****   if ((i != function) && (i == last_func)) {
 503               		.loc 1 125 7 is_stmt 0 view .LVU139
 504 01ca 0E94 0000 		call read_function
 505               	.LVL29:
 126:switch.c      ****     function = i;
 506               		.loc 1 126 3 is_stmt 1 view .LVU140
 126:switch.c      ****     function = i;
 507               		.loc 1 126 6 is_stmt 0 view .LVU141
 508 01ce 9091 0000 		lds r25,function
 509 01d2 9817      		cp r25,r24
 510 01d4 01F0      		breq .L19
 126:switch.c      ****     function = i;
 511               		.loc 1 126 23 discriminator 1 view .LVU142
 512 01d6 9091 0000 		lds r25,last_func
 513 01da 9813      		cpse r25,r24
 514 01dc 00C0      		rjmp .L19
 127:switch.c      ****     // putstring("Function #"); putnum_ud(function); putstring("\n\r");
 515               		.loc 1 127 5 is_stmt 1 view .LVU143
 127:switch.c      ****     // putstring("Function #"); putnum_ud(function); putstring("\n\r");
 516               		.loc 1 127 14 is_stmt 0 view .LVU144
 517 01de 8093 0000 		sts function,r24
 518               	.L19:
 130:switch.c      **** 
 519               		.loc 1 130 3 is_stmt 1 view .LVU145
 130:switch.c      **** 
 520               		.loc 1 130 13 is_stmt 0 view .LVU146
 521 01e2 8093 0000 		sts last_func,r24
 132:switch.c      **** }
 522               		.loc 1 132 3 is_stmt 1 view .LVU147
 523 01e6 0E94 0000 		call clock_leds
 524               	.LVL30:
 525               	.L10:
 526               	/* epilogue start */
 133:switch.c      **** 
 527               		.loc 1 133 1 is_stmt 0 view .LVU148
 528 01ea 2696      		adiw r28,6
 529 01ec 0FB6      		in __tmp_reg__,__SREG__
 530 01ee F894      		cli
 531 01f0 DEBF      		out __SP_H__,r29
 532 01f2 0FBE      		out __SREG__,__tmp_reg__
 533 01f4 CDBF      		out __SP_L__,r28
 534 01f6 DF91      		pop r29
 535 01f8 CF91      		pop r28
 536 01fa 1F91      		pop r17
 537 01fc 0F91      		pop r16
 538 01fe FF90      		pop r15
 539 0200 EF90      		pop r14
 540 0202 DF90      		pop r13
 541 0204 BF90      		pop r11
 542 0206 AF90      		pop r10
 543 0208 0895      		ret
 544               	.LVL31:
 545               	.L14:
  99:switch.c      ****     }
 546               		.loc 1 99 7 is_stmt 1 view .LVU149
  93:switch.c      ****     t = (temp_switches[i / 8] & (1 << (i % 8)));
 547               		.loc 1 93 31 is_stmt 0 view .LVU150
 548 020a 8623      		and r24,r22
 549               	.LVL32:
  99:switch.c      ****     }
 550               		.loc 1 99 61 view .LVU151
 551 020c 8323      		and r24,r19
 552 020e 00C0      		rjmp .L22
 553               		.cfi_endproc
 554               	.LFE1:
 556               	.global	is_pressed
 558               	is_pressed:
 559               	.LVL33:
 560               	.LFB7:
 181:switch.c      **** 
 182:switch.c      **** // returns 1 if that key is pressed
 183:switch.c      **** uint8_t is_pressed(uint8_t key) {
 561               		.loc 1 183 33 is_stmt 1 view -0
 562               		.cfi_startproc
 563               	/* prologue: function */
 564               	/* frame size = 0 */
 565               	/* stack size = 0 */
 566               	.L__stack_usage = 0
 567               		.loc 1 183 33 is_stmt 0 view .LVU153
 568 0210 282F      		mov r18,r24
 184:switch.c      ****   if (key >= 24)
 569               		.loc 1 184 3 is_stmt 1 view .LVU154
 570               		.loc 1 184 6 is_stmt 0 view .LVU155
 571 0212 8831      		cpi r24,lo8(24)
 572 0214 00F4      		brsh .L25
 573               	.LVL34:
 574               	.LBB4:
 575               	.LBI4:
 183:switch.c      ****   if (key >= 24)
 576               		.loc 1 183 9 is_stmt 1 view .LVU156
 577               	.LBB5:
 185:switch.c      ****     return 0;
 186:switch.c      **** 
 187:switch.c      ****   if ((switches[key / 8] & (1 << key % 8)) != 0)
 578               		.loc 1 187 3 view .LVU157
 579               		.loc 1 187 21 is_stmt 0 view .LVU158
 580 0216 E82F      		mov r30,r24
 581 0218 E695      		lsr r30
 582 021a E695      		lsr r30
 583 021c E695      		lsr r30
 584 021e F0E0      		ldi r31,0
 585               		.loc 1 187 16 view .LVU159
 586 0220 E050      		subi r30,lo8(-(switches))
 587 0222 F040      		sbci r31,hi8(-(switches))
 588 0224 9081      		ld r25,Z
 589 0226 892F      		mov r24,r25
 590               	.LVL35:
 591               		.loc 1 187 16 view .LVU160
 592 0228 90E0      		ldi r25,0
 593               		.loc 1 187 38 view .LVU161
 594 022a 2770      		andi r18,lo8(7)
 595               	.LVL36:
 596               		.loc 1 187 44 view .LVU162
 597 022c 00C0      		rjmp 2f
 598               		1:
 599 022e 9595      		asr r25
 600 0230 8795      		ror r24
 601               		2:
 602 0232 2A95      		dec r18
 603 0234 02F4      		brpl 1b
 604               		.loc 1 187 6 view .LVU163
 605 0236 8170      		andi r24,lo8(1)
 606 0238 0895      		ret
 607               	.LVL37:
 608               	.L25:
 609               		.loc 1 187 6 view .LVU164
 610               	.LBE5:
 611               	.LBE4:
 185:switch.c      ****     return 0;
 612               		.loc 1 185 12 view .LVU165
 613 023a 80E0      		ldi r24,0
 614               	/* epilogue start */
 188:switch.c      ****     return 1;
 189:switch.c      ****   else
 190:switch.c      ****     return 0;
 191:switch.c      **** }
 615               		.loc 1 191 1 view .LVU166
 616 023c 0895      		ret
 617               		.cfi_endproc
 618               	.LFE7:
 620               	.global	just_pressed
 622               	just_pressed:
 623               	.LVL38:
 624               	.LFB8:
 192:switch.c      **** 
 193:switch.c      **** uint8_t just_pressed(uint8_t key) {
 625               		.loc 1 193 35 is_stmt 1 view -0
 626               		.cfi_startproc
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 0 */
 630               	.L__stack_usage = 0
 631               		.loc 1 193 35 is_stmt 0 view .LVU168
 632 023e 282F      		mov r18,r24
 194:switch.c      ****   if (key >= 24)
 633               		.loc 1 194 3 is_stmt 1 view .LVU169
 634               		.loc 1 194 6 is_stmt 0 view .LVU170
 635 0240 8831      		cpi r24,lo8(24)
 636 0242 00F4      		brsh .L28
 637               	.LVL39:
 638               	.LBB8:
 639               	.LBI8:
 193:switch.c      ****   if (key >= 24)
 640               		.loc 1 193 9 is_stmt 1 view .LVU171
 641               	.LBB9:
 195:switch.c      ****     return 0;
 196:switch.c      **** 
 197:switch.c      ****   if ((pressed_switches[key / 8] & (1 << key % 8)) != 0)
 642               		.loc 1 197 3 view .LVU172
 643               		.loc 1 197 29 is_stmt 0 view .LVU173
 644 0244 E82F      		mov r30,r24
 645 0246 E695      		lsr r30
 646 0248 E695      		lsr r30
 647 024a E695      		lsr r30
 648 024c F0E0      		ldi r31,0
 649               		.loc 1 197 24 view .LVU174
 650 024e E050      		subi r30,lo8(-(pressed_switches))
 651 0250 F040      		sbci r31,hi8(-(pressed_switches))
 652 0252 9081      		ld r25,Z
 653 0254 892F      		mov r24,r25
 654               	.LVL40:
 655               		.loc 1 197 24 view .LVU175
 656 0256 90E0      		ldi r25,0
 657               		.loc 1 197 46 view .LVU176
 658 0258 2770      		andi r18,lo8(7)
 659               	.LVL41:
 660               		.loc 1 197 52 view .LVU177
 661 025a 00C0      		rjmp 2f
 662               		1:
 663 025c 9595      		asr r25
 664 025e 8795      		ror r24
 665               		2:
 666 0260 2A95      		dec r18
 667 0262 02F4      		brpl 1b
 668               		.loc 1 197 6 view .LVU178
 669 0264 8170      		andi r24,lo8(1)
 670 0266 0895      		ret
 671               	.LVL42:
 672               	.L28:
 673               		.loc 1 197 6 view .LVU179
 674               	.LBE9:
 675               	.LBE8:
 195:switch.c      ****     return 0;
 676               		.loc 1 195 12 view .LVU180
 677 0268 80E0      		ldi r24,0
 678               	/* epilogue start */
 198:switch.c      ****     return 1;
 199:switch.c      ****   else
 200:switch.c      ****     return 0;
 201:switch.c      **** }
 679               		.loc 1 201 1 view .LVU181
 680 026a 0895      		ret
 681               		.cfi_endproc
 682               	.LFE8:
 684               	.global	just_released
 686               	just_released:
 687               	.LVL43:
 688               	.LFB9:
 202:switch.c      **** 
 203:switch.c      **** uint8_t just_released(uint8_t key) {
 689               		.loc 1 203 36 is_stmt 1 view -0
 690               		.cfi_startproc
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 0 */
 694               	.L__stack_usage = 0
 695               		.loc 1 203 36 is_stmt 0 view .LVU183
 696 026c 282F      		mov r18,r24
 204:switch.c      ****   if (key >= 24)
 697               		.loc 1 204 3 is_stmt 1 view .LVU184
 698               		.loc 1 204 6 is_stmt 0 view .LVU185
 699 026e 8831      		cpi r24,lo8(24)
 700 0270 00F4      		brsh .L31
 205:switch.c      ****     return 0;
 206:switch.c      **** 
 207:switch.c      ****   if ((released_switches[key / 8] & (1 << key % 8)) != 0)
 701               		.loc 1 207 3 is_stmt 1 view .LVU186
 702               		.loc 1 207 30 is_stmt 0 view .LVU187
 703 0272 E82F      		mov r30,r24
 704 0274 E695      		lsr r30
 705 0276 E695      		lsr r30
 706 0278 E695      		lsr r30
 707 027a F0E0      		ldi r31,0
 708               		.loc 1 207 25 view .LVU188
 709 027c E050      		subi r30,lo8(-(released_switches))
 710 027e F040      		sbci r31,hi8(-(released_switches))
 711 0280 9081      		ld r25,Z
 712 0282 892F      		mov r24,r25
 713               	.LVL44:
 714               		.loc 1 207 25 view .LVU189
 715 0284 90E0      		ldi r25,0
 716               		.loc 1 207 47 view .LVU190
 717 0286 2770      		andi r18,lo8(7)
 718               	.LVL45:
 719               		.loc 1 207 53 view .LVU191
 720 0288 00C0      		rjmp 2f
 721               		1:
 722 028a 9595      		asr r25
 723 028c 8795      		ror r24
 724               		2:
 725 028e 2A95      		dec r18
 726 0290 02F4      		brpl 1b
 727               		.loc 1 207 6 view .LVU192
 728 0292 8170      		andi r24,lo8(1)
 729 0294 0895      		ret
 730               	.LVL46:
 731               	.L31:
 205:switch.c      ****     return 0;
 732               		.loc 1 205 12 view .LVU193
 733 0296 80E0      		ldi r24,0
 734               	/* epilogue start */
 208:switch.c      ****     return 1;
 209:switch.c      ****   else
 210:switch.c      ****     return 0;
 211:switch.c      **** }
 735               		.loc 1 211 1 view .LVU194
 736 0298 0895      		ret
 737               		.cfi_endproc
 738               	.LFE9:
 740               	.global	no_keys_pressed
 742               	no_keys_pressed:
 743               	.LFB10:
 212:switch.c      **** 
 213:switch.c      **** uint8_t no_keys_pressed(void) {
 744               		.loc 1 213 31 is_stmt 1 view -0
 745               		.cfi_startproc
 746               	/* prologue: function */
 747               	/* frame size = 0 */
 748               	/* stack size = 0 */
 749               	.L__stack_usage = 0
 214:switch.c      ****   if ((switches[0] == 0) && (switches[1] == 0) && (switches[2] == 0))
 750               		.loc 1 214 3 view .LVU196
 751               		.loc 1 214 48 is_stmt 0 view .LVU197
 752 029a 9091 0000 		lds r25,switches
 753 029e 8091 0000 		lds r24,switches+1
 754 02a2 982B      		or r25,r24
 755 02a4 8091 0000 		lds r24,switches+2
 756 02a8 982B      		or r25,r24
 757 02aa 81E0      		ldi r24,lo8(1)
 758 02ac 01F0      		breq .L33
 759 02ae 80E0      		ldi r24,0
 760               	.L33:
 761               	/* epilogue start */
 215:switch.c      ****     return 1;
 216:switch.c      ****   return 0;
 217:switch.c      **** }
 762               		.loc 1 217 1 view .LVU198
 763 02b0 0895      		ret
 764               		.cfi_endproc
 765               	.LFE10:
 767               	.global	get_lowest_notekey_pressed
 769               	get_lowest_notekey_pressed:
 770               	.LFB11:
 218:switch.c      **** 
 219:switch.c      **** int8_t get_lowest_notekey_pressed(void) {
 771               		.loc 1 219 41 is_stmt 1 view -0
 772               		.cfi_startproc
 773 02b2 0F93      		push r16
 774               		.cfi_def_cfa_offset 3
 775               		.cfi_offset 16, -2
 776 02b4 1F93      		push r17
 777               		.cfi_def_cfa_offset 4
 778               		.cfi_offset 17, -3
 779 02b6 CF93      		push r28
 780               		.cfi_def_cfa_offset 5
 781               		.cfi_offset 28, -4
 782               	/* prologue: function */
 783               	/* frame size = 0 */
 784               	/* stack size = 3 */
 785               	.L__stack_usage = 3
 220:switch.c      ****   int8_t i;
 786               		.loc 1 220 3 view .LVU200
 221:switch.c      ****   for (i = 0; i < 13; i++) {
 787               		.loc 1 221 3 view .LVU201
 788               	.LVL47:
 789               		.loc 1 221 3 is_stmt 0 view .LVU202
 790 02b8 00E0      		ldi r16,lo8(notekey_tab)
 791 02ba 10E0      		ldi r17,hi8(notekey_tab)
 792               		.loc 1 221 10 view .LVU203
 793 02bc C0E0      		ldi r28,0
 794               	.LVL48:
 795               	.L39:
 222:switch.c      ****     if (is_pressed(notekey_tab[i]))
 796               		.loc 1 222 5 is_stmt 1 view .LVU204
 797               		.loc 1 222 9 is_stmt 0 view .LVU205
 798 02be F801      		movw r30,r16
 799 02c0 8191      		ld r24,Z+
 800 02c2 8F01      		movw r16,r30
 801 02c4 0E94 0000 		call is_pressed
 802               	.LVL49:
 803               		.loc 1 222 8 view .LVU206
 804 02c8 8111      		cpse r24,__zero_reg__
 805 02ca 00C0      		rjmp .L37
 806 02cc CF5F      		subi r28,lo8(-(1))
 807               	.LVL50:
 221:switch.c      ****   for (i = 0; i < 13; i++) {
 808               		.loc 1 221 3 discriminator 2 view .LVU207
 809 02ce CD30      		cpi r28,lo8(13)
 810 02d0 01F4      		brne .L39
 223:switch.c      ****       return i;
 224:switch.c      ****   }
 225:switch.c      ****   return -1;
 811               		.loc 1 225 10 view .LVU208
 812 02d2 CFEF      		ldi r28,lo8(-1)
 813               	.LVL51:
 814               	.L37:
 226:switch.c      **** }
 815               		.loc 1 226 1 view .LVU209
 816 02d4 8C2F      		mov r24,r28
 817               	/* epilogue start */
 818 02d6 CF91      		pop r28
 819 02d8 1F91      		pop r17
 820 02da 0F91      		pop r16
 821 02dc 0895      		ret
 822               		.cfi_endproc
 823               	.LFE11:
 825               	.global	get_lowest_numkey_pressed
 827               	get_lowest_numkey_pressed:
 828               	.LFB12:
 227:switch.c      **** 
 228:switch.c      **** uint8_t get_lowest_numkey_pressed(void) {
 829               		.loc 1 228 41 is_stmt 1 view -0
 830               		.cfi_startproc
 831 02de 0F93      		push r16
 832               		.cfi_def_cfa_offset 3
 833               		.cfi_offset 16, -2
 834 02e0 1F93      		push r17
 835               		.cfi_def_cfa_offset 4
 836               		.cfi_offset 17, -3
 837 02e2 CF93      		push r28
 838               		.cfi_def_cfa_offset 5
 839               		.cfi_offset 28, -4
 840               	/* prologue: function */
 841               	/* frame size = 0 */
 842               	/* stack size = 3 */
 843               	.L__stack_usage = 3
 229:switch.c      ****   uint8_t i;
 844               		.loc 1 229 3 view .LVU211
 230:switch.c      ****   for (i = 0; i < 8; i++) {
 845               		.loc 1 230 3 view .LVU212
 846               	.LVL52:
 847               		.loc 1 230 3 is_stmt 0 view .LVU213
 848 02e4 00E0      		ldi r16,lo8(numkey_tab)
 849 02e6 10E0      		ldi r17,hi8(numkey_tab)
 850               		.loc 1 230 10 view .LVU214
 851 02e8 C0E0      		ldi r28,0
 852               	.LVL53:
 853               	.L43:
 231:switch.c      ****     if (is_pressed(numkey_tab[i]))
 854               		.loc 1 231 5 is_stmt 1 view .LVU215
 855               		.loc 1 231 9 is_stmt 0 view .LVU216
 856 02ea F801      		movw r30,r16
 857 02ec 8191      		ld r24,Z+
 858 02ee 8F01      		movw r16,r30
 859 02f0 0E94 0000 		call is_pressed
 860               	.LVL54:
 861 02f4 CF5F      		subi r28,lo8(-(1))
 862               	.LVL55:
 863               		.loc 1 231 8 view .LVU217
 864 02f6 8111      		cpse r24,__zero_reg__
 865 02f8 00C0      		rjmp .L41
 866               	.LVL56:
 230:switch.c      ****   for (i = 0; i < 8; i++) {
 867               		.loc 1 230 3 discriminator 2 view .LVU218
 868 02fa C830      		cpi r28,lo8(8)
 869 02fc 01F4      		brne .L43
 232:switch.c      ****       return i + 1;
 233:switch.c      ****   }
 234:switch.c      ****   return 0;
 870               		.loc 1 234 10 view .LVU219
 871 02fe C0E0      		ldi r28,0
 872               	.LVL57:
 873               	.L41:
 235:switch.c      **** }
 874               		.loc 1 235 1 view .LVU220
 875 0300 8C2F      		mov r24,r28
 876               	/* epilogue start */
 877 0302 CF91      		pop r28
 878 0304 1F91      		pop r17
 879 0306 0F91      		pop r16
 880 0308 0895      		ret
 881               		.cfi_endproc
 882               	.LFE12:
 884               	.global	get_lowest_numkey_just_pressed
 886               	get_lowest_numkey_just_pressed:
 887               	.LFB13:
 236:switch.c      **** 
 237:switch.c      **** uint8_t get_lowest_numkey_just_pressed(void) {
 888               		.loc 1 237 46 is_stmt 1 view -0
 889               		.cfi_startproc
 890 030a 0F93      		push r16
 891               		.cfi_def_cfa_offset 3
 892               		.cfi_offset 16, -2
 893 030c 1F93      		push r17
 894               		.cfi_def_cfa_offset 4
 895               		.cfi_offset 17, -3
 896 030e CF93      		push r28
 897               		.cfi_def_cfa_offset 5
 898               		.cfi_offset 28, -4
 899               	/* prologue: function */
 900               	/* frame size = 0 */
 901               	/* stack size = 3 */
 902               	.L__stack_usage = 3
 238:switch.c      ****   uint8_t i;
 903               		.loc 1 238 3 view .LVU222
 239:switch.c      ****   for (i = 0; i < 8; i++) {
 904               		.loc 1 239 3 view .LVU223
 905               	.LVL58:
 906               		.loc 1 239 3 is_stmt 0 view .LVU224
 907 0310 00E0      		ldi r16,lo8(numkey_tab)
 908 0312 10E0      		ldi r17,hi8(numkey_tab)
 909               		.loc 1 239 10 view .LVU225
 910 0314 C0E0      		ldi r28,0
 911               	.LVL59:
 912               	.L47:
 240:switch.c      ****     if (just_pressed(numkey_tab[i]))
 913               		.loc 1 240 5 is_stmt 1 view .LVU226
 914               		.loc 1 240 9 is_stmt 0 view .LVU227
 915 0316 F801      		movw r30,r16
 916 0318 8191      		ld r24,Z+
 917 031a 8F01      		movw r16,r30
 918 031c 0E94 0000 		call just_pressed
 919               	.LVL60:
 920 0320 CF5F      		subi r28,lo8(-(1))
 921               	.LVL61:
 922               		.loc 1 240 8 view .LVU228
 923 0322 8111      		cpse r24,__zero_reg__
 924 0324 00C0      		rjmp .L45
 925               	.LVL62:
 239:switch.c      ****   for (i = 0; i < 8; i++) {
 926               		.loc 1 239 3 discriminator 2 view .LVU229
 927 0326 C830      		cpi r28,lo8(8)
 928 0328 01F4      		brne .L47
 241:switch.c      ****       return i + 1;
 242:switch.c      ****   }
 243:switch.c      ****   return 0;
 929               		.loc 1 243 10 view .LVU230
 930 032a C0E0      		ldi r28,0
 931               	.LVL63:
 932               	.L45:
 244:switch.c      **** }
 933               		.loc 1 244 1 view .LVU231
 934 032c 8C2F      		mov r24,r28
 935               	/* epilogue start */
 936 032e CF91      		pop r28
 937 0330 1F91      		pop r17
 938 0332 0F91      		pop r16
 939 0334 0895      		ret
 940               		.cfi_endproc
 941               	.LFE13:
 943               	.global	has_bank_knob_changed
 945               	has_bank_knob_changed:
 946               	.LFB14:
 245:switch.c      **** 
 246:switch.c      **** uint8_t has_bank_knob_changed(void) {
 947               		.loc 1 246 37 is_stmt 1 view -0
 948               		.cfi_startproc
 949               	/* prologue: function */
 950               	/* frame size = 0 */
 951               	/* stack size = 0 */
 952               	.L__stack_usage = 0
 247:switch.c      ****   uint8_t temp = bank_switched;
 953               		.loc 1 247 3 view .LVU233
 954               		.loc 1 247 11 is_stmt 0 view .LVU234
 955 0336 8091 0000 		lds r24,bank_switched
 956               	.LVL64:
 248:switch.c      ****   bank_switched = 0;
 957               		.loc 1 248 3 is_stmt 1 view .LVU235
 958               		.loc 1 248 17 is_stmt 0 view .LVU236
 959 033a 1092 0000 		sts bank_switched,__zero_reg__
 249:switch.c      ****   return temp;
 960               		.loc 1 249 3 is_stmt 1 view .LVU237
 961               	/* epilogue start */
 250:switch.c      **** }
 962               		.loc 1 250 1 is_stmt 0 view .LVU238
 963 033e 0895      		ret
 964               		.cfi_endproc
 965               	.LFE14:
 967               		.section	.rodata
 970               	numkey_tab:
 971 0000 0405 0607 		.ascii	"\004\005\006\007\021\022\020\023"
 971      1112 1013 
 974               	notekey_tab:
 975 0008 0409 050A 		.ascii	"\004\t\005\n\006\007\013\021\f\022\r\020\023"
 975      0607 0B11 
 975      0C12 0D10 
 975      13
 976               	.global	debounce_timer
 977               		.section .bss
 980               	debounce_timer:
 981 0000 00        		.zero	1
 982               		.comm	last_bank,1,1
 983               		.comm	last_func,1,1
 984               		.comm	bank,1,1
 985               		.comm	function,1,1
 986               	.global	bank_switched
 989               	bank_switched:
 990 0001 00        		.zero	1
 991               		.comm	released_switches,3,1
 992               		.comm	pressed_switches,3,1
 993               		.comm	last_switches,3,1
 994               		.comm	switches,3,1
 995               		.comm	last_tempo,1,1
 996               		.text
 997               	.Letext0:
 998               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 999               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdio.h"
 1000               		.file 4 "main.h"
 1001               		.file 5 "led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 switch.c
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:4      *ABS*:000000000000003f __SREG__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:12     .text:0000000000000000 read_keypad
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:91     .text:0000000000000026 select_bank_read
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:110    .text:000000000000002a select_func_read
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:129    .text:000000000000002e read_bank
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:197    .text:0000000000000066 read_function
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:227    .text:0000000000000070 read_switches
                            *COM*:0000000000000003 pressed_switches
                            *COM*:0000000000000003 released_switches
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:980    .bss:0000000000000000 debounce_timer
                            *COM*:0000000000000003 switches
                            *COM*:0000000000000003 last_switches
                            *COM*:0000000000000001 bank
                            *COM*:0000000000000001 last_bank
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:989    .bss:0000000000000001 bank_switched
                            *COM*:0000000000000001 function
                            *COM*:0000000000000001 last_func
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:558    .text:0000000000000210 is_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:622    .text:000000000000023e just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:686    .text:000000000000026c just_released
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:742    .text:000000000000029a no_keys_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:769    .text:00000000000002b2 get_lowest_notekey_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:974    .rodata:0000000000000008 notekey_tab
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:827    .text:00000000000002de get_lowest_numkey_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:970    .rodata:0000000000000000 numkey_tab
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:886    .text:000000000000030a get_lowest_numkey_just_pressed
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cccjszEM.s:945    .text:0000000000000336 has_bank_knob_changed
                            *COM*:0000000000000001 last_tempo

UNDEFINED SYMBOLS
newtempo
tempo
change_tempo
clock_leds
__do_copy_data
__do_clear_bss
