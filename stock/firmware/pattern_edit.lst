   1               		.file	"pattern_edit.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	load_pattern
  12               	load_pattern:
  13               	.LVL0:
  14               	.LFB2:
  15               		.file 1 "pattern_edit.c"
   1:pattern_edit.c **** /*
   2:pattern_edit.c ****  * The software for the x0xb0x is available for use in accordance with the
   3:pattern_edit.c ****  * following open source license (MIT License). For more information about
   4:pattern_edit.c ****  * OS licensing, please visit -> http://www.opensource.org/
   5:pattern_edit.c ****  *
   6:pattern_edit.c ****  * For more information about the x0xb0x project, please visit
   7:pattern_edit.c ****  * -> http://www.ladyada.net/make/x0xb0x
   8:pattern_edit.c ****  *
   9:pattern_edit.c ****  *                                     *****
  10:pattern_edit.c ****  * Copyright (c) 2005 Limor Fried
  11:pattern_edit.c ****  *
  12:pattern_edit.c ****  * Permission is hereby granted, free of charge, to any person obtaining a
  13:pattern_edit.c ****  * copy of this software and associated documentation files (the "Software"),
  14:pattern_edit.c ****  * to deal in the Software without restriction, including without limitation
  15:pattern_edit.c ****  * the rights to use, copy, modify, merge, publish, distribute, sublicense,
  16:pattern_edit.c ****  * and/or sell copies of the Software, and to permit persons to whom the
  17:pattern_edit.c ****  * Software is furnished to do so, subject to the following conditions:
  18:pattern_edit.c ****  *
  19:pattern_edit.c ****  * The above copyright notice and this permission notice shall be included in
  20:pattern_edit.c ****  * all copies or substantial portions of the Software.
  21:pattern_edit.c ****  *
  22:pattern_edit.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  23:pattern_edit.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  24:pattern_edit.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  25:pattern_edit.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  26:pattern_edit.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  27:pattern_edit.c ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  28:pattern_edit.c ****  * IN THE SOFTWARE.
  29:pattern_edit.c ****  *                                     *****
  30:pattern_edit.c ****  *
  31:pattern_edit.c ****  */
  32:pattern_edit.c **** 
  33:pattern_edit.c **** #include <inttypes.h>
  34:pattern_edit.c **** #include <stdio.h>
  35:pattern_edit.c **** #include <avr/interrupt.h>
  36:pattern_edit.c **** #include "pattern.h"
  37:pattern_edit.c **** #include "switch.h"
  38:pattern_edit.c **** #include "led.h"
  39:pattern_edit.c **** #include "main.h"
  40:pattern_edit.c **** #include "eeprom.h"
  41:pattern_edit.c **** #include "synth.h"
  42:pattern_edit.c **** #include "delay.h"
  43:pattern_edit.c **** #include "dinsync.h"
  44:pattern_edit.c **** #include "midi.h"
  45:pattern_edit.c **** 
  46:pattern_edit.c **** // these are set by read_switches()
  47:pattern_edit.c **** extern uint8_t function, bank;
  48:pattern_edit.c **** 
  49:pattern_edit.c **** // the midi clock counter
  50:pattern_edit.c **** extern volatile int16_t midisync_clocked;
  51:pattern_edit.c **** extern volatile uint8_t playing;
  52:pattern_edit.c **** 
  53:pattern_edit.c **** // The tempo note counter. used to start runwrite on a note-on interrupt call
  54:pattern_edit.c **** volatile uint8_t note_counter;
  55:pattern_edit.c **** 
  56:pattern_edit.c **** volatile uint8_t curr_pattern_index;
  57:pattern_edit.c **** uint8_t play_loaded_pattern; // are we playing?
  58:pattern_edit.c **** uint8_t patt_location, patt_bank;
  59:pattern_edit.c **** volatile uint8_t pattern_buff[PATT_SIZE]; // the 'loaded' pattern buffer
  60:pattern_edit.c **** 
  61:pattern_edit.c **** uint8_t in_runwrite_mode, in_stepwrite_mode;
  62:pattern_edit.c **** uint8_t dirtyflag = 0; // you filthy pattern, have you been modified?
  63:pattern_edit.c **** 
  64:pattern_edit.c **** extern uint8_t curr_note, sync;
  65:pattern_edit.c **** 
  66:pattern_edit.c **** /***********************/
  67:pattern_edit.c **** void do_pattern_edit(void) {
  68:pattern_edit.c ****   uint8_t i, curr_function, midi_cmd;
  69:pattern_edit.c **** 
  70:pattern_edit.c ****   curr_function = function;
  71:pattern_edit.c **** 
  72:pattern_edit.c ****   // initialize
  73:pattern_edit.c ****   patt_location = 0;
  74:pattern_edit.c ****   in_stepwrite_mode = 0;
  75:pattern_edit.c ****   in_runwrite_mode = 0;
  76:pattern_edit.c ****   play_loaded_pattern = 0;
  77:pattern_edit.c ****   curr_pattern_index = 0;
  78:pattern_edit.c ****   curr_note = 0;
  79:pattern_edit.c **** 
  80:pattern_edit.c ****   if (sync == INTERNAL_SYNC)
  81:pattern_edit.c ****     turn_on_tempo();
  82:pattern_edit.c ****   else {
  83:pattern_edit.c ****     turn_off_tempo();
  84:pattern_edit.c ****     dinsync_set_out();
  85:pattern_edit.c ****   }
  86:pattern_edit.c **** 
  87:pattern_edit.c ****   read_switches();
  88:pattern_edit.c ****   patt_bank = bank;
  89:pattern_edit.c **** 
  90:pattern_edit.c ****   load_pattern(patt_bank, patt_location);
  91:pattern_edit.c ****   clear_all_leds();
  92:pattern_edit.c **** 
  93:pattern_edit.c ****   set_bank_led(bank);
  94:pattern_edit.c **** 
  95:pattern_edit.c ****   while (1) {
  96:pattern_edit.c ****     read_switches();
  97:pattern_edit.c **** 
  98:pattern_edit.c ****     if (function != curr_function) {
  99:pattern_edit.c ****       // oops i guess they want something else, return!
 100:pattern_edit.c ****       turn_off_tempo();
 101:pattern_edit.c ****       play_loaded_pattern = FALSE;
 102:pattern_edit.c **** 
 103:pattern_edit.c ****       // turn off all sound & output signals
 104:pattern_edit.c ****       note_off(0);
 105:pattern_edit.c ****       dinsync_stop();
 106:pattern_edit.c ****       midi_stop();
 107:pattern_edit.c **** 
 108:pattern_edit.c ****       // clear the LEDs
 109:pattern_edit.c ****       clear_all_leds();
 110:pattern_edit.c ****       clock_leds();
 111:pattern_edit.c ****       return;
 112:pattern_edit.c ****     }
 113:pattern_edit.c **** 
 114:pattern_edit.c ****     if (patt_bank != bank) {
 115:pattern_edit.c ****       // putstring("changed bank!");
 116:pattern_edit.c ****       if (in_runwrite_mode)
 117:pattern_edit.c ****         stop_runwrite_mode();
 118:pattern_edit.c ****       if (in_stepwrite_mode)
 119:pattern_edit.c ****         stop_stepwrite_mode();
 120:pattern_edit.c ****       patt_bank = bank;
 121:pattern_edit.c ****       load_pattern(patt_bank, patt_location);
 122:pattern_edit.c ****       clear_bank_leds();
 123:pattern_edit.c ****       set_bank_led(bank);
 124:pattern_edit.c ****     }
 125:pattern_edit.c **** 
 126:pattern_edit.c ****     // if they pressed one of the 8 bottom buttons (location select)
 127:pattern_edit.c ****     if (!(in_runwrite_mode || in_stepwrite_mode)) {
 128:pattern_edit.c ****       // display whatever location is selected on number keys
 129:pattern_edit.c ****       set_numkey_led(patt_location + 1);
 130:pattern_edit.c **** 
 131:pattern_edit.c ****       i = get_lowest_numkey_pressed();
 132:pattern_edit.c ****       if (i != 0) {
 133:pattern_edit.c ****         clear_notekey_leds();
 134:pattern_edit.c ****         set_numkey_led(i);
 135:pattern_edit.c ****         patt_location = i - 1;
 136:pattern_edit.c ****         load_pattern(patt_bank, patt_location);
 137:pattern_edit.c ****         // printf("location #%d\n\r", patt_location);
 138:pattern_edit.c ****       }
 139:pattern_edit.c ****     }
 140:pattern_edit.c **** 
 141:pattern_edit.c ****     // if they hit random, fill pattern buffer with random data
 142:pattern_edit.c ****     if (just_pressed(KEY_CHAIN) && in_runwrite_mode) {
 143:pattern_edit.c ****       set_led(LED_CHAIN);
 144:pattern_edit.c ****       for (i = 0; i < PATT_SIZE; i++) {
 145:pattern_edit.c ****         pattern_buff[i] = random();
 146:pattern_edit.c ****       }
 147:pattern_edit.c ****       dirtyflag = 1; // clearly, changed
 148:pattern_edit.c ****     } else if (just_released(KEY_CHAIN) && in_runwrite_mode) {
 149:pattern_edit.c ****       clear_led(LED_CHAIN);
 150:pattern_edit.c ****     }
 151:pattern_edit.c **** 
 152:pattern_edit.c ****     // midi sync clock ticks
 153:pattern_edit.c ****     if (playing && (sync == MIDI_SYNC) && (midisync_clocked > 0)) {
 154:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 155:pattern_edit.c ****       do_tempo();
 156:pattern_edit.c ****       continue;
 157:pattern_edit.c ****     }
 158:pattern_edit.c **** 
 159:pattern_edit.c ****     // if syncing by MIDI, look for midi commands
 160:pattern_edit.c ****     if (sync == MIDI_SYNC) {
 161:pattern_edit.c ****       midi_cmd = midi_recv_cmd(); // returns 0 if no midi commands waiting
 162:pattern_edit.c ****       if (midi_cmd != 0)
 163:pattern_edit.c ****         putnum_uh(midi_cmd);
 164:pattern_edit.c ****     }
 165:pattern_edit.c **** 
 166:pattern_edit.c ****     // if they hit run/stop, or on midi stop/start,
 167:pattern_edit.c ****     // play the pattern in scratch! (until they hit rs again)
 168:pattern_edit.c ****     if (in_runwrite_mode &&
 169:pattern_edit.c ****         (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 170:pattern_edit.c ****          ((sync == MIDI_SYNC) && (midi_cmd == MIDI_STOP)))) {
 171:pattern_edit.c ****       stop_runwrite_mode();
 172:pattern_edit.c ****     } else if (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 173:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 174:pattern_edit.c ****                 ((midi_cmd == MIDI_START) || (midi_cmd == MIDI_CONTINUE)))) {
 175:pattern_edit.c ****       if (in_stepwrite_mode)
 176:pattern_edit.c ****         stop_stepwrite_mode();
 177:pattern_edit.c ****       start_runwrite_mode();
 178:pattern_edit.c ****     }
 179:pattern_edit.c **** 
 180:pattern_edit.c ****     if (in_runwrite_mode || in_stepwrite_mode) {
 181:pattern_edit.c ****       uint8_t curr_note, index;
 182:pattern_edit.c ****       int8_t shift;
 183:pattern_edit.c **** 
 184:pattern_edit.c ****       index = curr_pattern_index;
 185:pattern_edit.c ****       curr_note = pattern_buff[index] & 0x3F;
 186:pattern_edit.c **** 
 187:pattern_edit.c ****       // dont accent or slide 'done' notes, duh!
 188:pattern_edit.c ****       if (just_pressed(KEY_ACCENT) && (curr_note != 0x3F)) {
 189:pattern_edit.c ****         // putstring("accent ");
 190:pattern_edit.c ****         pattern_buff[index] ^= 1 << 6;
 191:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 192:pattern_edit.c ****       }
 193:pattern_edit.c ****       if (just_pressed(KEY_SLIDE) && (curr_note != 0x3F)) {
 194:pattern_edit.c ****         // putstring("slide ");
 195:pattern_edit.c ****         pattern_buff[index] ^= 1 << 7;
 196:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 197:pattern_edit.c ****       }
 198:pattern_edit.c **** 
 199:pattern_edit.c ****       // rests/dones are middle octave (if you hit a note key next)
 200:pattern_edit.c ****       if ((curr_note == 0x3F) || (curr_note == 0))
 201:pattern_edit.c ****         shift = 0;
 202:pattern_edit.c ****       else if (curr_note < C2)
 203:pattern_edit.c ****         shift = -1;
 204:pattern_edit.c ****       else if (curr_note <= C3)
 205:pattern_edit.c ****         shift = 0;
 206:pattern_edit.c ****       else if (curr_note <= C4)
 207:pattern_edit.c ****         shift = 1;
 208:pattern_edit.c ****       else if (curr_note <= C5)
 209:pattern_edit.c ****         shift = 2;
 210:pattern_edit.c ****       else
 211:pattern_edit.c ****         shift = 3;
 212:pattern_edit.c **** 
 213:pattern_edit.c ****       if (just_pressed(KEY_REST)) {
 214:pattern_edit.c ****         curr_note = 0;
 215:pattern_edit.c ****       }
 216:pattern_edit.c **** 
 217:pattern_edit.c ****       // cant change octaves on rest/done
 218:pattern_edit.c ****       if (just_pressed(KEY_UP) && (curr_note != 0x3F) && (curr_note != 0))
 219:pattern_edit.c ****         if (shift < 2)
 220:pattern_edit.c ****           curr_note += OCTAVE;
 221:pattern_edit.c **** 
 222:pattern_edit.c ****       // cant change octaves on rest/done, but default to mid octave
 223:pattern_edit.c ****       if (just_pressed(KEY_DOWN) && (curr_note != 0x3F) && (curr_note != 0))
 224:pattern_edit.c ****         if (shift > -1)
 225:pattern_edit.c ****           curr_note -= OCTAVE;
 226:pattern_edit.c **** 
 227:pattern_edit.c ****       if (just_pressed(KEY_C))
 228:pattern_edit.c ****         curr_note = C2 + shift * OCTAVE;
 229:pattern_edit.c ****       if (just_pressed(KEY_CS))
 230:pattern_edit.c ****         curr_note = C2_SHARP + shift * OCTAVE;
 231:pattern_edit.c ****       if (just_pressed(KEY_D))
 232:pattern_edit.c ****         curr_note = D2 + shift * OCTAVE;
 233:pattern_edit.c ****       if (just_pressed(KEY_DS))
 234:pattern_edit.c ****         curr_note = D2_SHARP + shift * OCTAVE;
 235:pattern_edit.c **** 
 236:pattern_edit.c ****       // note shouldnt go 'above' 0x3E
 237:pattern_edit.c ****       if (shift < 3) {
 238:pattern_edit.c ****         if (just_pressed(KEY_E))
 239:pattern_edit.c ****           curr_note = E2 + shift * OCTAVE;
 240:pattern_edit.c ****         if (just_pressed(KEY_F))
 241:pattern_edit.c ****           curr_note = F2 + shift * OCTAVE;
 242:pattern_edit.c ****         if (just_pressed(KEY_FS))
 243:pattern_edit.c ****           curr_note = F2_SHARP + shift * OCTAVE;
 244:pattern_edit.c ****         if (just_pressed(KEY_G))
 245:pattern_edit.c ****           curr_note = G2 + shift * OCTAVE;
 246:pattern_edit.c ****         if (just_pressed(KEY_GS))
 247:pattern_edit.c ****           curr_note = G2_SHARP + shift * OCTAVE;
 248:pattern_edit.c ****         if (just_pressed(KEY_A))
 249:pattern_edit.c ****           curr_note = A3 + shift * OCTAVE;
 250:pattern_edit.c ****         if (just_pressed(KEY_AS))
 251:pattern_edit.c ****           curr_note = A3_SHARP + shift * OCTAVE;
 252:pattern_edit.c ****         if (just_pressed(KEY_B))
 253:pattern_edit.c ****           curr_note = B3 + shift * OCTAVE;
 254:pattern_edit.c ****         if (just_pressed(KEY_C2)) {
 255:pattern_edit.c ****           curr_note = C3 + shift * OCTAVE;
 256:pattern_edit.c ****         }
 257:pattern_edit.c ****       }
 258:pattern_edit.c **** 
 259:pattern_edit.c ****       // when changing to a note from end of pattern (0xff), toss top 2 bits
 260:pattern_edit.c ****       if ((pattern_buff[index] != 0xFF) || (curr_note == 0x3F))
 261:pattern_edit.c ****         curr_note |= (pattern_buff[index] & 0xC0);
 262:pattern_edit.c **** 
 263:pattern_edit.c ****       if (curr_note != pattern_buff[index]) {
 264:pattern_edit.c ****         if (in_stepwrite_mode) {
 265:pattern_edit.c ****           note_off(0);
 266:pattern_edit.c ****           delay_ms(1);
 267:pattern_edit.c ****         }
 268:pattern_edit.c ****         // if the note changed!
 269:pattern_edit.c ****         pattern_buff[index] = curr_note;
 270:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 271:pattern_edit.c **** 
 272:pattern_edit.c ****         if (in_stepwrite_mode) // restrike note
 273:pattern_edit.c ****           note_on(curr_note & 0x3F,
 274:pattern_edit.c ****                   0,                       // no slide
 275:pattern_edit.c ****                   (curr_note >> 6) & 0x1); // accent
 276:pattern_edit.c ****       }
 277:pattern_edit.c **** 
 278:pattern_edit.c ****       if (curr_note != 0xFF) {
 279:pattern_edit.c ****         set_note_led(curr_note);
 280:pattern_edit.c ****         if (dirtyflag)
 281:pattern_edit.c ****           set_led_blink(LED_DONE);
 282:pattern_edit.c ****         else
 283:pattern_edit.c ****           clear_led(LED_DONE);
 284:pattern_edit.c ****       } else {
 285:pattern_edit.c ****         clear_note_leds();
 286:pattern_edit.c ****         clear_led_blink(LED_DONE);
 287:pattern_edit.c ****         clear_led_blink(LED_UP);
 288:pattern_edit.c ****         set_led(LED_DONE);
 289:pattern_edit.c ****       }
 290:pattern_edit.c ****     }
 291:pattern_edit.c **** 
 292:pattern_edit.c ****     // if in step mode & they press 'next' or 'prev, then step fwd/back,
 293:pattern_edit.c ****     // otherwise start stepmode
 294:pattern_edit.c ****     if (just_pressed(KEY_NEXT) || just_pressed(KEY_PREV)) {
 295:pattern_edit.c ****       uint8_t prev_note = curr_note;
 296:pattern_edit.c **** 
 297:pattern_edit.c ****       if (in_stepwrite_mode) {
 298:pattern_edit.c ****         // turn off the last note
 299:pattern_edit.c ****         note_off((curr_note >> 7) & 0x1);
 300:pattern_edit.c ****         delay_ms(1);
 301:pattern_edit.c ****         // putstring("step");
 302:pattern_edit.c ****         if (just_pressed(KEY_NEXT)) {
 303:pattern_edit.c ****           // get next note from pattern
 304:pattern_edit.c ****           if (((curr_pattern_index + 1) >= PATT_SIZE) ||
 305:pattern_edit.c ****               (pattern_buff[curr_pattern_index] == END_OF_PATTERN))
 306:pattern_edit.c ****             curr_pattern_index = 0;
 307:pattern_edit.c ****           else
 308:pattern_edit.c ****             curr_pattern_index++;
 309:pattern_edit.c ****         } else {
 310:pattern_edit.c ****           // get previous note from pattern
 311:pattern_edit.c ****           if (curr_pattern_index == 0) {
 312:pattern_edit.c ****             // search thru the buffer -forward- to find the EOP byte
 313:pattern_edit.c ****             while ((curr_pattern_index < PATT_SIZE - 1) &&
 314:pattern_edit.c ****                    (pattern_buff[curr_pattern_index] != END_OF_PATTERN))
 315:pattern_edit.c ****               curr_pattern_index++;
 316:pattern_edit.c ****           } else {
 317:pattern_edit.c ****             curr_pattern_index--;
 318:pattern_edit.c ****           }
 319:pattern_edit.c ****         }
 320:pattern_edit.c **** 
 321:pattern_edit.c ****         clear_bank_leds();
 322:pattern_edit.c ****         set_bank_led(curr_pattern_index);
 323:pattern_edit.c **** 
 324:pattern_edit.c ****         // putstring("i = "); putnum_ud(curr_pattern_index); putstring("\n\r");
 325:pattern_edit.c ****         curr_note = pattern_buff[curr_pattern_index];
 326:pattern_edit.c **** 
 327:pattern_edit.c ****         if (curr_note == 0xFF) {
 328:pattern_edit.c ****           clear_led(LED_ACCENT);
 329:pattern_edit.c ****           clear_led(LED_SLIDE);
 330:pattern_edit.c ****           set_led(LED_DONE);
 331:pattern_edit.c ****           clear_led_blink(LED_DONE);
 332:pattern_edit.c ****         } else {
 333:pattern_edit.c ****           clear_led(LED_DONE);
 334:pattern_edit.c ****           if (dirtyflag)
 335:pattern_edit.c ****             set_led_blink(LED_DONE);
 336:pattern_edit.c **** 
 337:pattern_edit.c ****           note_on(curr_note & 0x3F,
 338:pattern_edit.c ****                   prev_note >> 7,          // slide
 339:pattern_edit.c ****                   (curr_note >> 6) & 0x1); // accent
 340:pattern_edit.c **** 
 341:pattern_edit.c ****           set_note_led(curr_note);
 342:pattern_edit.c ****         }
 343:pattern_edit.c ****       } else if (just_pressed(KEY_NEXT) && !in_runwrite_mode) {
 344:pattern_edit.c ****         start_stepwrite_mode();
 345:pattern_edit.c **** 
 346:pattern_edit.c ****         curr_pattern_index = 0;
 347:pattern_edit.c **** 
 348:pattern_edit.c ****         curr_note = pattern_buff[curr_pattern_index];
 349:pattern_edit.c ****         if (curr_note != 0xFF) {
 350:pattern_edit.c ****           note_on(curr_note & 0x3F,
 351:pattern_edit.c ****                   0,                       // no slide on first note
 352:pattern_edit.c ****                   (curr_note >> 6) & 0x1); // accent
 353:pattern_edit.c **** 
 354:pattern_edit.c ****           set_note_led(curr_note);
 355:pattern_edit.c ****         }
 356:pattern_edit.c ****       }
 357:pattern_edit.c ****     }
 358:pattern_edit.c **** 
 359:pattern_edit.c ****     // if they hit done, save buffer to memory
 360:pattern_edit.c ****     if (just_pressed(KEY_DONE)) {
 361:pattern_edit.c ****       if (in_stepwrite_mode) {
 362:pattern_edit.c **** 
 363:pattern_edit.c ****         /*
 364:pattern_edit.c ****         for (i = curr_pattern_index + 1; i < PATT_SIZE; i++)
 365:pattern_edit.c ****           pattern_buff[i] = 0xFF;
 366:pattern_edit.c ****         */
 367:pattern_edit.c ****         if (curr_pattern_index + 1 < PATT_SIZE)
 368:pattern_edit.c ****           pattern_buff[curr_pattern_index + 1] = 0xff;
 369:pattern_edit.c **** 
 370:pattern_edit.c ****         stop_stepwrite_mode();
 371:pattern_edit.c ****       }
 372:pattern_edit.c ****       write_pattern(bank, patt_location);
 373:pattern_edit.c ****       dirtyflag = 0; // not dirty anymore, saved!
 374:pattern_edit.c ****       clear_led_blink(LED_DONE);
 375:pattern_edit.c ****     }
 376:pattern_edit.c **** 
 377:pattern_edit.c ****   } // while loop
 378:pattern_edit.c **** }
 379:pattern_edit.c **** 
 380:pattern_edit.c **** void load_pattern(uint8_t bank, uint8_t patt_location) {
  16               		.loc 1 380 56 view -0
  17               		.cfi_startproc
  18               		.loc 1 380 56 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 17, -3
  25 0004 CF93      		push r28
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 28, -4
  28 0006 DF93      		push r29
  29               		.cfi_def_cfa_offset 6
  30               		.cfi_offset 29, -5
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 4 */
  34               	.L__stack_usage = 4
  35 0008 D82F      		mov r29,r24
  36 000a C62F      		mov r28,r22
 381:pattern_edit.c ****   uint16_t pattern_addr;
  37               		.loc 1 381 3 is_stmt 1 view .LVU2
 382:pattern_edit.c ****   uint8_t i;
  38               		.loc 1 382 3 view .LVU3
 383:pattern_edit.c **** 
 384:pattern_edit.c ****   clock_leds();
  39               		.loc 1 384 3 view .LVU4
  40 000c 0E94 0000 		call clock_leds
  41               	.LVL1:
 385:pattern_edit.c **** 
 386:pattern_edit.c ****   pattern_addr = PATTERN_MEM + bank * BANK_SIZE + patt_location * PATT_SIZE;
  42               		.loc 1 386 3 view .LVU5
  43               		.loc 1 386 49 is_stmt 0 view .LVU6
  44 0010 28E0      		ldi r18,lo8(8)
  45 0012 D29F      		mul r29,r18
  46 0014 C001      		movw r24,r0
  47 0016 1124      		clr __zero_reg__
  48 0018 C80F      		add r28,r24
  49 001a D92F      		mov r29,r25
  50 001c D11D      		adc r29,__zero_reg__
  51               	.LVL2:
  52               		.loc 1 386 49 view .LVU7
  53 001e 84E0      		ldi r24,4
  54               		1:
  55 0020 CC0F      		lsl r28
  56 0022 DD1F      		rol r29
  57 0024 8A95      		dec r24
  58 0026 01F4      		brne 1b
  59               	.LVL3:
 387:pattern_edit.c **** 
 388:pattern_edit.c ****   /*
 389:pattern_edit.c ****   putstring("load patt [");
 390:pattern_edit.c ****   putnum_ud(bank); putstring(", "); putnum_ud(patt_location);
 391:pattern_edit.c ****   putstring(" @ 0x");
 392:pattern_edit.c ****   putnum_uh(pattern_addr);
 393:pattern_edit.c ****   putstring("\n\r");
 394:pattern_edit.c ****   */
 395:pattern_edit.c **** 
 396:pattern_edit.c ****   for (i = 0; i < PATT_SIZE; i++) {
  60               		.loc 1 396 3 is_stmt 1 view .LVU8
 386:pattern_edit.c **** 
  61               		.loc 1 386 16 is_stmt 0 view .LVU9
  62 0028 10E0      		ldi r17,0
  63 002a 00E0      		ldi r16,0
  64               	.LVL4:
  65               	.L2:
 397:pattern_edit.c ****     pattern_buff[i] = spieeprom_read(pattern_addr + i);
  66               		.loc 1 397 5 is_stmt 1 discriminator 3 view .LVU10
  67               		.loc 1 397 23 is_stmt 0 discriminator 3 view .LVU11
  68 002c CE01      		movw r24,r28
  69 002e 800F      		add r24,r16
  70 0030 911F      		adc r25,r17
  71 0032 0E94 0000 		call spieeprom_read
  72               	.LVL5:
  73               		.loc 1 397 21 discriminator 3 view .LVU12
  74 0036 F801      		movw r30,r16
  75 0038 E050      		subi r30,lo8(-(pattern_buff))
  76 003a F040      		sbci r31,hi8(-(pattern_buff))
  77 003c 8083      		st Z,r24
  78               	.LVL6:
  79               		.loc 1 397 21 discriminator 3 view .LVU13
  80 003e 0F5F      		subi r16,-1
  81 0040 1F4F      		sbci r17,-1
  82               	.LVL7:
 396:pattern_edit.c ****     pattern_buff[i] = spieeprom_read(pattern_addr + i);
  83               		.loc 1 396 3 discriminator 3 view .LVU14
  84 0042 0031      		cpi r16,16
  85 0044 1105      		cpc r17,__zero_reg__
  86 0046 01F4      		brne .L2
 398:pattern_edit.c ****     // putstring(" 0x"); putnum_uh(pattern_buff[i]);
 399:pattern_edit.c ****   }
 400:pattern_edit.c ****   // putstring("\n\r");
 401:pattern_edit.c **** 
 402:pattern_edit.c ****   dirtyflag = 0;
  87               		.loc 1 402 3 is_stmt 1 view .LVU15
  88               		.loc 1 402 13 is_stmt 0 view .LVU16
  89 0048 1092 0000 		sts dirtyflag,__zero_reg__
 403:pattern_edit.c ****   clear_led_blink(LED_DONE);
  90               		.loc 1 403 3 is_stmt 1 view .LVU17
  91 004c 80E0      		ldi r24,0
  92 004e 0E94 0000 		call clear_led_blink
  93               	.LVL8:
 404:pattern_edit.c ****   clock_leds();
  94               		.loc 1 404 3 view .LVU18
  95               	/* epilogue start */
 405:pattern_edit.c **** }
  96               		.loc 1 405 1 is_stmt 0 view .LVU19
  97 0052 DF91      		pop r29
  98               	.LVL9:
  99               		.loc 1 405 1 view .LVU20
 100 0054 CF91      		pop r28
 101               	.LVL10:
 102               		.loc 1 405 1 view .LVU21
 103 0056 1F91      		pop r17
 104 0058 0F91      		pop r16
 105               	.LVL11:
 404:pattern_edit.c ****   clock_leds();
 106               		.loc 1 404 3 view .LVU22
 107 005a 0C94 0000 		jmp clock_leds
 108               	.LVL12:
 109               		.cfi_endproc
 110               	.LFE2:
 112               	.global	write_pattern
 114               	write_pattern:
 115               	.LVL13:
 116               	.LFB3:
 406:pattern_edit.c **** 
 407:pattern_edit.c **** void write_pattern(uint8_t bank, uint8_t patt_location) {
 117               		.loc 1 407 57 is_stmt 1 view -0
 118               		.cfi_startproc
 119               		.loc 1 407 57 is_stmt 0 view .LVU24
 120 005e 0F93      		push r16
 121               		.cfi_def_cfa_offset 3
 122               		.cfi_offset 16, -2
 123 0060 1F93      		push r17
 124               		.cfi_def_cfa_offset 4
 125               		.cfi_offset 17, -3
 126 0062 CF93      		push r28
 127               		.cfi_def_cfa_offset 5
 128               		.cfi_offset 28, -4
 129 0064 DF93      		push r29
 130               		.cfi_def_cfa_offset 6
 131               		.cfi_offset 29, -5
 132               	/* prologue: function */
 133               	/* frame size = 0 */
 134               	/* stack size = 4 */
 135               	.L__stack_usage = 4
 136 0066 D82F      		mov r29,r24
 137 0068 C62F      		mov r28,r22
 408:pattern_edit.c ****   uint16_t pattern_addr;
 138               		.loc 1 408 3 is_stmt 1 view .LVU25
 409:pattern_edit.c ****   uint8_t i;
 139               		.loc 1 409 3 view .LVU26
 410:pattern_edit.c **** 
 411:pattern_edit.c ****   clock_leds();
 140               		.loc 1 411 3 view .LVU27
 141 006a 0E94 0000 		call clock_leds
 142               	.LVL14:
 412:pattern_edit.c **** 
 413:pattern_edit.c ****   pattern_addr = PATTERN_MEM + bank * BANK_SIZE + patt_location * PATT_SIZE;
 143               		.loc 1 413 3 view .LVU28
 144               		.loc 1 413 49 is_stmt 0 view .LVU29
 145 006e 28E0      		ldi r18,lo8(8)
 146 0070 D29F      		mul r29,r18
 147 0072 C001      		movw r24,r0
 148 0074 1124      		clr __zero_reg__
 149 0076 C80F      		add r28,r24
 150 0078 D92F      		mov r29,r25
 151 007a D11D      		adc r29,__zero_reg__
 152               	.LVL15:
 153               		.loc 1 413 49 view .LVU30
 154 007c 84E0      		ldi r24,4
 155               		1:
 156 007e CC0F      		lsl r28
 157 0080 DD1F      		rol r29
 158 0082 8A95      		dec r24
 159 0084 01F4      		brne 1b
 160               	.LVL16:
 414:pattern_edit.c **** 
 415:pattern_edit.c ****   /*
 416:pattern_edit.c ****   putstring("writing pattern. bank ");
 417:pattern_edit.c ****   putnum_ud(bank);
 418:pattern_edit.c ****   putstring(", loc ");
 419:pattern_edit.c ****   putnum_ud(patt_location);
 420:pattern_edit.c ****   putstring(" from 0x");
 421:pattern_edit.c ****   putnum_uh(pattern_addr);
 422:pattern_edit.c ****   putstring("\n\rold memory: \n\r");
 423:pattern_edit.c ****   for (i=0; i<PATT_SIZE; i++) {
 424:pattern_edit.c ****     putstring(" 0x"); putnum_uh(spieeprom_read(pattern_addr+i));
 425:pattern_edit.c ****   }
 426:pattern_edit.c ****   putstring("\n\r");
 427:pattern_edit.c ****   */
 428:pattern_edit.c **** 
 429:pattern_edit.c ****   // modify the buffer with new data
 430:pattern_edit.c ****   for (i = 0; i < PATT_SIZE; i++) {
 161               		.loc 1 430 3 is_stmt 1 view .LVU31
 413:pattern_edit.c **** 
 162               		.loc 1 413 16 is_stmt 0 view .LVU32
 163 0086 10E0      		ldi r17,0
 164 0088 00E0      		ldi r16,0
 165               	.LVL17:
 166               	.L5:
 431:pattern_edit.c ****     spieeprom_write(pattern_buff[i], pattern_addr + i);
 167               		.loc 1 431 5 is_stmt 1 discriminator 3 view .LVU33
 168 008a F801      		movw r30,r16
 169 008c E050      		subi r30,lo8(-(pattern_buff))
 170 008e F040      		sbci r31,hi8(-(pattern_buff))
 171 0090 8081      		ld r24,Z
 172 0092 BE01      		movw r22,r28
 173 0094 600F      		add r22,r16
 174 0096 711F      		adc r23,r17
 175 0098 0E94 0000 		call spieeprom_write
 176               	.LVL18:
 177               		.loc 1 431 5 is_stmt 0 discriminator 3 view .LVU34
 178 009c 0F5F      		subi r16,-1
 179 009e 1F4F      		sbci r17,-1
 180               	.LVL19:
 430:pattern_edit.c ****     spieeprom_write(pattern_buff[i], pattern_addr + i);
 181               		.loc 1 430 3 discriminator 3 view .LVU35
 182 00a0 0031      		cpi r16,16
 183 00a2 1105      		cpc r17,__zero_reg__
 184 00a4 01F4      		brne .L5
 432:pattern_edit.c ****   }
 433:pattern_edit.c ****   /*
 434:pattern_edit.c ****   putstring("\n\rnew memory: \n\r");
 435:pattern_edit.c ****   for (i=0; i<PATT_SIZE; i++) {
 436:pattern_edit.c ****     putstring(" 0x"); putnum_uh(spieeprom_read(pattern_addr+i));
 437:pattern_edit.c ****   }
 438:pattern_edit.c ****   putstring("\n\r");
 439:pattern_edit.c ****   */
 440:pattern_edit.c **** 
 441:pattern_edit.c ****   clock_leds();
 185               		.loc 1 441 3 is_stmt 1 view .LVU36
 186               	/* epilogue start */
 442:pattern_edit.c **** }
 187               		.loc 1 442 1 is_stmt 0 view .LVU37
 188 00a6 DF91      		pop r29
 189               	.LVL20:
 190               		.loc 1 442 1 view .LVU38
 191 00a8 CF91      		pop r28
 192               	.LVL21:
 193               		.loc 1 442 1 view .LVU39
 194 00aa 1F91      		pop r17
 195 00ac 0F91      		pop r16
 196               	.LVL22:
 441:pattern_edit.c **** }
 197               		.loc 1 441 3 view .LVU40
 198 00ae 0C94 0000 		jmp clock_leds
 199               	.LVL23:
 200               		.cfi_endproc
 201               	.LFE3:
 203               	.global	start_runwrite_mode
 205               	start_runwrite_mode:
 206               	.LFB4:
 443:pattern_edit.c **** 
 444:pattern_edit.c **** void start_runwrite_mode() {
 207               		.loc 1 444 28 is_stmt 1 view -0
 208               		.cfi_startproc
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 445:pattern_edit.c ****   // putstring("start runwrite\n\r");
 446:pattern_edit.c ****   curr_pattern_index = 0;
 213               		.loc 1 446 3 view .LVU42
 214               		.loc 1 446 22 is_stmt 0 view .LVU43
 215 00b2 1092 0000 		sts curr_pattern_index,__zero_reg__
 447:pattern_edit.c ****   in_runwrite_mode = 1;
 216               		.loc 1 447 3 is_stmt 1 view .LVU44
 217               		.loc 1 447 20 is_stmt 0 view .LVU45
 218 00b6 81E0      		ldi r24,lo8(1)
 219 00b8 8093 0000 		sts in_runwrite_mode,r24
 448:pattern_edit.c ****   set_led(LED_RS);
 220               		.loc 1 448 3 is_stmt 1 view .LVU46
 221 00bc 81E2      		ldi r24,lo8(33)
 222 00be 0E94 0000 		call set_led
 223               	.LVL24:
 449:pattern_edit.c ****   note_off(0);
 224               		.loc 1 449 3 view .LVU47
 225 00c2 80E0      		ldi r24,0
 226 00c4 0E94 0000 		call note_off
 227               	.LVL25:
 450:pattern_edit.c ****   if (sync == INTERNAL_SYNC)
 228               		.loc 1 450 3 view .LVU48
 229               		.loc 1 450 6 is_stmt 0 view .LVU49
 230 00c8 8091 0000 		lds r24,sync
 231 00cc 8111      		cpse r24,__zero_reg__
 232 00ce 00C0      		rjmp .L8
 233               	.L9:
 451:pattern_edit.c ****     while (note_counter & 0x1)
 452:pattern_edit.c ****       ; // wait for the tempo interrupt to be ready for a note-on
 234               		.loc 1 452 7 is_stmt 1 discriminator 1 view .LVU50
 451:pattern_edit.c ****     while (note_counter & 0x1)
 235               		.loc 1 451 25 is_stmt 0 discriminator 1 view .LVU51
 236 00d0 8091 0000 		lds r24,note_counter
 451:pattern_edit.c ****     while (note_counter & 0x1)
 237               		.loc 1 451 11 discriminator 1 view .LVU52
 238 00d4 80FD      		sbrc r24,0
 239 00d6 00C0      		rjmp .L9
 240               	.L8:
 453:pattern_edit.c ****   play_loaded_pattern = 1;
 241               		.loc 1 453 3 is_stmt 1 view .LVU53
 242               		.loc 1 453 23 is_stmt 0 view .LVU54
 243 00d8 81E0      		ldi r24,lo8(1)
 244 00da 8093 0000 		sts play_loaded_pattern,r24
 454:pattern_edit.c ****   playing = TRUE;
 245               		.loc 1 454 3 is_stmt 1 view .LVU55
 246               		.loc 1 454 11 is_stmt 0 view .LVU56
 247 00de 8093 0000 		sts playing,r24
 455:pattern_edit.c ****   midi_putchar(MIDI_START);
 248               		.loc 1 455 3 is_stmt 1 view .LVU57
 249 00e2 8AEF      		ldi r24,lo8(-6)
 250 00e4 0C94 0000 		jmp midi_putchar
 251               	.LVL26:
 252               		.cfi_endproc
 253               	.LFE4:
 255               	.global	stop_runwrite_mode
 257               	stop_runwrite_mode:
 258               	.LFB5:
 456:pattern_edit.c **** }
 457:pattern_edit.c **** 
 458:pattern_edit.c **** void stop_runwrite_mode() {
 259               		.loc 1 458 27 view -0
 260               		.cfi_startproc
 261               	/* prologue: function */
 262               	/* frame size = 0 */
 263               	/* stack size = 0 */
 264               	.L__stack_usage = 0
 459:pattern_edit.c ****   // putstring("stop runwrite\n\r");
 460:pattern_edit.c ****   play_loaded_pattern = 0;
 265               		.loc 1 460 3 view .LVU59
 266               		.loc 1 460 23 is_stmt 0 view .LVU60
 267 00e8 1092 0000 		sts play_loaded_pattern,__zero_reg__
 461:pattern_edit.c ****   clear_key_leds();
 268               		.loc 1 461 3 is_stmt 1 view .LVU61
 269 00ec 0E94 0000 		call clear_key_leds
 270               	.LVL27:
 462:pattern_edit.c ****   clear_bank_leds();
 271               		.loc 1 462 3 view .LVU62
 272 00f0 0E94 0000 		call clear_bank_leds
 273               	.LVL28:
 463:pattern_edit.c ****   clear_blinking_leds();
 274               		.loc 1 463 3 view .LVU63
 275 00f4 0E94 0000 		call clear_blinking_leds
 276               	.LVL29:
 464:pattern_edit.c ****   set_bank_led(bank);
 277               		.loc 1 464 3 view .LVU64
 278 00f8 8091 0000 		lds r24,bank
 279 00fc 0E94 0000 		call set_bank_led
 280               	.LVL30:
 465:pattern_edit.c ****   in_runwrite_mode = 0;
 281               		.loc 1 465 3 view .LVU65
 282               		.loc 1 465 20 is_stmt 0 view .LVU66
 283 0100 1092 0000 		sts in_runwrite_mode,__zero_reg__
 466:pattern_edit.c ****   clear_led(LED_RS);
 284               		.loc 1 466 3 is_stmt 1 view .LVU67
 285 0104 81E2      		ldi r24,lo8(33)
 286 0106 0E94 0000 		call clear_led
 287               	.LVL31:
 467:pattern_edit.c ****   note_off(0);
 288               		.loc 1 467 3 view .LVU68
 289 010a 80E0      		ldi r24,0
 290 010c 0E94 0000 		call note_off
 291               	.LVL32:
 468:pattern_edit.c ****   playing = FALSE;
 292               		.loc 1 468 3 view .LVU69
 293               		.loc 1 468 11 is_stmt 0 view .LVU70
 294 0110 1092 0000 		sts playing,__zero_reg__
 469:pattern_edit.c ****   midi_putchar(MIDI_STOP);
 295               		.loc 1 469 3 is_stmt 1 view .LVU71
 296 0114 8CEF      		ldi r24,lo8(-4)
 297 0116 0C94 0000 		jmp midi_putchar
 298               	.LVL33:
 299               		.cfi_endproc
 300               	.LFE5:
 302               	.global	start_stepwrite_mode
 304               	start_stepwrite_mode:
 305               	.LFB6:
 470:pattern_edit.c **** }
 471:pattern_edit.c **** 
 472:pattern_edit.c **** void start_stepwrite_mode() {
 306               		.loc 1 472 29 view -0
 307               		.cfi_startproc
 308               	/* prologue: function */
 309               	/* frame size = 0 */
 310               	/* stack size = 0 */
 311               	.L__stack_usage = 0
 473:pattern_edit.c ****   // putstring("start stepwrite\n\r");
 474:pattern_edit.c ****   in_stepwrite_mode = 1;
 312               		.loc 1 474 3 view .LVU73
 313               		.loc 1 474 21 is_stmt 0 view .LVU74
 314 011a 81E0      		ldi r24,lo8(1)
 315 011c 8093 0000 		sts in_stepwrite_mode,r24
 475:pattern_edit.c ****   set_led(LED_NEXT);
 316               		.loc 1 475 3 is_stmt 1 view .LVU75
 317 0120 84E2      		ldi r24,lo8(36)
 318 0122 0E94 0000 		call set_led
 319               	.LVL34:
 476:pattern_edit.c ****   clear_bank_leds();
 320               		.loc 1 476 3 view .LVU76
 321 0126 0E94 0000 		call clear_bank_leds
 322               	.LVL35:
 477:pattern_edit.c ****   set_bank_led(0);
 323               		.loc 1 477 3 view .LVU77
 324 012a 80E0      		ldi r24,0
 325 012c 0E94 0000 		call set_bank_led
 326               	.LVL36:
 478:pattern_edit.c ****   note_off(0);
 327               		.loc 1 478 3 view .LVU78
 328 0130 80E0      		ldi r24,0
 329 0132 0C94 0000 		jmp note_off
 330               	.LVL37:
 331               		.cfi_endproc
 332               	.LFE6:
 334               	.global	stop_stepwrite_mode
 336               	stop_stepwrite_mode:
 337               	.LFB7:
 479:pattern_edit.c **** }
 480:pattern_edit.c **** 
 481:pattern_edit.c **** void stop_stepwrite_mode() {
 338               		.loc 1 481 28 view -0
 339               		.cfi_startproc
 340               	/* prologue: function */
 341               	/* frame size = 0 */
 342               	/* stack size = 0 */
 343               	.L__stack_usage = 0
 482:pattern_edit.c ****   // putstring("stop stepwrite\n\r");
 483:pattern_edit.c ****   in_stepwrite_mode = 0;
 344               		.loc 1 483 3 view .LVU80
 345               		.loc 1 483 21 is_stmt 0 view .LVU81
 346 0136 1092 0000 		sts in_stepwrite_mode,__zero_reg__
 484:pattern_edit.c ****   clear_led(LED_NEXT);
 347               		.loc 1 484 3 is_stmt 1 view .LVU82
 348 013a 84E2      		ldi r24,lo8(36)
 349 013c 0E94 0000 		call clear_led
 350               	.LVL38:
 485:pattern_edit.c ****   dirtyflag = 0;
 351               		.loc 1 485 3 view .LVU83
 352               		.loc 1 485 13 is_stmt 0 view .LVU84
 353 0140 1092 0000 		sts dirtyflag,__zero_reg__
 486:pattern_edit.c ****   clear_led(LED_DONE);
 354               		.loc 1 486 3 is_stmt 1 view .LVU85
 355 0144 80E0      		ldi r24,0
 356 0146 0E94 0000 		call clear_led
 357               	.LVL39:
 487:pattern_edit.c ****   clear_blinking_leds();
 358               		.loc 1 487 3 view .LVU86
 359 014a 0E94 0000 		call clear_blinking_leds
 360               	.LVL40:
 488:pattern_edit.c ****   clear_key_leds();
 361               		.loc 1 488 3 view .LVU87
 362 014e 0E94 0000 		call clear_key_leds
 363               	.LVL41:
 489:pattern_edit.c ****   clear_bank_leds();
 364               		.loc 1 489 3 view .LVU88
 365 0152 0E94 0000 		call clear_bank_leds
 366               	.LVL42:
 490:pattern_edit.c ****   set_bank_led(bank);
 367               		.loc 1 490 3 view .LVU89
 368 0156 8091 0000 		lds r24,bank
 369 015a 0E94 0000 		call set_bank_led
 370               	.LVL43:
 491:pattern_edit.c ****   note_off(0);
 371               		.loc 1 491 3 view .LVU90
 372 015e 80E0      		ldi r24,0
 373 0160 0C94 0000 		jmp note_off
 374               	.LVL44:
 375               		.cfi_endproc
 376               	.LFE7:
 378               	.global	do_pattern_edit
 380               	do_pattern_edit:
 381               	.LFB1:
  67:pattern_edit.c ****   uint8_t i, curr_function, midi_cmd;
 382               		.loc 1 67 28 view -0
 383               		.cfi_startproc
 384 0164 BF92      		push r11
 385               		.cfi_def_cfa_offset 3
 386               		.cfi_offset 11, -2
 387 0166 CF92      		push r12
 388               		.cfi_def_cfa_offset 4
 389               		.cfi_offset 12, -3
 390 0168 DF92      		push r13
 391               		.cfi_def_cfa_offset 5
 392               		.cfi_offset 13, -4
 393 016a EF92      		push r14
 394               		.cfi_def_cfa_offset 6
 395               		.cfi_offset 14, -5
 396 016c FF92      		push r15
 397               		.cfi_def_cfa_offset 7
 398               		.cfi_offset 15, -6
 399 016e 0F93      		push r16
 400               		.cfi_def_cfa_offset 8
 401               		.cfi_offset 16, -7
 402 0170 1F93      		push r17
 403               		.cfi_def_cfa_offset 9
 404               		.cfi_offset 17, -8
 405 0172 CF93      		push r28
 406               		.cfi_def_cfa_offset 10
 407               		.cfi_offset 28, -9
 408 0174 DF93      		push r29
 409               		.cfi_def_cfa_offset 11
 410               		.cfi_offset 29, -10
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 9 */
 414               	.L__stack_usage = 9
  68:pattern_edit.c **** 
 415               		.loc 1 68 3 view .LVU92
  70:pattern_edit.c **** 
 416               		.loc 1 70 3 view .LVU93
  70:pattern_edit.c **** 
 417               		.loc 1 70 17 is_stmt 0 view .LVU94
 418 0176 E090 0000 		lds r14,function
 419               	.LVL45:
  73:pattern_edit.c ****   in_stepwrite_mode = 0;
 420               		.loc 1 73 3 is_stmt 1 view .LVU95
  73:pattern_edit.c ****   in_stepwrite_mode = 0;
 421               		.loc 1 73 17 is_stmt 0 view .LVU96
 422 017a 1092 0000 		sts patt_location,__zero_reg__
  74:pattern_edit.c ****   in_runwrite_mode = 0;
 423               		.loc 1 74 3 is_stmt 1 view .LVU97
  74:pattern_edit.c ****   in_runwrite_mode = 0;
 424               		.loc 1 74 21 is_stmt 0 view .LVU98
 425 017e 1092 0000 		sts in_stepwrite_mode,__zero_reg__
  75:pattern_edit.c ****   play_loaded_pattern = 0;
 426               		.loc 1 75 3 is_stmt 1 view .LVU99
  75:pattern_edit.c ****   play_loaded_pattern = 0;
 427               		.loc 1 75 20 is_stmt 0 view .LVU100
 428 0182 1092 0000 		sts in_runwrite_mode,__zero_reg__
  76:pattern_edit.c ****   curr_pattern_index = 0;
 429               		.loc 1 76 3 is_stmt 1 view .LVU101
  76:pattern_edit.c ****   curr_pattern_index = 0;
 430               		.loc 1 76 23 is_stmt 0 view .LVU102
 431 0186 1092 0000 		sts play_loaded_pattern,__zero_reg__
  77:pattern_edit.c ****   curr_note = 0;
 432               		.loc 1 77 3 is_stmt 1 view .LVU103
  77:pattern_edit.c ****   curr_note = 0;
 433               		.loc 1 77 22 is_stmt 0 view .LVU104
 434 018a 1092 0000 		sts curr_pattern_index,__zero_reg__
  78:pattern_edit.c **** 
 435               		.loc 1 78 3 is_stmt 1 view .LVU105
  78:pattern_edit.c **** 
 436               		.loc 1 78 13 is_stmt 0 view .LVU106
 437 018e 1092 0000 		sts curr_note,__zero_reg__
  80:pattern_edit.c ****     turn_on_tempo();
 438               		.loc 1 80 3 is_stmt 1 view .LVU107
  80:pattern_edit.c ****     turn_on_tempo();
 439               		.loc 1 80 6 is_stmt 0 view .LVU108
 440 0192 8091 0000 		lds r24,sync
 441 0196 8111      		cpse r24,__zero_reg__
 442 0198 00C0      		rjmp .L15
  81:pattern_edit.c ****   else {
 443               		.loc 1 81 5 is_stmt 1 view .LVU109
 444 019a 0E94 0000 		call turn_on_tempo
 445               	.LVL46:
 446               	.L16:
  87:pattern_edit.c ****   patt_bank = bank;
 447               		.loc 1 87 3 view .LVU110
 448 019e 0E94 0000 		call read_switches
 449               	.LVL47:
  88:pattern_edit.c **** 
 450               		.loc 1 88 3 view .LVU111
  88:pattern_edit.c **** 
 451               		.loc 1 88 13 is_stmt 0 view .LVU112
 452 01a2 8091 0000 		lds r24,bank
 453 01a6 8093 0000 		sts patt_bank,r24
  90:pattern_edit.c ****   clear_all_leds();
 454               		.loc 1 90 3 is_stmt 1 view .LVU113
 455 01aa 6091 0000 		lds r22,patt_location
 456 01ae 0E94 0000 		call load_pattern
 457               	.LVL48:
  91:pattern_edit.c **** 
 458               		.loc 1 91 3 view .LVU114
 459 01b2 0E94 0000 		call clear_all_leds
 460               	.LVL49:
  93:pattern_edit.c **** 
 461               		.loc 1 93 3 view .LVU115
 462 01b6 8091 0000 		lds r24,bank
 463 01ba 0E94 0000 		call set_bank_led
 464               	.LVL50:
 147:pattern_edit.c ****     } else if (just_released(KEY_CHAIN) && in_runwrite_mode) {
 465               		.loc 1 147 17 is_stmt 0 view .LVU116
 466 01be FF24      		clr r15
 467 01c0 F394      		inc r15
 368:pattern_edit.c **** 
 468               		.loc 1 368 48 view .LVU117
 469 01c2 DD24      		clr r13
 470 01c4 DA94      		dec r13
 471               	.LBB2:
 190:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 472               		.loc 1 190 29 view .LVU118
 473 01c6 80E4      		ldi r24,lo8(64)
 474 01c8 C82E      		mov r12,r24
 475               	.L17:
 476               	.LVL51:
 190:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 477               		.loc 1 190 29 view .LVU119
 478               	.LBE2:
  95:pattern_edit.c ****     read_switches();
 479               		.loc 1 95 3 is_stmt 1 view .LVU120
  96:pattern_edit.c **** 
 480               		.loc 1 96 5 view .LVU121
 481 01ca 0E94 0000 		call read_switches
 482               	.LVL52:
  98:pattern_edit.c ****       // oops i guess they want something else, return!
 483               		.loc 1 98 5 view .LVU122
  98:pattern_edit.c ****       // oops i guess they want something else, return!
 484               		.loc 1 98 8 is_stmt 0 view .LVU123
 485 01ce 8091 0000 		lds r24,function
 486 01d2 8E15      		cp r24,r14
 487 01d4 01F0      		breq .L18
 100:pattern_edit.c ****       play_loaded_pattern = FALSE;
 488               		.loc 1 100 7 is_stmt 1 view .LVU124
 489 01d6 0E94 0000 		call turn_off_tempo
 490               	.LVL53:
 101:pattern_edit.c **** 
 491               		.loc 1 101 7 view .LVU125
 101:pattern_edit.c **** 
 492               		.loc 1 101 27 is_stmt 0 view .LVU126
 493 01da 1092 0000 		sts play_loaded_pattern,__zero_reg__
 104:pattern_edit.c ****       dinsync_stop();
 494               		.loc 1 104 7 is_stmt 1 view .LVU127
 495 01de 80E0      		ldi r24,0
 496 01e0 0E94 0000 		call note_off
 497               	.LVL54:
 105:pattern_edit.c ****       midi_stop();
 498               		.loc 1 105 7 view .LVU128
 499 01e4 0E94 0000 		call dinsync_stop
 500               	.LVL55:
 106:pattern_edit.c **** 
 501               		.loc 1 106 7 view .LVU129
 502 01e8 0E94 0000 		call midi_stop
 503               	.LVL56:
 109:pattern_edit.c ****       clock_leds();
 504               		.loc 1 109 7 view .LVU130
 505 01ec 0E94 0000 		call clear_all_leds
 506               	.LVL57:
 110:pattern_edit.c ****       return;
 507               		.loc 1 110 7 view .LVU131
 508               	/* epilogue start */
 378:pattern_edit.c **** 
 509               		.loc 1 378 1 is_stmt 0 view .LVU132
 510 01f0 DF91      		pop r29
 511 01f2 CF91      		pop r28
 512 01f4 1F91      		pop r17
 513 01f6 0F91      		pop r16
 514 01f8 FF90      		pop r15
 515 01fa EF90      		pop r14
 516               	.LVL58:
 378:pattern_edit.c **** 
 517               		.loc 1 378 1 view .LVU133
 518 01fc DF90      		pop r13
 519 01fe CF90      		pop r12
 520 0200 BF90      		pop r11
 521               	.LVL59:
 110:pattern_edit.c ****       return;
 522               		.loc 1 110 7 view .LVU134
 523 0202 0C94 0000 		jmp clock_leds
 524               	.LVL60:
 525               	.L15:
  83:pattern_edit.c ****     dinsync_set_out();
 526               		.loc 1 83 5 is_stmt 1 view .LVU135
 527 0206 0E94 0000 		call turn_off_tempo
 528               	.LVL61:
  84:pattern_edit.c ****   }
 529               		.loc 1 84 5 view .LVU136
 530 020a 0E94 0000 		call dinsync_set_out
 531               	.LVL62:
 532 020e 00C0      		rjmp .L16
 533               	.LVL63:
 534               	.L18:
 114:pattern_edit.c ****       // putstring("changed bank!");
 535               		.loc 1 114 5 view .LVU137
 114:pattern_edit.c ****       // putstring("changed bank!");
 536               		.loc 1 114 8 is_stmt 0 view .LVU138
 537 0210 9091 0000 		lds r25,patt_bank
 538 0214 8091 0000 		lds r24,bank
 539 0218 9817      		cp r25,r24
 540 021a 01F0      		breq .L19
 116:pattern_edit.c ****         stop_runwrite_mode();
 541               		.loc 1 116 7 is_stmt 1 view .LVU139
 116:pattern_edit.c ****         stop_runwrite_mode();
 542               		.loc 1 116 10 is_stmt 0 view .LVU140
 543 021c 8091 0000 		lds r24,in_runwrite_mode
 544 0220 8111      		cpse r24,__zero_reg__
 117:pattern_edit.c ****       if (in_stepwrite_mode)
 545               		.loc 1 117 9 is_stmt 1 view .LVU141
 546 0222 0E94 0000 		call stop_runwrite_mode
 547               	.LVL64:
 548               	.L20:
 118:pattern_edit.c ****         stop_stepwrite_mode();
 549               		.loc 1 118 7 view .LVU142
 118:pattern_edit.c ****         stop_stepwrite_mode();
 550               		.loc 1 118 10 is_stmt 0 view .LVU143
 551 0226 8091 0000 		lds r24,in_stepwrite_mode
 552 022a 8111      		cpse r24,__zero_reg__
 119:pattern_edit.c ****       patt_bank = bank;
 553               		.loc 1 119 9 is_stmt 1 view .LVU144
 554 022c 0E94 0000 		call stop_stepwrite_mode
 555               	.LVL65:
 556               	.L21:
 120:pattern_edit.c ****       load_pattern(patt_bank, patt_location);
 557               		.loc 1 120 7 view .LVU145
 120:pattern_edit.c ****       load_pattern(patt_bank, patt_location);
 558               		.loc 1 120 17 is_stmt 0 view .LVU146
 559 0230 8091 0000 		lds r24,bank
 560 0234 8093 0000 		sts patt_bank,r24
 121:pattern_edit.c ****       clear_bank_leds();
 561               		.loc 1 121 7 is_stmt 1 view .LVU147
 562 0238 6091 0000 		lds r22,patt_location
 563 023c 0E94 0000 		call load_pattern
 564               	.LVL66:
 122:pattern_edit.c ****       set_bank_led(bank);
 565               		.loc 1 122 7 view .LVU148
 566 0240 0E94 0000 		call clear_bank_leds
 567               	.LVL67:
 123:pattern_edit.c ****     }
 568               		.loc 1 123 7 view .LVU149
 569 0244 8091 0000 		lds r24,bank
 570 0248 0E94 0000 		call set_bank_led
 571               	.LVL68:
 572               	.L19:
 127:pattern_edit.c ****       // display whatever location is selected on number keys
 573               		.loc 1 127 5 view .LVU150
 127:pattern_edit.c ****       // display whatever location is selected on number keys
 574               		.loc 1 127 9 is_stmt 0 view .LVU151
 575 024c 8091 0000 		lds r24,in_runwrite_mode
 576 0250 9091 0000 		lds r25,in_stepwrite_mode
 577 0254 892B      		or r24,r25
 578 0256 01F4      		brne .L23
 129:pattern_edit.c **** 
 579               		.loc 1 129 7 is_stmt 1 view .LVU152
 580 0258 8091 0000 		lds r24,patt_location
 581 025c 8F5F      		subi r24,lo8(-(1))
 582 025e 0E94 0000 		call set_numkey_led
 583               	.LVL69:
 131:pattern_edit.c ****       if (i != 0) {
 584               		.loc 1 131 7 view .LVU153
 131:pattern_edit.c ****       if (i != 0) {
 585               		.loc 1 131 11 is_stmt 0 view .LVU154
 586 0262 0E94 0000 		call get_lowest_numkey_pressed
 587               	.LVL70:
 588 0266 C82F      		mov r28,r24
 589               	.LVL71:
 132:pattern_edit.c ****         clear_notekey_leds();
 590               		.loc 1 132 7 is_stmt 1 view .LVU155
 132:pattern_edit.c ****         clear_notekey_leds();
 591               		.loc 1 132 10 is_stmt 0 view .LVU156
 592 0268 8823      		tst r24
 593 026a 01F0      		breq .L23
 133:pattern_edit.c ****         set_numkey_led(i);
 594               		.loc 1 133 9 is_stmt 1 view .LVU157
 595 026c 0E94 0000 		call clear_notekey_leds
 596               	.LVL72:
 134:pattern_edit.c ****         patt_location = i - 1;
 597               		.loc 1 134 9 view .LVU158
 598 0270 8C2F      		mov r24,r28
 599 0272 0E94 0000 		call set_numkey_led
 600               	.LVL73:
 135:pattern_edit.c ****         load_pattern(patt_bank, patt_location);
 601               		.loc 1 135 9 view .LVU159
 135:pattern_edit.c ****         load_pattern(patt_bank, patt_location);
 602               		.loc 1 135 27 is_stmt 0 view .LVU160
 603 0276 6FEF      		ldi r22,lo8(-1)
 604 0278 6C0F      		add r22,r28
 135:pattern_edit.c ****         load_pattern(patt_bank, patt_location);
 605               		.loc 1 135 23 view .LVU161
 606 027a 6093 0000 		sts patt_location,r22
 136:pattern_edit.c ****         // printf("location #%d\n\r", patt_location);
 607               		.loc 1 136 9 is_stmt 1 view .LVU162
 608 027e 8091 0000 		lds r24,patt_bank
 609 0282 0E94 0000 		call load_pattern
 610               	.LVL74:
 611               	.L23:
 142:pattern_edit.c ****       set_led(LED_CHAIN);
 612               		.loc 1 142 5 view .LVU163
 142:pattern_edit.c ****       set_led(LED_CHAIN);
 613               		.loc 1 142 9 is_stmt 0 view .LVU164
 614 0286 80E0      		ldi r24,0
 615 0288 0E94 0000 		call just_pressed
 616               	.LVL75:
 142:pattern_edit.c ****       set_led(LED_CHAIN);
 617               		.loc 1 142 8 view .LVU165
 618 028c 8823      		tst r24
 619 028e 01F0      		breq .L25
 142:pattern_edit.c ****       set_led(LED_CHAIN);
 620               		.loc 1 142 33 discriminator 1 view .LVU166
 621 0290 8091 0000 		lds r24,in_runwrite_mode
 622 0294 8823      		tst r24
 623 0296 01F0      		breq .L25
 143:pattern_edit.c ****       for (i = 0; i < PATT_SIZE; i++) {
 624               		.loc 1 143 7 is_stmt 1 view .LVU167
 625 0298 82E2      		ldi r24,lo8(34)
 626 029a 0E94 0000 		call set_led
 627               	.LVL76:
 144:pattern_edit.c ****         pattern_buff[i] = random();
 628               		.loc 1 144 7 view .LVU168
 143:pattern_edit.c ****       for (i = 0; i < PATT_SIZE; i++) {
 629               		.loc 1 143 7 is_stmt 0 view .LVU169
 630 029e 10E0      		ldi r17,0
 631 02a0 00E0      		ldi r16,0
 632               	.LVL77:
 633               	.L26:
 145:pattern_edit.c ****       }
 634               		.loc 1 145 9 is_stmt 1 discriminator 3 view .LVU170
 145:pattern_edit.c ****       }
 635               		.loc 1 145 27 is_stmt 0 discriminator 3 view .LVU171
 636 02a2 0E94 0000 		call random
 637               	.LVL78:
 145:pattern_edit.c ****       }
 638               		.loc 1 145 25 discriminator 3 view .LVU172
 639 02a6 F801      		movw r30,r16
 640 02a8 E050      		subi r30,lo8(-(pattern_buff))
 641 02aa F040      		sbci r31,hi8(-(pattern_buff))
 642 02ac 8083      		st Z,r24
 643               	.LVL79:
 145:pattern_edit.c ****       }
 644               		.loc 1 145 25 discriminator 3 view .LVU173
 645 02ae 0F5F      		subi r16,-1
 646 02b0 1F4F      		sbci r17,-1
 647               	.LVL80:
 144:pattern_edit.c ****         pattern_buff[i] = random();
 648               		.loc 1 144 7 discriminator 3 view .LVU174
 649 02b2 0031      		cpi r16,16
 650 02b4 1105      		cpc r17,__zero_reg__
 651 02b6 01F4      		brne .L26
 147:pattern_edit.c ****     } else if (just_released(KEY_CHAIN) && in_runwrite_mode) {
 652               		.loc 1 147 7 is_stmt 1 view .LVU175
 147:pattern_edit.c ****     } else if (just_released(KEY_CHAIN) && in_runwrite_mode) {
 653               		.loc 1 147 17 is_stmt 0 view .LVU176
 654 02b8 F092 0000 		sts dirtyflag,r15
 655               	.LVL81:
 656               	.L27:
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 657               		.loc 1 153 5 is_stmt 1 view .LVU177
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 658               		.loc 1 153 9 is_stmt 0 view .LVU178
 659 02bc 9091 0000 		lds r25,playing
 660 02c0 8091 0000 		lds r24,sync
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 661               		.loc 1 153 8 view .LVU179
 662 02c4 9923      		tst r25
 663 02c6 01F0      		breq .L28
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 664               		.loc 1 153 17 discriminator 1 view .LVU180
 665 02c8 8230      		cpi r24,lo8(2)
 666 02ca 01F4      		brne .L29
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 667               		.loc 1 153 61 discriminator 2 view .LVU181
 668 02cc 8091 0000 		lds r24,midisync_clocked
 669 02d0 9091 0000 		lds r25,midisync_clocked+1
 153:pattern_edit.c ****       midisync_clocked -= MIDISYNC_PPQ / 8;
 670               		.loc 1 153 40 discriminator 2 view .LVU182
 671 02d4 1816      		cp __zero_reg__,r24
 672 02d6 1906      		cpc __zero_reg__,r25
 673 02d8 04F4      		brge .L30
 154:pattern_edit.c ****       do_tempo();
 674               		.loc 1 154 7 is_stmt 1 view .LVU183
 154:pattern_edit.c ****       do_tempo();
 675               		.loc 1 154 24 is_stmt 0 view .LVU184
 676 02da 8091 0000 		lds r24,midisync_clocked
 677 02de 9091 0000 		lds r25,midisync_clocked+1
 678 02e2 0397      		sbiw r24,3
 679 02e4 9093 0000 		sts midisync_clocked+1,r25
 680 02e8 8093 0000 		sts midisync_clocked,r24
 155:pattern_edit.c ****       continue;
 681               		.loc 1 155 7 is_stmt 1 view .LVU185
 682 02ec 0E94 0000 		call do_tempo
 683               	.LVL82:
 156:pattern_edit.c ****     }
 684               		.loc 1 156 7 view .LVU186
 685 02f0 00C0      		rjmp .L17
 686               	.L25:
 148:pattern_edit.c ****       clear_led(LED_CHAIN);
 687               		.loc 1 148 12 view .LVU187
 148:pattern_edit.c ****       clear_led(LED_CHAIN);
 688               		.loc 1 148 16 is_stmt 0 view .LVU188
 689 02f2 80E0      		ldi r24,0
 690 02f4 0E94 0000 		call just_released
 691               	.LVL83:
 148:pattern_edit.c ****       clear_led(LED_CHAIN);
 692               		.loc 1 148 15 view .LVU189
 693 02f8 8823      		tst r24
 694 02fa 01F0      		breq .L27
 148:pattern_edit.c ****       clear_led(LED_CHAIN);
 695               		.loc 1 148 41 discriminator 1 view .LVU190
 696 02fc 8091 0000 		lds r24,in_runwrite_mode
 697 0300 8823      		tst r24
 698 0302 01F0      		breq .L27
 149:pattern_edit.c ****     }
 699               		.loc 1 149 7 is_stmt 1 view .LVU191
 700 0304 82E2      		ldi r24,lo8(34)
 701 0306 0E94 0000 		call clear_led
 702               	.LVL84:
 703 030a 00C0      		rjmp .L27
 704               	.L28:
 160:pattern_edit.c ****       midi_cmd = midi_recv_cmd(); // returns 0 if no midi commands waiting
 705               		.loc 1 160 5 view .LVU192
 160:pattern_edit.c ****       midi_cmd = midi_recv_cmd(); // returns 0 if no midi commands waiting
 706               		.loc 1 160 8 is_stmt 0 view .LVU193
 707 030c 8230      		cpi r24,lo8(2)
 708 030e 01F4      		brne .L29
 709               	.L30:
 161:pattern_edit.c ****       if (midi_cmd != 0)
 710               		.loc 1 161 7 is_stmt 1 view .LVU194
 161:pattern_edit.c ****       if (midi_cmd != 0)
 711               		.loc 1 161 18 is_stmt 0 view .LVU195
 712 0310 0E94 0000 		call midi_recv_cmd
 713               	.LVL85:
 714 0314 B82E      		mov r11,r24
 715               	.LVL86:
 162:pattern_edit.c ****         putnum_uh(midi_cmd);
 716               		.loc 1 162 7 is_stmt 1 view .LVU196
 162:pattern_edit.c ****         putnum_uh(midi_cmd);
 717               		.loc 1 162 10 is_stmt 0 view .LVU197
 718 0316 8823      		tst r24
 719 0318 01F0      		breq .L29
 163:pattern_edit.c ****     }
 720               		.loc 1 163 9 is_stmt 1 view .LVU198
 721 031a 90E0      		ldi r25,0
 722 031c 0E94 0000 		call putnum_uh
 723               	.LVL87:
 724               	.L29:
 168:pattern_edit.c ****         (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 725               		.loc 1 168 5 view .LVU199
 168:pattern_edit.c ****         (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 726               		.loc 1 168 8 is_stmt 0 view .LVU200
 727 0320 8091 0000 		lds r24,in_runwrite_mode
 728 0324 8823      		tst r24
 729 0326 01F4      		brne .+2
 730 0328 00C0      		rjmp .L32
 168:pattern_edit.c ****         (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 731               		.loc 1 168 26 discriminator 1 view .LVU201
 732 032a 8091 0000 		lds r24,sync
 733 032e 8823      		tst r24
 734 0330 01F0      		breq .L33
 735               	.L35:
 169:pattern_edit.c ****          ((sync == MIDI_SYNC) && (midi_cmd == MIDI_STOP)))) {
 736               		.loc 1 169 60 view .LVU202
 737 0332 8091 0000 		lds r24,sync
 738 0336 8230      		cpi r24,lo8(2)
 739 0338 01F0      		breq .+2
 740 033a 00C0      		rjmp .L32
 170:pattern_edit.c ****       stop_runwrite_mode();
 741               		.loc 1 170 31 view .LVU203
 742 033c 8CEF      		ldi r24,lo8(-4)
 743 033e B816      		cp r11,r24
 744 0340 01F0      		breq .L37
 745               	.L38:
 174:pattern_edit.c ****       if (in_stepwrite_mode)
 746               		.loc 1 174 43 view .LVU204
 747 0342 86E0      		ldi r24,lo8(6)
 748 0344 8B0D      		add r24,r11
 173:pattern_edit.c ****                 ((midi_cmd == MIDI_START) || (midi_cmd == MIDI_CONTINUE)))) {
 749               		.loc 1 173 37 view .LVU205
 750 0346 8230      		cpi r24,lo8(2)
 751 0348 00F4      		brsh .L36
 752 034a 00C0      		rjmp .L42
 753               	.L33:
 169:pattern_edit.c ****          ((sync == MIDI_SYNC) && (midi_cmd == MIDI_STOP)))) {
 754               		.loc 1 169 38 view .LVU206
 755 034c 81E0      		ldi r24,lo8(1)
 756 034e 0E94 0000 		call just_pressed
 757               	.LVL88:
 169:pattern_edit.c ****          ((sync == MIDI_SYNC) && (midi_cmd == MIDI_STOP)))) {
 758               		.loc 1 169 35 view .LVU207
 759 0352 8823      		tst r24
 760 0354 01F0      		breq .L35
 761               	.L37:
 171:pattern_edit.c ****     } else if (((sync == INTERNAL_SYNC) && just_pressed(KEY_RS)) ||
 762               		.loc 1 171 7 is_stmt 1 view .LVU208
 763 0356 0E94 0000 		call stop_runwrite_mode
 764               	.LVL89:
 765               	.L36:
 180:pattern_edit.c ****       uint8_t curr_note, index;
 766               		.loc 1 180 5 view .LVU209
 180:pattern_edit.c ****       uint8_t curr_note, index;
 767               		.loc 1 180 26 is_stmt 0 view .LVU210
 768 035a 8091 0000 		lds r24,in_runwrite_mode
 769 035e 9091 0000 		lds r25,in_stepwrite_mode
 770 0362 892B      		or r24,r25
 771 0364 01F4      		brne .+2
 772 0366 00C0      		rjmp .L43
 773               	.LBB3:
 181:pattern_edit.c ****       int8_t shift;
 774               		.loc 1 181 7 is_stmt 1 view .LVU211
 182:pattern_edit.c **** 
 775               		.loc 1 182 7 view .LVU212
 184:pattern_edit.c ****       curr_note = pattern_buff[index] & 0x3F;
 776               		.loc 1 184 7 view .LVU213
 184:pattern_edit.c ****       curr_note = pattern_buff[index] & 0x3F;
 777               		.loc 1 184 13 is_stmt 0 view .LVU214
 778 0368 0091 0000 		lds r16,curr_pattern_index
 779               	.LVL90:
 185:pattern_edit.c **** 
 780               		.loc 1 185 7 is_stmt 1 view .LVU215
 185:pattern_edit.c **** 
 781               		.loc 1 185 39 is_stmt 0 view .LVU216
 782 036c 10E0      		ldi r17,0
 185:pattern_edit.c **** 
 783               		.loc 1 185 31 view .LVU217
 784 036e 0050      		subi r16,lo8(-(pattern_buff))
 785 0370 1040      		sbci r17,hi8(-(pattern_buff))
 786               	.LVL91:
 185:pattern_edit.c **** 
 787               		.loc 1 185 31 view .LVU218
 788 0372 F801      		movw r30,r16
 789 0374 C081      		ld r28,Z
 185:pattern_edit.c **** 
 790               		.loc 1 185 17 view .LVU219
 791 0376 CF73      		andi r28,lo8(63)
 792               	.LVL92:
 188:pattern_edit.c ****         // putstring("accent ");
 793               		.loc 1 188 7 is_stmt 1 view .LVU220
 188:pattern_edit.c ****         // putstring("accent ");
 794               		.loc 1 188 11 is_stmt 0 view .LVU221
 795 0378 85E1      		ldi r24,lo8(21)
 796 037a 0E94 0000 		call just_pressed
 797               	.LVL93:
 188:pattern_edit.c ****         // putstring("accent ");
 798               		.loc 1 188 10 view .LVU222
 799 037e 8823      		tst r24
 800 0380 01F0      		breq .L44
 188:pattern_edit.c ****         // putstring("accent ");
 801               		.loc 1 188 36 discriminator 1 view .LVU223
 802 0382 CF33      		cpi r28,lo8(63)
 803 0384 01F0      		breq .L44
 190:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 804               		.loc 1 190 9 is_stmt 1 view .LVU224
 190:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 805               		.loc 1 190 29 is_stmt 0 view .LVU225
 806 0386 F801      		movw r30,r16
 807 0388 8081      		ld r24,Z
 808 038a 8C25      		eor r24,r12
 809 038c 8083      		st Z,r24
 191:pattern_edit.c ****       }
 810               		.loc 1 191 9 is_stmt 1 view .LVU226
 191:pattern_edit.c ****       }
 811               		.loc 1 191 19 is_stmt 0 view .LVU227
 812 038e F092 0000 		sts dirtyflag,r15
 813               	.L44:
 193:pattern_edit.c ****         // putstring("slide ");
 814               		.loc 1 193 7 is_stmt 1 view .LVU228
 193:pattern_edit.c ****         // putstring("slide ");
 815               		.loc 1 193 11 is_stmt 0 view .LVU229
 816 0392 86E1      		ldi r24,lo8(22)
 817 0394 0E94 0000 		call just_pressed
 818               	.LVL94:
 193:pattern_edit.c ****         // putstring("slide ");
 819               		.loc 1 193 10 view .LVU230
 820 0398 8823      		tst r24
 821 039a 01F4      		brne .+2
 822 039c 00C0      		rjmp .L45
 193:pattern_edit.c ****         // putstring("slide ");
 823               		.loc 1 193 35 discriminator 1 view .LVU231
 824 039e CF33      		cpi r28,lo8(63)
 825 03a0 01F0      		breq .+2
 826 03a2 00C0      		rjmp .L46
 827               	.L49:
 201:pattern_edit.c ****       else if (curr_note < C2)
 828               		.loc 1 201 15 view .LVU232
 829 03a4 D0E0      		ldi r29,0
 830               	.L47:
 831               	.LVL95:
 213:pattern_edit.c ****         curr_note = 0;
 832               		.loc 1 213 7 is_stmt 1 view .LVU233
 213:pattern_edit.c ****         curr_note = 0;
 833               		.loc 1 213 11 is_stmt 0 view .LVU234
 834 03a6 84E1      		ldi r24,lo8(20)
 835 03a8 0E94 0000 		call just_pressed
 836               	.LVL96:
 213:pattern_edit.c ****         curr_note = 0;
 837               		.loc 1 213 10 view .LVU235
 838 03ac 8111      		cpse r24,__zero_reg__
 214:pattern_edit.c ****       }
 839               		.loc 1 214 19 view .LVU236
 840 03ae C0E0      		ldi r28,0
 841               	.LVL97:
 842               	.L50:
 218:pattern_edit.c ****         if (shift < 2)
 843               		.loc 1 218 7 is_stmt 1 view .LVU237
 218:pattern_edit.c ****         if (shift < 2)
 844               		.loc 1 218 11 is_stmt 0 view .LVU238
 845 03b0 8FE0      		ldi r24,lo8(15)
 846 03b2 0E94 0000 		call just_pressed
 847               	.LVL98:
 218:pattern_edit.c ****         if (shift < 2)
 848               		.loc 1 218 10 view .LVU239
 849 03b6 8823      		tst r24
 850 03b8 01F0      		breq .L51
 218:pattern_edit.c ****         if (shift < 2)
 851               		.loc 1 218 32 discriminator 1 view .LVU240
 852 03ba CF33      		cpi r28,lo8(63)
 853 03bc 01F0      		breq .L51
 218:pattern_edit.c ****         if (shift < 2)
 854               		.loc 1 218 55 discriminator 2 view .LVU241
 855 03be CC23      		tst r28
 856 03c0 01F0      		breq .L51
 219:pattern_edit.c ****           curr_note += OCTAVE;
 857               		.loc 1 219 9 is_stmt 1 view .LVU242
 219:pattern_edit.c ****           curr_note += OCTAVE;
 858               		.loc 1 219 12 is_stmt 0 view .LVU243
 859 03c2 D230      		cpi r29,lo8(2)
 860 03c4 04F4      		brge .L51
 220:pattern_edit.c **** 
 861               		.loc 1 220 11 is_stmt 1 view .LVU244
 220:pattern_edit.c **** 
 862               		.loc 1 220 21 is_stmt 0 view .LVU245
 863 03c6 C45F      		subi r28,lo8(-(12))
 864               	.LVL99:
 865               	.L51:
 223:pattern_edit.c ****         if (shift > -1)
 866               		.loc 1 223 7 is_stmt 1 view .LVU246
 223:pattern_edit.c ****         if (shift > -1)
 867               		.loc 1 223 11 is_stmt 0 view .LVU247
 868 03c8 8EE0      		ldi r24,lo8(14)
 869 03ca 0E94 0000 		call just_pressed
 870               	.LVL100:
 223:pattern_edit.c ****         if (shift > -1)
 871               		.loc 1 223 10 view .LVU248
 872 03ce 8823      		tst r24
 873 03d0 01F0      		breq .L52
 223:pattern_edit.c ****         if (shift > -1)
 874               		.loc 1 223 34 discriminator 1 view .LVU249
 875 03d2 CF33      		cpi r28,lo8(63)
 876 03d4 01F0      		breq .L52
 223:pattern_edit.c ****         if (shift > -1)
 877               		.loc 1 223 57 discriminator 2 view .LVU250
 878 03d6 CC23      		tst r28
 879 03d8 01F0      		breq .L52
 224:pattern_edit.c ****           curr_note -= OCTAVE;
 880               		.loc 1 224 9 is_stmt 1 view .LVU251
 224:pattern_edit.c ****           curr_note -= OCTAVE;
 881               		.loc 1 224 12 is_stmt 0 view .LVU252
 882 03da DF3F      		cpi r29,lo8(-1)
 883 03dc 01F0      		breq .L52
 225:pattern_edit.c **** 
 884               		.loc 1 225 11 is_stmt 1 view .LVU253
 225:pattern_edit.c **** 
 885               		.loc 1 225 21 is_stmt 0 view .LVU254
 886 03de CC50      		subi r28,lo8(-(-12))
 887               	.LVL101:
 888               	.L52:
 227:pattern_edit.c ****         curr_note = C2 + shift * OCTAVE;
 889               		.loc 1 227 7 is_stmt 1 view .LVU255
 227:pattern_edit.c ****         curr_note = C2 + shift * OCTAVE;
 890               		.loc 1 227 11 is_stmt 0 view .LVU256
 891 03e0 84E0      		ldi r24,lo8(4)
 892 03e2 0E94 0000 		call just_pressed
 893               	.LVL102:
 227:pattern_edit.c ****         curr_note = C2 + shift * OCTAVE;
 894               		.loc 1 227 10 view .LVU257
 895 03e6 8823      		tst r24
 896 03e8 01F0      		breq .L53
 228:pattern_edit.c ****       if (just_pressed(KEY_CS))
 897               		.loc 1 228 9 is_stmt 1 view .LVU258
 228:pattern_edit.c ****       if (just_pressed(KEY_CS))
 898               		.loc 1 228 32 is_stmt 0 view .LVU259
 899 03ea CCE0      		ldi r28,lo8(12)
 900               	.LVL103:
 228:pattern_edit.c ****       if (just_pressed(KEY_CS))
 901               		.loc 1 228 32 view .LVU260
 902 03ec DC9F      		mul r29,r28
 903 03ee C02D      		mov r28,r0
 904 03f0 1124      		clr r1
 228:pattern_edit.c ****       if (just_pressed(KEY_CS))
 905               		.loc 1 228 19 view .LVU261
 906 03f2 C95E      		subi r28,lo8(-(23))
 907               	.LVL104:
 908               	.L53:
 229:pattern_edit.c ****         curr_note = C2_SHARP + shift * OCTAVE;
 909               		.loc 1 229 7 is_stmt 1 view .LVU262
 229:pattern_edit.c ****         curr_note = C2_SHARP + shift * OCTAVE;
 910               		.loc 1 229 11 is_stmt 0 view .LVU263
 911 03f4 89E0      		ldi r24,lo8(9)
 912 03f6 0E94 0000 		call just_pressed
 913               	.LVL105:
 229:pattern_edit.c ****         curr_note = C2_SHARP + shift * OCTAVE;
 914               		.loc 1 229 10 view .LVU264
 915 03fa 8823      		tst r24
 916 03fc 01F0      		breq .L54
 230:pattern_edit.c ****       if (just_pressed(KEY_D))
 917               		.loc 1 230 9 is_stmt 1 view .LVU265
 230:pattern_edit.c ****       if (just_pressed(KEY_D))
 918               		.loc 1 230 38 is_stmt 0 view .LVU266
 919 03fe CCE0      		ldi r28,lo8(12)
 920               	.LVL106:
 230:pattern_edit.c ****       if (just_pressed(KEY_D))
 921               		.loc 1 230 38 view .LVU267
 922 0400 DC9F      		mul r29,r28
 923 0402 C02D      		mov r28,r0
 924 0404 1124      		clr r1
 230:pattern_edit.c ****       if (just_pressed(KEY_D))
 925               		.loc 1 230 19 view .LVU268
 926 0406 C85E      		subi r28,lo8(-(24))
 927               	.LVL107:
 928               	.L54:
 231:pattern_edit.c ****         curr_note = D2 + shift * OCTAVE;
 929               		.loc 1 231 7 is_stmt 1 view .LVU269
 231:pattern_edit.c ****         curr_note = D2 + shift * OCTAVE;
 930               		.loc 1 231 11 is_stmt 0 view .LVU270
 931 0408 85E0      		ldi r24,lo8(5)
 932 040a 0E94 0000 		call just_pressed
 933               	.LVL108:
 231:pattern_edit.c ****         curr_note = D2 + shift * OCTAVE;
 934               		.loc 1 231 10 view .LVU271
 935 040e 8823      		tst r24
 936 0410 01F0      		breq .L55
 232:pattern_edit.c ****       if (just_pressed(KEY_DS))
 937               		.loc 1 232 9 is_stmt 1 view .LVU272
 232:pattern_edit.c ****       if (just_pressed(KEY_DS))
 938               		.loc 1 232 32 is_stmt 0 view .LVU273
 939 0412 CCE0      		ldi r28,lo8(12)
 940               	.LVL109:
 232:pattern_edit.c ****       if (just_pressed(KEY_DS))
 941               		.loc 1 232 32 view .LVU274
 942 0414 DC9F      		mul r29,r28
 943 0416 C02D      		mov r28,r0
 944 0418 1124      		clr r1
 232:pattern_edit.c ****       if (just_pressed(KEY_DS))
 945               		.loc 1 232 19 view .LVU275
 946 041a C75E      		subi r28,lo8(-(25))
 947               	.LVL110:
 948               	.L55:
 233:pattern_edit.c ****         curr_note = D2_SHARP + shift * OCTAVE;
 949               		.loc 1 233 7 is_stmt 1 view .LVU276
 233:pattern_edit.c ****         curr_note = D2_SHARP + shift * OCTAVE;
 950               		.loc 1 233 11 is_stmt 0 view .LVU277
 951 041c 8AE0      		ldi r24,lo8(10)
 952 041e 0E94 0000 		call just_pressed
 953               	.LVL111:
 233:pattern_edit.c ****         curr_note = D2_SHARP + shift * OCTAVE;
 954               		.loc 1 233 10 view .LVU278
 955 0422 8823      		tst r24
 956 0424 01F0      		breq .L56
 234:pattern_edit.c **** 
 957               		.loc 1 234 9 is_stmt 1 view .LVU279
 234:pattern_edit.c **** 
 958               		.loc 1 234 38 is_stmt 0 view .LVU280
 959 0426 CCE0      		ldi r28,lo8(12)
 960               	.LVL112:
 234:pattern_edit.c **** 
 961               		.loc 1 234 38 view .LVU281
 962 0428 DC9F      		mul r29,r28
 963 042a C02D      		mov r28,r0
 964 042c 1124      		clr r1
 234:pattern_edit.c **** 
 965               		.loc 1 234 19 view .LVU282
 966 042e C65E      		subi r28,lo8(-(26))
 967               	.LVL113:
 968               	.L56:
 237:pattern_edit.c ****         if (just_pressed(KEY_E))
 969               		.loc 1 237 7 is_stmt 1 view .LVU283
 237:pattern_edit.c ****         if (just_pressed(KEY_E))
 970               		.loc 1 237 10 is_stmt 0 view .LVU284
 971 0430 D330      		cpi r29,lo8(3)
 972 0432 01F4      		brne .+2
 973 0434 00C0      		rjmp .L57
 238:pattern_edit.c ****           curr_note = E2 + shift * OCTAVE;
 974               		.loc 1 238 9 is_stmt 1 view .LVU285
 238:pattern_edit.c ****           curr_note = E2 + shift * OCTAVE;
 975               		.loc 1 238 13 is_stmt 0 view .LVU286
 976 0436 86E0      		ldi r24,lo8(6)
 977 0438 0E94 0000 		call just_pressed
 978               	.LVL114:
 238:pattern_edit.c ****           curr_note = E2 + shift * OCTAVE;
 979               		.loc 1 238 12 view .LVU287
 980 043c 8823      		tst r24
 981 043e 01F0      		breq .L58
 239:pattern_edit.c ****         if (just_pressed(KEY_F))
 982               		.loc 1 239 11 is_stmt 1 view .LVU288
 239:pattern_edit.c ****         if (just_pressed(KEY_F))
 983               		.loc 1 239 34 is_stmt 0 view .LVU289
 984 0440 CCE0      		ldi r28,lo8(12)
 985               	.LVL115:
 239:pattern_edit.c ****         if (just_pressed(KEY_F))
 986               		.loc 1 239 34 view .LVU290
 987 0442 DC9F      		mul r29,r28
 988 0444 C02D      		mov r28,r0
 989 0446 1124      		clr r1
 239:pattern_edit.c ****         if (just_pressed(KEY_F))
 990               		.loc 1 239 21 view .LVU291
 991 0448 C55E      		subi r28,lo8(-(27))
 992               	.LVL116:
 993               	.L58:
 240:pattern_edit.c ****           curr_note = F2 + shift * OCTAVE;
 994               		.loc 1 240 9 is_stmt 1 view .LVU292
 240:pattern_edit.c ****           curr_note = F2 + shift * OCTAVE;
 995               		.loc 1 240 13 is_stmt 0 view .LVU293
 996 044a 87E0      		ldi r24,lo8(7)
 997 044c 0E94 0000 		call just_pressed
 998               	.LVL117:
 240:pattern_edit.c ****           curr_note = F2 + shift * OCTAVE;
 999               		.loc 1 240 12 view .LVU294
 1000 0450 8823      		tst r24
 1001 0452 01F0      		breq .L59
 241:pattern_edit.c ****         if (just_pressed(KEY_FS))
 1002               		.loc 1 241 11 is_stmt 1 view .LVU295
 241:pattern_edit.c ****         if (just_pressed(KEY_FS))
 1003               		.loc 1 241 34 is_stmt 0 view .LVU296
 1004 0454 CCE0      		ldi r28,lo8(12)
 1005               	.LVL118:
 241:pattern_edit.c ****         if (just_pressed(KEY_FS))
 1006               		.loc 1 241 34 view .LVU297
 1007 0456 DC9F      		mul r29,r28
 1008 0458 C02D      		mov r28,r0
 1009 045a 1124      		clr r1
 241:pattern_edit.c ****         if (just_pressed(KEY_FS))
 1010               		.loc 1 241 21 view .LVU298
 1011 045c C45E      		subi r28,lo8(-(28))
 1012               	.LVL119:
 1013               	.L59:
 242:pattern_edit.c ****           curr_note = F2_SHARP + shift * OCTAVE;
 1014               		.loc 1 242 9 is_stmt 1 view .LVU299
 242:pattern_edit.c ****           curr_note = F2_SHARP + shift * OCTAVE;
 1015               		.loc 1 242 13 is_stmt 0 view .LVU300
 1016 045e 8BE0      		ldi r24,lo8(11)
 1017 0460 0E94 0000 		call just_pressed
 1018               	.LVL120:
 242:pattern_edit.c ****           curr_note = F2_SHARP + shift * OCTAVE;
 1019               		.loc 1 242 12 view .LVU301
 1020 0464 8823      		tst r24
 1021 0466 01F0      		breq .L60
 243:pattern_edit.c ****         if (just_pressed(KEY_G))
 1022               		.loc 1 243 11 is_stmt 1 view .LVU302
 243:pattern_edit.c ****         if (just_pressed(KEY_G))
 1023               		.loc 1 243 40 is_stmt 0 view .LVU303
 1024 0468 CCE0      		ldi r28,lo8(12)
 1025               	.LVL121:
 243:pattern_edit.c ****         if (just_pressed(KEY_G))
 1026               		.loc 1 243 40 view .LVU304
 1027 046a DC9F      		mul r29,r28
 1028 046c C02D      		mov r28,r0
 1029 046e 1124      		clr r1
 243:pattern_edit.c ****         if (just_pressed(KEY_G))
 1030               		.loc 1 243 21 view .LVU305
 1031 0470 C35E      		subi r28,lo8(-(29))
 1032               	.LVL122:
 1033               	.L60:
 244:pattern_edit.c ****           curr_note = G2 + shift * OCTAVE;
 1034               		.loc 1 244 9 is_stmt 1 view .LVU306
 244:pattern_edit.c ****           curr_note = G2 + shift * OCTAVE;
 1035               		.loc 1 244 13 is_stmt 0 view .LVU307
 1036 0472 81E1      		ldi r24,lo8(17)
 1037 0474 0E94 0000 		call just_pressed
 1038               	.LVL123:
 244:pattern_edit.c ****           curr_note = G2 + shift * OCTAVE;
 1039               		.loc 1 244 12 view .LVU308
 1040 0478 8823      		tst r24
 1041 047a 01F0      		breq .L61
 245:pattern_edit.c ****         if (just_pressed(KEY_GS))
 1042               		.loc 1 245 11 is_stmt 1 view .LVU309
 245:pattern_edit.c ****         if (just_pressed(KEY_GS))
 1043               		.loc 1 245 34 is_stmt 0 view .LVU310
 1044 047c CCE0      		ldi r28,lo8(12)
 1045               	.LVL124:
 245:pattern_edit.c ****         if (just_pressed(KEY_GS))
 1046               		.loc 1 245 34 view .LVU311
 1047 047e DC9F      		mul r29,r28
 1048 0480 C02D      		mov r28,r0
 1049 0482 1124      		clr r1
 245:pattern_edit.c ****         if (just_pressed(KEY_GS))
 1050               		.loc 1 245 21 view .LVU312
 1051 0484 C25E      		subi r28,lo8(-(30))
 1052               	.LVL125:
 1053               	.L61:
 246:pattern_edit.c ****           curr_note = G2_SHARP + shift * OCTAVE;
 1054               		.loc 1 246 9 is_stmt 1 view .LVU313
 246:pattern_edit.c ****           curr_note = G2_SHARP + shift * OCTAVE;
 1055               		.loc 1 246 13 is_stmt 0 view .LVU314
 1056 0486 8CE0      		ldi r24,lo8(12)
 1057 0488 0E94 0000 		call just_pressed
 1058               	.LVL126:
 246:pattern_edit.c ****           curr_note = G2_SHARP + shift * OCTAVE;
 1059               		.loc 1 246 12 view .LVU315
 1060 048c 8823      		tst r24
 1061 048e 01F0      		breq .L62
 247:pattern_edit.c ****         if (just_pressed(KEY_A))
 1062               		.loc 1 247 11 is_stmt 1 view .LVU316
 247:pattern_edit.c ****         if (just_pressed(KEY_A))
 1063               		.loc 1 247 40 is_stmt 0 view .LVU317
 1064 0490 CCE0      		ldi r28,lo8(12)
 1065               	.LVL127:
 247:pattern_edit.c ****         if (just_pressed(KEY_A))
 1066               		.loc 1 247 40 view .LVU318
 1067 0492 DC9F      		mul r29,r28
 1068 0494 C02D      		mov r28,r0
 1069 0496 1124      		clr r1
 247:pattern_edit.c ****         if (just_pressed(KEY_A))
 1070               		.loc 1 247 21 view .LVU319
 1071 0498 C15E      		subi r28,lo8(-(31))
 1072               	.LVL128:
 1073               	.L62:
 248:pattern_edit.c ****           curr_note = A3 + shift * OCTAVE;
 1074               		.loc 1 248 9 is_stmt 1 view .LVU320
 248:pattern_edit.c ****           curr_note = A3 + shift * OCTAVE;
 1075               		.loc 1 248 13 is_stmt 0 view .LVU321
 1076 049a 82E1      		ldi r24,lo8(18)
 1077 049c 0E94 0000 		call just_pressed
 1078               	.LVL129:
 248:pattern_edit.c ****           curr_note = A3 + shift * OCTAVE;
 1079               		.loc 1 248 12 view .LVU322
 1080 04a0 8823      		tst r24
 1081 04a2 01F0      		breq .L63
 249:pattern_edit.c ****         if (just_pressed(KEY_AS))
 1082               		.loc 1 249 11 is_stmt 1 view .LVU323
 249:pattern_edit.c ****         if (just_pressed(KEY_AS))
 1083               		.loc 1 249 34 is_stmt 0 view .LVU324
 1084 04a4 CCE0      		ldi r28,lo8(12)
 1085               	.LVL130:
 249:pattern_edit.c ****         if (just_pressed(KEY_AS))
 1086               		.loc 1 249 34 view .LVU325
 1087 04a6 DC9F      		mul r29,r28
 1088 04a8 C02D      		mov r28,r0
 1089 04aa 1124      		clr r1
 249:pattern_edit.c ****         if (just_pressed(KEY_AS))
 1090               		.loc 1 249 21 view .LVU326
 1091 04ac C05E      		subi r28,lo8(-(32))
 1092               	.LVL131:
 1093               	.L63:
 250:pattern_edit.c ****           curr_note = A3_SHARP + shift * OCTAVE;
 1094               		.loc 1 250 9 is_stmt 1 view .LVU327
 250:pattern_edit.c ****           curr_note = A3_SHARP + shift * OCTAVE;
 1095               		.loc 1 250 13 is_stmt 0 view .LVU328
 1096 04ae 8DE0      		ldi r24,lo8(13)
 1097 04b0 0E94 0000 		call just_pressed
 1098               	.LVL132:
 250:pattern_edit.c ****           curr_note = A3_SHARP + shift * OCTAVE;
 1099               		.loc 1 250 12 view .LVU329
 1100 04b4 8823      		tst r24
 1101 04b6 01F0      		breq .L64
 251:pattern_edit.c ****         if (just_pressed(KEY_B))
 1102               		.loc 1 251 11 is_stmt 1 view .LVU330
 251:pattern_edit.c ****         if (just_pressed(KEY_B))
 1103               		.loc 1 251 40 is_stmt 0 view .LVU331
 1104 04b8 CCE0      		ldi r28,lo8(12)
 1105               	.LVL133:
 251:pattern_edit.c ****         if (just_pressed(KEY_B))
 1106               		.loc 1 251 40 view .LVU332
 1107 04ba DC9F      		mul r29,r28
 1108 04bc C02D      		mov r28,r0
 1109 04be 1124      		clr r1
 251:pattern_edit.c ****         if (just_pressed(KEY_B))
 1110               		.loc 1 251 21 view .LVU333
 1111 04c0 CF5D      		subi r28,lo8(-(33))
 1112               	.LVL134:
 1113               	.L64:
 252:pattern_edit.c ****           curr_note = B3 + shift * OCTAVE;
 1114               		.loc 1 252 9 is_stmt 1 view .LVU334
 252:pattern_edit.c ****           curr_note = B3 + shift * OCTAVE;
 1115               		.loc 1 252 13 is_stmt 0 view .LVU335
 1116 04c2 80E1      		ldi r24,lo8(16)
 1117 04c4 0E94 0000 		call just_pressed
 1118               	.LVL135:
 252:pattern_edit.c ****           curr_note = B3 + shift * OCTAVE;
 1119               		.loc 1 252 12 view .LVU336
 1120 04c8 8823      		tst r24
 1121 04ca 01F0      		breq .L65
 253:pattern_edit.c ****         if (just_pressed(KEY_C2)) {
 1122               		.loc 1 253 11 is_stmt 1 view .LVU337
 253:pattern_edit.c ****         if (just_pressed(KEY_C2)) {
 1123               		.loc 1 253 34 is_stmt 0 view .LVU338
 1124 04cc CCE0      		ldi r28,lo8(12)
 1125               	.LVL136:
 253:pattern_edit.c ****         if (just_pressed(KEY_C2)) {
 1126               		.loc 1 253 34 view .LVU339
 1127 04ce DC9F      		mul r29,r28
 1128 04d0 C02D      		mov r28,r0
 1129 04d2 1124      		clr r1
 253:pattern_edit.c ****         if (just_pressed(KEY_C2)) {
 1130               		.loc 1 253 21 view .LVU340
 1131 04d4 CE5D      		subi r28,lo8(-(34))
 1132               	.LVL137:
 1133               	.L65:
 254:pattern_edit.c ****           curr_note = C3 + shift * OCTAVE;
 1134               		.loc 1 254 9 is_stmt 1 view .LVU341
 254:pattern_edit.c ****           curr_note = C3 + shift * OCTAVE;
 1135               		.loc 1 254 13 is_stmt 0 view .LVU342
 1136 04d6 83E1      		ldi r24,lo8(19)
 1137 04d8 0E94 0000 		call just_pressed
 1138               	.LVL138:
 254:pattern_edit.c ****           curr_note = C3 + shift * OCTAVE;
 1139               		.loc 1 254 12 view .LVU343
 1140 04dc 8823      		tst r24
 1141 04de 01F0      		breq .L57
 255:pattern_edit.c ****         }
 1142               		.loc 1 255 11 is_stmt 1 view .LVU344
 255:pattern_edit.c ****         }
 1143               		.loc 1 255 34 is_stmt 0 view .LVU345
 1144 04e0 CCE0      		ldi r28,lo8(12)
 1145               	.LVL139:
 255:pattern_edit.c ****         }
 1146               		.loc 1 255 34 view .LVU346
 1147 04e2 DC9F      		mul r29,r28
 1148 04e4 C02D      		mov r28,r0
 1149 04e6 1124      		clr r1
 255:pattern_edit.c ****         }
 1150               		.loc 1 255 21 view .LVU347
 1151 04e8 CD5D      		subi r28,lo8(-(35))
 1152               	.LVL140:
 1153               	.L57:
 260:pattern_edit.c ****         curr_note |= (pattern_buff[index] & 0xC0);
 1154               		.loc 1 260 7 is_stmt 1 view .LVU348
 260:pattern_edit.c ****         curr_note |= (pattern_buff[index] & 0xC0);
 1155               		.loc 1 260 24 is_stmt 0 view .LVU349
 1156 04ea F801      		movw r30,r16
 1157 04ec 8081      		ld r24,Z
 260:pattern_edit.c ****         curr_note |= (pattern_buff[index] & 0xC0);
 1158               		.loc 1 260 10 view .LVU350
 1159 04ee 8F3F      		cpi r24,lo8(-1)
 1160 04f0 01F4      		brne .L66
 260:pattern_edit.c ****         curr_note |= (pattern_buff[index] & 0xC0);
 1161               		.loc 1 260 41 discriminator 1 view .LVU351
 1162 04f2 CF33      		cpi r28,lo8(63)
 1163 04f4 01F4      		brne .L67
 1164               	.L66:
 261:pattern_edit.c **** 
 1165               		.loc 1 261 9 is_stmt 1 view .LVU352
 261:pattern_edit.c **** 
 1166               		.loc 1 261 35 is_stmt 0 view .LVU353
 1167 04f6 F801      		movw r30,r16
 1168 04f8 8081      		ld r24,Z
 261:pattern_edit.c **** 
 1169               		.loc 1 261 19 view .LVU354
 1170 04fa 807C      		andi r24,lo8(-64)
 1171 04fc C82B      		or r28,r24
 1172               	.LVL141:
 1173               	.L67:
 263:pattern_edit.c ****         if (in_stepwrite_mode) {
 1174               		.loc 1 263 7 is_stmt 1 view .LVU355
 263:pattern_edit.c ****         if (in_stepwrite_mode) {
 1175               		.loc 1 263 36 is_stmt 0 view .LVU356
 1176 04fe F801      		movw r30,r16
 1177 0500 8081      		ld r24,Z
 263:pattern_edit.c ****         if (in_stepwrite_mode) {
 1178               		.loc 1 263 10 view .LVU357
 1179 0502 8C17      		cp r24,r28
 1180 0504 01F0      		breq .L69
 264:pattern_edit.c ****           note_off(0);
 1181               		.loc 1 264 9 is_stmt 1 view .LVU358
 264:pattern_edit.c ****           note_off(0);
 1182               		.loc 1 264 12 is_stmt 0 view .LVU359
 1183 0506 8091 0000 		lds r24,in_stepwrite_mode
 1184 050a 8823      		tst r24
 1185 050c 01F0      		breq .L70
 265:pattern_edit.c ****           delay_ms(1);
 1186               		.loc 1 265 11 is_stmt 1 view .LVU360
 1187 050e 80E0      		ldi r24,0
 1188 0510 0E94 0000 		call note_off
 1189               	.LVL142:
 266:pattern_edit.c ****         }
 1190               		.loc 1 266 11 view .LVU361
 1191 0514 81E0      		ldi r24,lo8(1)
 1192 0516 0E94 0000 		call delay_ms
 1193               	.LVL143:
 1194               	.L70:
 269:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 1195               		.loc 1 269 9 view .LVU362
 269:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 1196               		.loc 1 269 29 is_stmt 0 view .LVU363
 1197 051a F801      		movw r30,r16
 1198 051c C083      		st Z,r28
 270:pattern_edit.c **** 
 1199               		.loc 1 270 9 is_stmt 1 view .LVU364
 270:pattern_edit.c **** 
 1200               		.loc 1 270 19 is_stmt 0 view .LVU365
 1201 051e F092 0000 		sts dirtyflag,r15
 272:pattern_edit.c ****           note_on(curr_note & 0x3F,
 1202               		.loc 1 272 9 is_stmt 1 view .LVU366
 272:pattern_edit.c ****           note_on(curr_note & 0x3F,
 1203               		.loc 1 272 12 is_stmt 0 view .LVU367
 1204 0522 8091 0000 		lds r24,in_stepwrite_mode
 1205 0526 8823      		tst r24
 1206 0528 01F0      		breq .L69
 273:pattern_edit.c ****                   0,                       // no slide
 1207               		.loc 1 273 11 is_stmt 1 view .LVU368
 1208 052a C6FB      		bst r28,6
 1209 052c 4427      		clr r20
 1210 052e 40F9      		bld r20,0
 1211 0530 60E0      		ldi r22,0
 1212 0532 8C2F      		mov r24,r28
 1213 0534 8F73      		andi r24,lo8(63)
 1214 0536 0E94 0000 		call note_on
 1215               	.LVL144:
 1216               	.L69:
 278:pattern_edit.c ****         set_note_led(curr_note);
 1217               		.loc 1 278 7 view .LVU369
 278:pattern_edit.c ****         set_note_led(curr_note);
 1218               		.loc 1 278 10 is_stmt 0 view .LVU370
 1219 053a CF3F      		cpi r28,lo8(-1)
 1220 053c 01F4      		brne .+2
 1221 053e 00C0      		rjmp .L72
 279:pattern_edit.c ****         if (dirtyflag)
 1222               		.loc 1 279 9 is_stmt 1 view .LVU371
 1223 0540 8C2F      		mov r24,r28
 1224 0542 0E94 0000 		call set_note_led
 1225               	.LVL145:
 280:pattern_edit.c ****           set_led_blink(LED_DONE);
 1226               		.loc 1 280 9 view .LVU372
 280:pattern_edit.c ****           set_led_blink(LED_DONE);
 1227               		.loc 1 280 12 is_stmt 0 view .LVU373
 1228 0546 8091 0000 		lds r24,dirtyflag
 1229 054a 8823      		tst r24
 1230 054c 01F4      		brne .+2
 1231 054e 00C0      		rjmp .L73
 281:pattern_edit.c ****         else
 1232               		.loc 1 281 11 is_stmt 1 view .LVU374
 1233 0550 80E0      		ldi r24,0
 1234 0552 0E94 0000 		call set_led_blink
 1235               	.LVL146:
 1236               	.L43:
 281:pattern_edit.c ****         else
 1237               		.loc 1 281 11 is_stmt 0 view .LVU375
 1238               	.LBE3:
 294:pattern_edit.c ****       uint8_t prev_note = curr_note;
 1239               		.loc 1 294 5 is_stmt 1 view .LVU376
 294:pattern_edit.c ****       uint8_t prev_note = curr_note;
 1240               		.loc 1 294 9 is_stmt 0 view .LVU377
 1241 0556 88E0      		ldi r24,lo8(8)
 1242 0558 0E94 0000 		call just_pressed
 1243               	.LVL147:
 294:pattern_edit.c ****       uint8_t prev_note = curr_note;
 1244               		.loc 1 294 8 view .LVU378
 1245 055c 8823      		tst r24
 1246 055e 01F4      		brne .+2
 1247 0560 00C0      		rjmp .L74
 1248               	.L77:
 1249               	.LBB4:
 295:pattern_edit.c **** 
 1250               		.loc 1 295 7 is_stmt 1 view .LVU379
 1251               	.LVL148:
 297:pattern_edit.c ****         // turn off the last note
 1252               		.loc 1 297 7 view .LVU380
 297:pattern_edit.c ****         // turn off the last note
 1253               		.loc 1 297 10 is_stmt 0 view .LVU381
 1254 0562 8091 0000 		lds r24,in_stepwrite_mode
 1255 0566 8111      		cpse r24,__zero_reg__
 1256 0568 00C0      		rjmp .L75
 343:pattern_edit.c ****         start_stepwrite_mode();
 1257               		.loc 1 343 14 is_stmt 1 view .LVU382
 343:pattern_edit.c ****         start_stepwrite_mode();
 1258               		.loc 1 343 18 is_stmt 0 view .LVU383
 1259 056a 88E0      		ldi r24,lo8(8)
 1260 056c 0E94 0000 		call just_pressed
 1261               	.LVL149:
 343:pattern_edit.c ****         start_stepwrite_mode();
 1262               		.loc 1 343 17 view .LVU384
 1263 0570 8823      		tst r24
 1264 0572 01F4      		brne .+2
 1265 0574 00C0      		rjmp .L78
 343:pattern_edit.c ****         start_stepwrite_mode();
 1266               		.loc 1 343 41 discriminator 1 view .LVU385
 1267 0576 8091 0000 		lds r24,in_runwrite_mode
 1268 057a 8111      		cpse r24,__zero_reg__
 1269 057c 00C0      		rjmp .L78
 344:pattern_edit.c **** 
 1270               		.loc 1 344 9 is_stmt 1 view .LVU386
 1271 057e 0E94 0000 		call start_stepwrite_mode
 1272               	.LVL150:
 346:pattern_edit.c **** 
 1273               		.loc 1 346 9 view .LVU387
 346:pattern_edit.c **** 
 1274               		.loc 1 346 28 is_stmt 0 view .LVU388
 1275 0582 1092 0000 		sts curr_pattern_index,__zero_reg__
 348:pattern_edit.c ****         if (curr_note != 0xFF) {
 1276               		.loc 1 348 9 is_stmt 1 view .LVU389
 348:pattern_edit.c ****         if (curr_note != 0xFF) {
 1277               		.loc 1 348 33 is_stmt 0 view .LVU390
 1278 0586 E091 0000 		lds r30,curr_pattern_index
 1279 058a F0E0      		ldi r31,0
 1280 058c E050      		subi r30,lo8(-(pattern_buff))
 1281 058e F040      		sbci r31,hi8(-(pattern_buff))
 1282 0590 8081      		ld r24,Z
 348:pattern_edit.c ****         if (curr_note != 0xFF) {
 1283               		.loc 1 348 19 view .LVU391
 1284 0592 8093 0000 		sts curr_note,r24
 349:pattern_edit.c ****           note_on(curr_note & 0x3F,
 1285               		.loc 1 349 9 is_stmt 1 view .LVU392
 349:pattern_edit.c ****           note_on(curr_note & 0x3F,
 1286               		.loc 1 349 12 is_stmt 0 view .LVU393
 1287 0596 8F3F      		cpi r24,lo8(-1)
 1288 0598 01F4      		brne .+2
 1289 059a 00C0      		rjmp .L78
 350:pattern_edit.c ****                   0,                       // no slide on first note
 1290               		.loc 1 350 11 is_stmt 1 view .LVU394
 1291 059c 86FB      		bst r24,6
 1292 059e 4427      		clr r20
 1293 05a0 40F9      		bld r20,0
 1294 05a2 60E0      		ldi r22,0
 1295 05a4 00C0      		rjmp .L241
 1296               	.L39:
 350:pattern_edit.c ****                   0,                       // no slide on first note
 1297               		.loc 1 350 11 is_stmt 0 view .LVU395
 1298               	.LBE4:
 172:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 1299               		.loc 1 172 66 view .LVU396
 1300 05a6 8091 0000 		lds r24,sync
 1301 05aa 8230      		cpi r24,lo8(2)
 1302 05ac 01F0      		breq .+2
 1303 05ae 00C0      		rjmp .L36
 1304 05b0 00C0      		rjmp .L38
 1305               	.L32:
 172:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 1306               		.loc 1 172 12 is_stmt 1 view .LVU397
 172:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 1307               		.loc 1 172 15 is_stmt 0 view .LVU398
 1308 05b2 8091 0000 		lds r24,sync
 1309 05b6 8111      		cpse r24,__zero_reg__
 1310 05b8 00C0      		rjmp .L39
 172:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 1311               		.loc 1 172 44 discriminator 1 view .LVU399
 1312 05ba 81E0      		ldi r24,lo8(1)
 1313 05bc 0E94 0000 		call just_pressed
 1314               	.LVL151:
 172:pattern_edit.c ****                ((sync == MIDI_SYNC) &&
 1315               		.loc 1 172 41 discriminator 1 view .LVU400
 1316 05c0 8823      		tst r24
 1317 05c2 01F0      		breq .L39
 1318               	.L42:
 175:pattern_edit.c ****         stop_stepwrite_mode();
 1319               		.loc 1 175 7 is_stmt 1 view .LVU401
 175:pattern_edit.c ****         stop_stepwrite_mode();
 1320               		.loc 1 175 10 is_stmt 0 view .LVU402
 1321 05c4 8091 0000 		lds r24,in_stepwrite_mode
 1322 05c8 8111      		cpse r24,__zero_reg__
 176:pattern_edit.c ****       start_runwrite_mode();
 1323               		.loc 1 176 9 is_stmt 1 view .LVU403
 1324 05ca 0E94 0000 		call stop_stepwrite_mode
 1325               	.LVL152:
 1326               	.L41:
 177:pattern_edit.c ****     }
 1327               		.loc 1 177 7 view .LVU404
 1328 05ce 0E94 0000 		call start_runwrite_mode
 1329               	.LVL153:
 1330 05d2 00C0      		rjmp .L36
 1331               	.LVL154:
 1332               	.L46:
 1333               	.LBB5:
 195:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 1334               		.loc 1 195 9 view .LVU405
 195:pattern_edit.c ****         dirtyflag = 1; // clearly, changed
 1335               		.loc 1 195 29 is_stmt 0 view .LVU406
 1336 05d4 F801      		movw r30,r16
 1337 05d6 8081      		ld r24,Z
 1338 05d8 8058      		subi r24,lo8(-(-128))
 1339 05da 8083      		st Z,r24
 196:pattern_edit.c ****       }
 1340               		.loc 1 196 9 is_stmt 1 view .LVU407
 196:pattern_edit.c ****       }
 1341               		.loc 1 196 19 is_stmt 0 view .LVU408
 1342 05dc F092 0000 		sts dirtyflag,r15
 200:pattern_edit.c ****         shift = 0;
 1343               		.loc 1 200 7 is_stmt 1 view .LVU409
 1344               	.L48:
 200:pattern_edit.c ****         shift = 0;
 1345               		.loc 1 200 31 is_stmt 0 discriminator 1 view .LVU410
 1346 05e0 CC23      		tst r28
 1347 05e2 01F4      		brne .+2
 1348 05e4 00C0      		rjmp .L49
 202:pattern_edit.c ****         shift = -1;
 1349               		.loc 1 202 12 is_stmt 1 view .LVU411
 203:pattern_edit.c ****       else if (curr_note <= C3)
 1350               		.loc 1 203 15 is_stmt 0 view .LVU412
 1351 05e6 DFEF      		ldi r29,lo8(-1)
 202:pattern_edit.c ****         shift = -1;
 1352               		.loc 1 202 15 view .LVU413
 1353 05e8 C731      		cpi r28,lo8(23)
 1354 05ea 00F4      		brsh .+2
 1355 05ec 00C0      		rjmp .L47
 204:pattern_edit.c ****         shift = 0;
 1356               		.loc 1 204 12 is_stmt 1 view .LVU414
 204:pattern_edit.c ****         shift = 0;
 1357               		.loc 1 204 15 is_stmt 0 view .LVU415
 1358 05ee C432      		cpi r28,lo8(36)
 1359 05f0 00F4      		brsh .+2
 1360 05f2 00C0      		rjmp .L49
 206:pattern_edit.c ****         shift = 1;
 1361               		.loc 1 206 12 is_stmt 1 view .LVU416
 207:pattern_edit.c ****       else if (curr_note <= C5)
 1362               		.loc 1 207 15 is_stmt 0 view .LVU417
 1363 05f4 D1E0      		ldi r29,lo8(1)
 206:pattern_edit.c ****         shift = 1;
 1364               		.loc 1 206 15 view .LVU418
 1365 05f6 C033      		cpi r28,lo8(48)
 1366 05f8 00F4      		brsh .+2
 1367 05fa 00C0      		rjmp .L47
 208:pattern_edit.c ****         shift = 2;
 1368               		.loc 1 208 12 is_stmt 1 view .LVU419
 211:pattern_edit.c **** 
 1369               		.loc 1 211 15 is_stmt 0 view .LVU420
 1370 05fc D3E0      		ldi r29,lo8(3)
 208:pattern_edit.c ****         shift = 2;
 1371               		.loc 1 208 15 view .LVU421
 1372 05fe CC33      		cpi r28,lo8(60)
 1373 0600 00F0      		brlo .+2
 1374 0602 00C0      		rjmp .L47
 209:pattern_edit.c ****       else
 1375               		.loc 1 209 15 view .LVU422
 1376 0604 D2E0      		ldi r29,lo8(2)
 1377 0606 00C0      		rjmp .L47
 1378               	.L45:
 200:pattern_edit.c ****         shift = 0;
 1379               		.loc 1 200 7 is_stmt 1 view .LVU423
 200:pattern_edit.c ****         shift = 0;
 1380               		.loc 1 200 10 is_stmt 0 view .LVU424
 1381 0608 CF33      		cpi r28,lo8(63)
 1382 060a 01F4      		brne .L48
 1383 060c 00C0      		rjmp .L49
 1384               	.LVL155:
 1385               	.L73:
 283:pattern_edit.c ****       } else {
 1386               		.loc 1 283 11 is_stmt 1 view .LVU425
 1387 060e 80E0      		ldi r24,0
 1388 0610 0E94 0000 		call clear_led
 1389               	.LVL156:
 1390 0614 00C0      		rjmp .L43
 1391               	.L72:
 285:pattern_edit.c ****         clear_led_blink(LED_DONE);
 1392               		.loc 1 285 9 view .LVU426
 1393 0616 0E94 0000 		call clear_note_leds
 1394               	.LVL157:
 286:pattern_edit.c ****         clear_led_blink(LED_UP);
 1395               		.loc 1 286 9 view .LVU427
 1396 061a 80E0      		ldi r24,0
 1397 061c 0E94 0000 		call clear_led_blink
 1398               	.LVL158:
 287:pattern_edit.c ****         set_led(LED_DONE);
 1399               		.loc 1 287 9 view .LVU428
 1400 0620 83E0      		ldi r24,lo8(3)
 1401 0622 0E94 0000 		call clear_led_blink
 1402               	.LVL159:
 288:pattern_edit.c ****       }
 1403               		.loc 1 288 9 view .LVU429
 1404 0626 80E0      		ldi r24,0
 1405 0628 0E94 0000 		call set_led
 1406               	.LVL160:
 1407 062c 00C0      		rjmp .L43
 1408               	.LVL161:
 1409               	.L74:
 288:pattern_edit.c ****       }
 1410               		.loc 1 288 9 is_stmt 0 view .LVU430
 1411               	.LBE5:
 294:pattern_edit.c ****       uint8_t prev_note = curr_note;
 1412               		.loc 1 294 35 discriminator 1 view .LVU431
 1413 062e 83E0      		ldi r24,lo8(3)
 1414 0630 0E94 0000 		call just_pressed
 1415               	.LVL162:
 294:pattern_edit.c ****       uint8_t prev_note = curr_note;
 1416               		.loc 1 294 32 discriminator 1 view .LVU432
 1417 0634 8111      		cpse r24,__zero_reg__
 1418 0636 00C0      		rjmp .L77
 1419               	.L78:
 360:pattern_edit.c ****       if (in_stepwrite_mode) {
 1420               		.loc 1 360 5 is_stmt 1 view .LVU433
 360:pattern_edit.c ****       if (in_stepwrite_mode) {
 1421               		.loc 1 360 9 is_stmt 0 view .LVU434
 1422 0638 87E1      		ldi r24,lo8(23)
 1423 063a 0E94 0000 		call just_pressed
 1424               	.LVL163:
 360:pattern_edit.c ****       if (in_stepwrite_mode) {
 1425               		.loc 1 360 8 view .LVU435
 1426 063e 8823      		tst r24
 1427 0640 01F4      		brne .+2
 1428 0642 00C0      		rjmp .L17
 361:pattern_edit.c **** 
 1429               		.loc 1 361 7 is_stmt 1 view .LVU436
 361:pattern_edit.c **** 
 1430               		.loc 1 361 10 is_stmt 0 view .LVU437
 1431 0644 8091 0000 		lds r24,in_stepwrite_mode
 1432 0648 8823      		tst r24
 1433 064a 01F0      		breq .L89
 367:pattern_edit.c ****           pattern_buff[curr_pattern_index + 1] = 0xff;
 1434               		.loc 1 367 9 is_stmt 1 view .LVU438
 367:pattern_edit.c ****           pattern_buff[curr_pattern_index + 1] = 0xff;
 1435               		.loc 1 367 36 is_stmt 0 view .LVU439
 1436 064c 8091 0000 		lds r24,curr_pattern_index
 367:pattern_edit.c ****           pattern_buff[curr_pattern_index + 1] = 0xff;
 1437               		.loc 1 367 12 view .LVU440
 1438 0650 8F30      		cpi r24,lo8(15)
 1439 0652 00F4      		brsh .L90
 368:pattern_edit.c **** 
 1440               		.loc 1 368 11 is_stmt 1 view .LVU441
 368:pattern_edit.c **** 
 1441               		.loc 1 368 43 is_stmt 0 view .LVU442
 1442 0654 E091 0000 		lds r30,curr_pattern_index
 1443 0658 F0E0      		ldi r31,0
 368:pattern_edit.c **** 
 1444               		.loc 1 368 48 view .LVU443
 1445 065a E050      		subi r30,lo8(-(pattern_buff+1))
 1446 065c F040      		sbci r31,hi8(-(pattern_buff+1))
 1447 065e D082      		st Z,r13
 1448               	.L90:
 370:pattern_edit.c ****       }
 1449               		.loc 1 370 9 is_stmt 1 view .LVU444
 1450 0660 0E94 0000 		call stop_stepwrite_mode
 1451               	.LVL164:
 1452               	.L89:
 372:pattern_edit.c ****       dirtyflag = 0; // not dirty anymore, saved!
 1453               		.loc 1 372 7 view .LVU445
 1454 0664 6091 0000 		lds r22,patt_location
 1455 0668 8091 0000 		lds r24,bank
 1456 066c 0E94 0000 		call write_pattern
 1457               	.LVL165:
 373:pattern_edit.c ****       clear_led_blink(LED_DONE);
 1458               		.loc 1 373 7 view .LVU446
 373:pattern_edit.c ****       clear_led_blink(LED_DONE);
 1459               		.loc 1 373 17 is_stmt 0 view .LVU447
 1460 0670 1092 0000 		sts dirtyflag,__zero_reg__
 374:pattern_edit.c ****     }
 1461               		.loc 1 374 7 is_stmt 1 view .LVU448
 1462 0674 80E0      		ldi r24,0
 1463 0676 0E94 0000 		call clear_led_blink
 1464               	.LVL166:
 1465 067a 00C0      		rjmp .L17
 1466               	.LVL167:
 1467               	.L75:
 1468               	.LBB6:
 299:pattern_edit.c ****         delay_ms(1);
 1469               		.loc 1 299 9 view .LVU449
 1470 067c C091 0000 		lds r28,curr_note
 1471 0680 CC1F      		rol r28
 1472 0682 CC27      		clr r28
 1473 0684 CC1F      		rol r28
 1474 0686 8C2F      		mov r24,r28
 1475 0688 0E94 0000 		call note_off
 1476               	.LVL168:
 300:pattern_edit.c ****         // putstring("step");
 1477               		.loc 1 300 9 view .LVU450
 1478 068c 81E0      		ldi r24,lo8(1)
 1479 068e 0E94 0000 		call delay_ms
 1480               	.LVL169:
 302:pattern_edit.c ****           // get next note from pattern
 1481               		.loc 1 302 9 view .LVU451
 302:pattern_edit.c ****           // get next note from pattern
 1482               		.loc 1 302 13 is_stmt 0 view .LVU452
 1483 0692 88E0      		ldi r24,lo8(8)
 1484 0694 0E94 0000 		call just_pressed
 1485               	.LVL170:
 302:pattern_edit.c ****           // get next note from pattern
 1486               		.loc 1 302 12 view .LVU453
 1487 0698 8823      		tst r24
 1488 069a 01F0      		breq .L79
 304:pattern_edit.c ****               (pattern_buff[curr_pattern_index] == END_OF_PATTERN))
 1489               		.loc 1 304 11 is_stmt 1 view .LVU454
 304:pattern_edit.c ****               (pattern_buff[curr_pattern_index] == END_OF_PATTERN))
 1490               		.loc 1 304 41 is_stmt 0 view .LVU455
 1491 069c 8091 0000 		lds r24,curr_pattern_index
 304:pattern_edit.c ****               (pattern_buff[curr_pattern_index] == END_OF_PATTERN))
 1492               		.loc 1 304 14 view .LVU456
 1493 06a0 8F30      		cpi r24,lo8(15)
 1494 06a2 00F4      		brsh .L80
 305:pattern_edit.c ****             curr_pattern_index = 0;
 1495               		.loc 1 305 28 discriminator 1 view .LVU457
 1496 06a4 E091 0000 		lds r30,curr_pattern_index
 1497 06a8 F0E0      		ldi r31,0
 1498 06aa E050      		subi r30,lo8(-(pattern_buff))
 1499 06ac F040      		sbci r31,hi8(-(pattern_buff))
 1500 06ae 8081      		ld r24,Z
 304:pattern_edit.c ****               (pattern_buff[curr_pattern_index] == END_OF_PATTERN))
 1501               		.loc 1 304 55 discriminator 1 view .LVU458
 1502 06b0 8F3F      		cpi r24,lo8(-1)
 1503 06b2 01F4      		brne .L81
 1504               	.L80:
 306:pattern_edit.c ****           else
 1505               		.loc 1 306 13 is_stmt 1 view .LVU459
 306:pattern_edit.c ****           else
 1506               		.loc 1 306 32 is_stmt 0 view .LVU460
 1507 06b4 1092 0000 		sts curr_pattern_index,__zero_reg__
 1508               	.L82:
 321:pattern_edit.c ****         set_bank_led(curr_pattern_index);
 1509               		.loc 1 321 9 is_stmt 1 view .LVU461
 1510 06b8 0E94 0000 		call clear_bank_leds
 1511               	.LVL171:
 322:pattern_edit.c **** 
 1512               		.loc 1 322 9 view .LVU462
 1513 06bc 8091 0000 		lds r24,curr_pattern_index
 1514 06c0 0E94 0000 		call set_bank_led
 1515               	.LVL172:
 325:pattern_edit.c **** 
 1516               		.loc 1 325 9 view .LVU463
 325:pattern_edit.c **** 
 1517               		.loc 1 325 33 is_stmt 0 view .LVU464
 1518 06c4 E091 0000 		lds r30,curr_pattern_index
 1519 06c8 F0E0      		ldi r31,0
 1520 06ca E050      		subi r30,lo8(-(pattern_buff))
 1521 06cc F040      		sbci r31,hi8(-(pattern_buff))
 1522 06ce 8081      		ld r24,Z
 325:pattern_edit.c **** 
 1523               		.loc 1 325 19 view .LVU465
 1524 06d0 8093 0000 		sts curr_note,r24
 327:pattern_edit.c ****           clear_led(LED_ACCENT);
 1525               		.loc 1 327 9 is_stmt 1 view .LVU466
 327:pattern_edit.c ****           clear_led(LED_ACCENT);
 1526               		.loc 1 327 12 is_stmt 0 view .LVU467
 1527 06d4 8F3F      		cpi r24,lo8(-1)
 1528 06d6 01F4      		brne .L86
 328:pattern_edit.c ****           clear_led(LED_SLIDE);
 1529               		.loc 1 328 11 is_stmt 1 view .LVU468
 1530 06d8 81E0      		ldi r24,lo8(1)
 1531 06da 0E94 0000 		call clear_led
 1532               	.LVL173:
 329:pattern_edit.c ****           set_led(LED_DONE);
 1533               		.loc 1 329 11 view .LVU469
 1534 06de 82E0      		ldi r24,lo8(2)
 1535 06e0 0E94 0000 		call clear_led
 1536               	.LVL174:
 330:pattern_edit.c ****           clear_led_blink(LED_DONE);
 1537               		.loc 1 330 11 view .LVU470
 1538 06e4 80E0      		ldi r24,0
 1539 06e6 0E94 0000 		call set_led
 1540               	.LVL175:
 331:pattern_edit.c ****         } else {
 1541               		.loc 1 331 11 view .LVU471
 1542 06ea 80E0      		ldi r24,0
 1543 06ec 0E94 0000 		call clear_led_blink
 1544               	.LVL176:
 1545 06f0 00C0      		rjmp .L78
 1546               	.L81:
 308:pattern_edit.c ****         } else {
 1547               		.loc 1 308 13 view .LVU472
 308:pattern_edit.c ****         } else {
 1548               		.loc 1 308 31 is_stmt 0 view .LVU473
 1549 06f2 8091 0000 		lds r24,curr_pattern_index
 1550 06f6 8F5F      		subi r24,lo8(-(1))
 1551               	.L240:
 317:pattern_edit.c ****           }
 1552               		.loc 1 317 31 view .LVU474
 1553 06f8 8093 0000 		sts curr_pattern_index,r24
 1554 06fc 00C0      		rjmp .L82
 1555               	.L79:
 311:pattern_edit.c ****             // search thru the buffer -forward- to find the EOP byte
 1556               		.loc 1 311 11 is_stmt 1 view .LVU475
 311:pattern_edit.c ****             // search thru the buffer -forward- to find the EOP byte
 1557               		.loc 1 311 34 is_stmt 0 view .LVU476
 1558 06fe 8091 0000 		lds r24,curr_pattern_index
 311:pattern_edit.c ****             // search thru the buffer -forward- to find the EOP byte
 1559               		.loc 1 311 14 view .LVU477
 1560 0702 8111      		cpse r24,__zero_reg__
 1561 0704 00C0      		rjmp .L239
 1562               	.L83:
 313:pattern_edit.c ****                    (pattern_buff[curr_pattern_index] != END_OF_PATTERN))
 1563               		.loc 1 313 40 view .LVU478
 1564 0706 8091 0000 		lds r24,curr_pattern_index
 313:pattern_edit.c ****                    (pattern_buff[curr_pattern_index] != END_OF_PATTERN))
 1565               		.loc 1 313 19 view .LVU479
 1566 070a 8F30      		cpi r24,lo8(15)
 1567 070c 00F4      		brsh .L82
 314:pattern_edit.c ****               curr_pattern_index++;
 1568               		.loc 1 314 33 discriminator 1 view .LVU480
 1569 070e E091 0000 		lds r30,curr_pattern_index
 1570 0712 F0E0      		ldi r31,0
 1571 0714 E050      		subi r30,lo8(-(pattern_buff))
 1572 0716 F040      		sbci r31,hi8(-(pattern_buff))
 1573 0718 8081      		ld r24,Z
 313:pattern_edit.c ****                    (pattern_buff[curr_pattern_index] != END_OF_PATTERN))
 1574               		.loc 1 313 57 discriminator 1 view .LVU481
 1575 071a 8F3F      		cpi r24,lo8(-1)
 1576 071c 01F0      		breq .L82
 315:pattern_edit.c ****           } else {
 1577               		.loc 1 315 15 is_stmt 1 view .LVU482
 315:pattern_edit.c ****           } else {
 1578               		.loc 1 315 33 is_stmt 0 view .LVU483
 1579 071e 8091 0000 		lds r24,curr_pattern_index
 1580 0722 8F5F      		subi r24,lo8(-(1))
 1581 0724 8093 0000 		sts curr_pattern_index,r24
 1582 0728 00C0      		rjmp .L83
 1583               	.L239:
 317:pattern_edit.c ****           }
 1584               		.loc 1 317 13 is_stmt 1 view .LVU484
 317:pattern_edit.c ****           }
 1585               		.loc 1 317 31 is_stmt 0 view .LVU485
 1586 072a 8091 0000 		lds r24,curr_pattern_index
 1587 072e 8150      		subi r24,lo8(-(-1))
 1588 0730 00C0      		rjmp .L240
 1589               	.L86:
 333:pattern_edit.c ****           if (dirtyflag)
 1590               		.loc 1 333 11 is_stmt 1 view .LVU486
 1591 0732 80E0      		ldi r24,0
 1592 0734 0E94 0000 		call clear_led
 1593               	.LVL177:
 334:pattern_edit.c ****             set_led_blink(LED_DONE);
 1594               		.loc 1 334 11 view .LVU487
 334:pattern_edit.c ****             set_led_blink(LED_DONE);
 1595               		.loc 1 334 14 is_stmt 0 view .LVU488
 1596 0738 8091 0000 		lds r24,dirtyflag
 1597 073c 8823      		tst r24
 1598 073e 01F0      		breq .L87
 335:pattern_edit.c **** 
 1599               		.loc 1 335 13 is_stmt 1 view .LVU489
 1600 0740 80E0      		ldi r24,0
 1601 0742 0E94 0000 		call set_led_blink
 1602               	.LVL178:
 1603               	.L87:
 337:pattern_edit.c ****                   prev_note >> 7,          // slide
 1604               		.loc 1 337 11 view .LVU490
 339:pattern_edit.c **** 
 1605               		.loc 1 339 36 is_stmt 0 view .LVU491
 1606 0746 8091 0000 		lds r24,curr_note
 337:pattern_edit.c ****                   prev_note >> 7,          // slide
 1607               		.loc 1 337 11 view .LVU492
 1608 074a 86FB      		bst r24,6
 1609 074c 4427      		clr r20
 1610 074e 40F9      		bld r20,0
 1611 0750 6C2F      		mov r22,r28
 1612               	.L241:
 350:pattern_edit.c ****                   0,                       // no slide on first note
 1613               		.loc 1 350 11 view .LVU493
 1614 0752 8F73      		andi r24,lo8(63)
 1615 0754 0E94 0000 		call note_on
 1616               	.LVL179:
 354:pattern_edit.c ****         }
 1617               		.loc 1 354 11 is_stmt 1 view .LVU494
 1618 0758 8091 0000 		lds r24,curr_note
 1619 075c 0E94 0000 		call set_note_led
 1620               	.LVL180:
 1621 0760 00C0      		rjmp .L78
 1622               	.LBE6:
 1623               		.cfi_endproc
 1624               	.LFE1:
 1626               	.global	dirtyflag
 1627               		.section .bss
 1630               	dirtyflag:
 1631 0000 00        		.zero	1
 1632               		.comm	in_stepwrite_mode,1,1
 1633               		.comm	in_runwrite_mode,1,1
 1634               		.comm	pattern_buff,16,1
 1635               		.comm	patt_bank,1,1
 1636               		.comm	patt_location,1,1
 1637               		.comm	play_loaded_pattern,1,1
 1638               		.comm	curr_pattern_index,1,1
 1639               		.comm	note_counter,1,1
 1640               		.text
 1641               	.Letext0:
 1642               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 1643               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdio.h"
 1644               		.file 4 "led.h"
 1645               		.file 5 "synth.h"
 1646               		.file 6 "midi.h"
 1647               		.file 7 "eeprom.h"
 1648               		.file 8 "switch.h"
 1649               		.file 9 "delay.h"
 1650               		.file 10 "main.h"
 1651               		.file 11 "dinsync.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pattern_edit.c
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:4      *ABS*:000000000000003f __SREG__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:12     .text:0000000000000000 load_pattern
                            *COM*:0000000000000010 pattern_buff
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:1630   .bss:0000000000000000 dirtyflag
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:114    .text:000000000000005e write_pattern
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:205    .text:00000000000000b2 start_runwrite_mode
                            *COM*:0000000000000001 curr_pattern_index
                            *COM*:0000000000000001 in_runwrite_mode
                            *COM*:0000000000000001 note_counter
                            *COM*:0000000000000001 play_loaded_pattern
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:257    .text:00000000000000e8 stop_runwrite_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:304    .text:000000000000011a start_stepwrite_mode
                            *COM*:0000000000000001 in_stepwrite_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:336    .text:0000000000000136 stop_stepwrite_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//cczNxD8l.s:380    .text:0000000000000164 do_pattern_edit
                            *COM*:0000000000000001 patt_location
                            *COM*:0000000000000001 patt_bank

UNDEFINED SYMBOLS
clock_leds
spieeprom_read
clear_led_blink
spieeprom_write
set_led
note_off
sync
playing
midi_putchar
clear_key_leds
clear_bank_leds
clear_blinking_leds
bank
set_bank_led
clear_led
function
curr_note
turn_on_tempo
read_switches
clear_all_leds
turn_off_tempo
dinsync_stop
midi_stop
dinsync_set_out
set_numkey_led
get_lowest_numkey_pressed
clear_notekey_leds
just_pressed
random
midisync_clocked
do_tempo
just_released
midi_recv_cmd
putnum_uh
delay_ms
note_on
set_note_led
set_led_blink
clear_note_leds
__do_clear_bss
