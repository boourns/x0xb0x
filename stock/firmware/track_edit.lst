   1               		.file	"track_edit.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	get_pitchshift_from_patt
  12               	get_pitchshift_from_patt:
  13               	.LVL0:
  14               	.LFB2:
  15               		.file 1 "track_edit.c"
   1:track_edit.c  **** /*
   2:track_edit.c  ****  * The software for the x0xb0x is available for use in accordance with the
   3:track_edit.c  ****  * following open source license (MIT License). For more information about
   4:track_edit.c  ****  * OS licensing, please visit -> http://www.opensource.org/
   5:track_edit.c  ****  *
   6:track_edit.c  ****  * For more information about the x0xb0x project, please visit
   7:track_edit.c  ****  * -> http://www.ladyada.net/make/x0xb0x
   8:track_edit.c  ****  *
   9:track_edit.c  ****  *                                     *****
  10:track_edit.c  ****  * Copyright (c) 2005 Limor Fried
  11:track_edit.c  ****  *
  12:track_edit.c  ****  * Permission is hereby granted, free of charge, to any person obtaining a
  13:track_edit.c  ****  * copy of this software and associated documentation files (the "Software"),
  14:track_edit.c  ****  * to deal in the Software without restriction, including without limitation
  15:track_edit.c  ****  * the rights to use, copy, modify, merge, publish, distribute, sublicense,
  16:track_edit.c  ****  * and/or sell copies of the Software, and to permit persons to whom the
  17:track_edit.c  ****  * Software is furnished to do so, subject to the following conditions:
  18:track_edit.c  ****  *
  19:track_edit.c  ****  * The above copyright notice and this permission notice shall be included in
  20:track_edit.c  ****  * all copies or substantial portions of the Software.
  21:track_edit.c  ****  *
  22:track_edit.c  ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  23:track_edit.c  ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  24:track_edit.c  ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  25:track_edit.c  ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  26:track_edit.c  ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  27:track_edit.c  ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  28:track_edit.c  ****  * IN THE SOFTWARE.
  29:track_edit.c  ****  *                                     *****
  30:track_edit.c  ****  *
  31:track_edit.c  ****  */
  32:track_edit.c  **** 
  33:track_edit.c  **** #include <inttypes.h>
  34:track_edit.c  **** #include <stdio.h>
  35:track_edit.c  **** #include <avr/interrupt.h>
  36:track_edit.c  **** #include "track.h"
  37:track_edit.c  **** #include "pattern.h"
  38:track_edit.c  **** #include "switch.h"
  39:track_edit.c  **** #include "led.h"
  40:track_edit.c  **** #include "main.h"
  41:track_edit.c  **** #include "eeprom.h"
  42:track_edit.c  **** #include "synth.h"
  43:track_edit.c  **** #include "delay.h"
  44:track_edit.c  **** #include "midi.h"
  45:track_edit.c  **** #include "dinsync.h"
  46:track_edit.c  **** 
  47:track_edit.c  **** extern uint8_t function, bank;
  48:track_edit.c  **** 
  49:track_edit.c  **** volatile uint8_t curr_track_index;
  50:track_edit.c  **** uint8_t play_loaded_track;
  51:track_edit.c  **** uint16_t curr_patt;
  52:track_edit.c  **** uint8_t track_location, track_bank;
  53:track_edit.c  **** volatile uint16_t track_buff[TRACK_SIZE];
  54:track_edit.c  **** 
  55:track_edit.c  **** extern volatile uint8_t all_accent, all_slide, all_rest; // all the time
  56:track_edit.c  **** extern int8_t curr_pitch_shift;
  57:track_edit.c  **** 
  58:track_edit.c  **** extern uint8_t play_loaded_pattern, curr_pattern_index;
  59:track_edit.c  **** 
  60:track_edit.c  **** uint8_t in_stepwrite_mode, in_run_mode;
  61:track_edit.c  **** 
  62:track_edit.c  **** extern uint8_t sync;
  63:track_edit.c  **** 
  64:track_edit.c  **** extern volatile uint8_t curr_note;
  65:track_edit.c  **** extern volatile uint8_t note_counter;
  66:track_edit.c  **** 
  67:track_edit.c  **** void do_track_edit(void) {
  68:track_edit.c  ****   uint8_t i;
  69:track_edit.c  **** 
  70:track_edit.c  ****   turn_on_tempo();
  71:track_edit.c  **** 
  72:track_edit.c  ****   // initialize
  73:track_edit.c  ****   track_bank = bank % 8;
  74:track_edit.c  ****   track_location = 0;
  75:track_edit.c  **** 
  76:track_edit.c  ****   in_stepwrite_mode = FALSE;
  77:track_edit.c  ****   in_run_mode = FALSE;
  78:track_edit.c  ****   play_loaded_track = FALSE;
  79:track_edit.c  ****   play_loaded_pattern = FALSE;
  80:track_edit.c  ****   curr_track_index = 0;
  81:track_edit.c  ****   curr_patt = END_OF_TRACK;
  82:track_edit.c  ****   sync = INTERNAL_SYNC;
  83:track_edit.c  **** 
  84:track_edit.c  ****   clear_bank_leds();
  85:track_edit.c  ****   clear_blinking_leds();
  86:track_edit.c  **** 
  87:track_edit.c  ****   while (1) {
  88:track_edit.c  ****     read_switches();
  89:track_edit.c  **** 
  90:track_edit.c  ****     // oops i guess they want something else, return!
  91:track_edit.c  ****     if (function != EDIT_TRACK_FUNC) {
  92:track_edit.c  ****       // stop playing any notes
  93:track_edit.c  ****       turn_off_tempo();
  94:track_edit.c  ****       play_loaded_track = play_loaded_pattern = 0;
  95:track_edit.c  **** 
  96:track_edit.c  ****       // turn off notes playing
  97:track_edit.c  ****       note_off(0);
  98:track_edit.c  **** 
  99:track_edit.c  ****       // clear the LEDs
 100:track_edit.c  ****       clear_all_leds();
 101:track_edit.c  ****       clock_leds();
 102:track_edit.c  **** 
 103:track_edit.c  ****       return;
 104:track_edit.c  ****     }
 105:track_edit.c  **** 
 106:track_edit.c  ****     // this is when they select which bank (1-8)& position(1-8)
 107:track_edit.c  ****     // for the track to edit
 108:track_edit.c  ****     if (!in_stepwrite_mode && !in_run_mode) {
 109:track_edit.c  ****       if (has_bank_knob_changed()) {
 110:track_edit.c  ****         // putstring("changed track bank\n\r");
 111:track_edit.c  ****         track_bank = bank % 8;
 112:track_edit.c  ****         load_track(track_bank, track_location);
 113:track_edit.c  ****         clear_bank_leds(); // track changed, clear the prev indicator
 114:track_edit.c  ****       }
 115:track_edit.c  ****       set_bank_led(track_bank); // show the track being edited
 116:track_edit.c  **** 
 117:track_edit.c  ****       i = get_lowest_numkey_pressed();
 118:track_edit.c  ****       if (i != 0) {
 119:track_edit.c  ****         clear_notekey_leds();
 120:track_edit.c  ****         track_location = i - 1;
 121:track_edit.c  ****         load_track(track_bank, track_location);
 122:track_edit.c  ****       }
 123:track_edit.c  ****       set_numkey_led(track_location + 1);
 124:track_edit.c  ****     }
 125:track_edit.c  **** 
 126:track_edit.c  ****     // if they hit run/stop, play the track in
 127:track_edit.c  ****     if (just_pressed(KEY_RS)) {
 128:track_edit.c  ****       if (in_run_mode) {
 129:track_edit.c  ****         stop_track_run_mode(); // stop run mode
 130:track_edit.c  ****       } else {
 131:track_edit.c  ****         // stop stepwrite mode
 132:track_edit.c  ****         if (in_stepwrite_mode) {
 133:track_edit.c  ****           stop_track_stepwrite_mode();
 134:track_edit.c  ****         }
 135:track_edit.c  ****         start_track_run_mode();
 136:track_edit.c  ****       }
 137:track_edit.c  ****     }
 138:track_edit.c  **** 
 139:track_edit.c  ****     // do common stuff for both run and stepwritemode
 140:track_edit.c  ****     // ie. blink the bank led for the track index
 141:track_edit.c  ****     // show the current pattern's bank in the bank leds
 142:track_edit.c  ****     // show RAS leds, or DONE if end of track
 143:track_edit.c  ****     if (in_run_mode || in_stepwrite_mode) {
 144:track_edit.c  ****       // show the current position in the edited track
 145:track_edit.c  ****       if (!is_bank_led_blink(curr_track_index))
 146:track_edit.c  ****         clear_blinking_leds();
 147:track_edit.c  ****       set_bank_led_blink(curr_track_index);
 148:track_edit.c  **** 
 149:track_edit.c  ****       if (curr_patt == END_OF_TRACK) {
 150:track_edit.c  ****         clear_note_leds();
 151:track_edit.c  ****         // the 'end of track' (0xFFFF) lights up DONE
 152:track_edit.c  ****         set_led(LED_DONE);
 153:track_edit.c  ****       } else {
 154:track_edit.c  ****         clear_led(LED_DONE); // make sure DONE isn't on anymore
 155:track_edit.c  ****         set_bank_led((curr_patt >> 3) &
 156:track_edit.c  ****                      0xF); // show the bank of the current pattern
 157:track_edit.c  **** 
 158:track_edit.c  ****         // show RAS
 159:track_edit.c  ****         if (curr_patt & TRACK_REST_FLAG)
 160:track_edit.c  ****           set_led(LED_REST);
 161:track_edit.c  ****         else
 162:track_edit.c  ****           clear_led(LED_REST);
 163:track_edit.c  **** 
 164:track_edit.c  ****         if (curr_patt & TRACK_ACCENT_FLAG)
 165:track_edit.c  ****           set_led(LED_ACCENT);
 166:track_edit.c  ****         else
 167:track_edit.c  ****           clear_led(LED_ACCENT);
 168:track_edit.c  **** 
 169:track_edit.c  ****         if (curr_patt & TRACK_SLIDE_FLAG)
 170:track_edit.c  ****           set_led(LED_SLIDE);
 171:track_edit.c  ****         else
 172:track_edit.c  ****           clear_led(LED_SLIDE);
 173:track_edit.c  ****       }
 174:track_edit.c  ****     }
 175:track_edit.c  **** 
 176:track_edit.c  ****     // handle both incrementing/decrementing the track index in stepwrite
 177:track_edit.c  ****     // as well as starting stepwrite
 178:track_edit.c  ****     if ((just_pressed(KEY_NEXT) || just_pressed(KEY_PREV)) && !in_run_mode) {
 179:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 180:track_edit.c  **** 
 181:track_edit.c  ****       if (in_stepwrite_mode) {
 182:track_edit.c  ****         if (just_pressed(KEY_NEXT)) {
 183:track_edit.c  ****           // step forward in the track
 184:track_edit.c  ****           if (((curr_track_index + 1) >= TRACK_SIZE) ||
 185:track_edit.c  ****               (track_buff[curr_track_index] == END_OF_TRACK))
 186:track_edit.c  ****             curr_track_index =
 187:track_edit.c  ****                 0; // got to the end of the track, loop back to beginning
 188:track_edit.c  ****           else
 189:track_edit.c  ****             curr_track_index++;
 190:track_edit.c  ****         } else { // just pressed key prev
 191:track_edit.c  ****           // step backwards in the track
 192:track_edit.c  ****           if (curr_track_index == 0) {
 193:track_edit.c  ****             // search thru the buffer -forward- to find the EOT
 194:track_edit.c  ****             while ((curr_track_index + 1 < TRACK_SIZE) &&
 195:track_edit.c  ****                    (track_buff[curr_track_index] != END_OF_TRACK))
 196:track_edit.c  ****               curr_track_index++;
 197:track_edit.c  ****           } else {
 198:track_edit.c  ****             curr_track_index--;
 199:track_edit.c  ****           }
 200:track_edit.c  ****         }
 201:track_edit.c  ****       } else if (just_pressed(KEY_NEXT)) {
 202:track_edit.c  ****         // not in stepwrite mode, starting stepwrite mode
 203:track_edit.c  ****         start_track_stepwrite_mode();
 204:track_edit.c  ****         curr_track_index = 0;
 205:track_edit.c  ****       }
 206:track_edit.c  **** 
 207:track_edit.c  ****       // grab the current pattern in the track
 208:track_edit.c  ****       curr_patt = track_buff[curr_track_index];
 209:track_edit.c  **** 
 210:track_edit.c  ****       play_loaded_pattern = FALSE;
 211:track_edit.c  **** 
 212:track_edit.c  ****       if (curr_patt != END_OF_TRACK) {
 213:track_edit.c  ****         /*
 214:track_edit.c  ****           putstring("curr patt = loc "); putnum_ud(curr_patt & 0x7);
 215:track_edit.c  ****           putstring(" in bank "); putnum_ud(curr_patt>>3 & 0xF);
 216:track_edit.c  ****           putstring("\n\r");
 217:track_edit.c  ****         */
 218:track_edit.c  **** 
 219:track_edit.c  ****         // get the pattern's RAS & pitch shift
 220:track_edit.c  ****         curr_pitch_shift = load_curr_patt();
 221:track_edit.c  **** 
 222:track_edit.c  ****         // start playing from beginning of pattern
 223:track_edit.c  ****         curr_pattern_index = 0;
 224:track_edit.c  ****         // wait for the next 'note on'
 225:track_edit.c  ****         while (note_counter & 0x1)
 226:track_edit.c  ****           ;
 227:track_edit.c  **** 
 228:track_edit.c  ****         // tell the tempo interrupt to start playing the pattern on loop
 229:track_edit.c  ****         play_loaded_pattern = TRUE;
 230:track_edit.c  ****       }
 231:track_edit.c  ****     }
 232:track_edit.c  **** 
 233:track_edit.c  ****     // cope with saving the current buffer and quitting step mode if in it
 234:track_edit.c  ****     if (just_pressed(KEY_DONE)) {
 235:track_edit.c  ****       if (in_stepwrite_mode) {
 236:track_edit.c  ****         if (curr_track_index + 1 < TRACK_SIZE) {
 237:track_edit.c  ****           // set an EOT marker if necc.
 238:track_edit.c  ****           track_buff[curr_track_index + 1] = END_OF_TRACK;
 239:track_edit.c  ****         }
 240:track_edit.c  ****         curr_patt = END_OF_TRACK; // cleans up LEDs
 241:track_edit.c  ****         // stop the mode, and any playing
 242:track_edit.c  ****         stop_track_stepwrite_mode();
 243:track_edit.c  ****         clear_led(LED_DONE);
 244:track_edit.c  ****       }
 245:track_edit.c  ****       // and write it to memory
 246:track_edit.c  ****       write_track(track_bank, track_location);
 247:track_edit.c  ****     }
 248:track_edit.c  **** 
 249:track_edit.c  ****     // deal with specifics for stepwrite mode:
 250:track_edit.c  ****     // changing the track's patterns, RAS and pitchshift changes
 251:track_edit.c  ****     if (in_stepwrite_mode) {
 252:track_edit.c  ****       if (curr_patt != END_OF_TRACK) {
 253:track_edit.c  ****         // handle RAS keypresses -> modifications to current pattern
 254:track_edit.c  **** 
 255:track_edit.c  ****         if (just_pressed(KEY_REST)) {
 256:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_REST_FLAG);
 257:track_edit.c  ****           all_rest = (curr_patt & TRACK_REST_FLAG) >> 8;
 258:track_edit.c  ****         }
 259:track_edit.c  ****         if (just_pressed(KEY_ACCENT)) {
 260:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_ACCENT_FLAG);
 261:track_edit.c  ****           all_accent = (curr_patt & TRACK_ACCENT_FLAG) >> 8;
 262:track_edit.c  ****         }
 263:track_edit.c  ****         if (just_pressed(KEY_SLIDE)) {
 264:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_SLIDE_FLAG);
 265:track_edit.c  ****           all_slide = (curr_patt & TRACK_SLIDE_FLAG) >> 8;
 266:track_edit.c  ****         }
 267:track_edit.c  **** 
 268:track_edit.c  ****         // handle U/D keypresses -> pitch shifting
 269:track_edit.c  ****         if (is_pressed(KEY_UP) || is_pressed(KEY_DOWN)) {
 270:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 271:track_edit.c  **** 
 272:track_edit.c  ****           if (just_pressed(KEY_UP) || just_pressed(KEY_DOWN)) {
 273:track_edit.c  ****             clear_blinking_leds();
 274:track_edit.c  ****             clear_notekey_leds();
 275:track_edit.c  ****             clear_led(LED_UP);
 276:track_edit.c  ****             clear_led(LED_DOWN);
 277:track_edit.c  ****           }
 278:track_edit.c  **** 
 279:track_edit.c  ****           if (is_pressed(KEY_UP)) {
 280:track_edit.c  ****             set_led(LED_UP);
 281:track_edit.c  **** 
 282:track_edit.c  ****             if (notekey != -1) {
 283:track_edit.c  ****               clear_blinking_leds();
 284:track_edit.c  ****               // set the new pitchshift
 285:track_edit.c  ****               curr_patt = (curr_patt & 0xE0FF) | (notekey << 8);
 286:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 287:track_edit.c  ****             }
 288:track_edit.c  ****             // display the pitchshift
 289:track_edit.c  ****             curr_pitch_shift = get_pitchshift_from_patt(curr_patt);
 290:track_edit.c  ****             set_notekey_led_blink(curr_pitch_shift);
 291:track_edit.c  ****           } else if (is_pressed(KEY_DOWN)) {
 292:track_edit.c  ****             set_led(LED_DOWN);
 293:track_edit.c  **** 
 294:track_edit.c  ****             if (notekey != -1) {
 295:track_edit.c  ****               clear_blinking_leds();
 296:track_edit.c  ****               // set the new pitchshift
 297:track_edit.c  ****               curr_patt =
 298:track_edit.c  ****                   (curr_patt & 0xE0FF) | (((notekey - OCTAVE) & 0x1F) << 8);
 299:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 300:track_edit.c  ****             }
 301:track_edit.c  **** 
 302:track_edit.c  ****             curr_pitch_shift = get_pitchshift_from_patt(curr_patt);
 303:track_edit.c  ****             set_notekey_led_blink(OCTAVE + curr_pitch_shift);
 304:track_edit.c  ****           }
 305:track_edit.c  ****         } else {
 306:track_edit.c  ****           if (just_released(KEY_UP) || just_released(KEY_DOWN)) {
 307:track_edit.c  ****             // clear up LEDs if not shifting
 308:track_edit.c  ****             clear_led(LED_UP);
 309:track_edit.c  ****             clear_led(LED_DOWN);
 310:track_edit.c  ****             clear_blinking_leds();
 311:track_edit.c  ****           }
 312:track_edit.c  ****         }
 313:track_edit.c  ****       }
 314:track_edit.c  **** 
 315:track_edit.c  ****       // see if they changed the bank / pressed numkey
 316:track_edit.c  ****       //    -> change current pattern
 317:track_edit.c  ****       if (!(is_pressed(KEY_UP) || is_pressed(KEY_DOWN))) {
 318:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 319:track_edit.c  ****         if ((i != 0) || has_bank_knob_changed()) {
 320:track_edit.c  ****           clear_numkey_leds();
 321:track_edit.c  ****           clear_bank_leds();
 322:track_edit.c  ****           if (i == 0) {
 323:track_edit.c  ****             if (curr_patt == END_OF_TRACK)
 324:track_edit.c  ****               i = 0;
 325:track_edit.c  ****             else
 326:track_edit.c  ****               i = curr_patt & 0x7;
 327:track_edit.c  ****           } else {
 328:track_edit.c  ****             i--;
 329:track_edit.c  ****           }
 330:track_edit.c  ****           play_loaded_pattern = FALSE;
 331:track_edit.c  ****           note_off(0);
 332:track_edit.c  ****           curr_patt = (bank << 3) | i;
 333:track_edit.c  ****           track_buff[curr_track_index] = curr_patt;
 334:track_edit.c  ****           load_pattern(bank, i);
 335:track_edit.c  ****           curr_pattern_index = 0;
 336:track_edit.c  ****           all_rest = all_accent = all_slide = FALSE;
 337:track_edit.c  ****           curr_pitch_shift = 0;
 338:track_edit.c  ****           play_loaded_pattern = TRUE;
 339:track_edit.c  ****         }
 340:track_edit.c  **** 
 341:track_edit.c  ****         // while we're at it, show the pitch shift
 342:track_edit.c  ****         display_curr_pitch_shift_ud();
 343:track_edit.c  **** 
 344:track_edit.c  ****         // show the pattern location and pattern bank
 345:track_edit.c  ****         set_single_numkey_led((curr_patt & 0x7) + 1);
 346:track_edit.c  ****       }
 347:track_edit.c  ****     }
 348:track_edit.c  **** 
 349:track_edit.c  ****     if (in_run_mode) {
 350:track_edit.c  ****       // while we're at it, show the pitch shift
 351:track_edit.c  ****       display_curr_pitch_shift_ud();
 352:track_edit.c  **** 
 353:track_edit.c  ****       // show the pattern location and pattern bank
 354:track_edit.c  ****       set_single_numkey_led((curr_patt & 0x7) + 1);
 355:track_edit.c  ****     }
 356:track_edit.c  ****   }
 357:track_edit.c  **** }
 358:track_edit.c  **** 
 359:track_edit.c  **** int8_t get_pitchshift_from_patt(uint16_t patt) {
  16               		.loc 1 359 48 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 360:track_edit.c  ****   int8_t shift;
  22               		.loc 1 360 3 view .LVU1
 361:track_edit.c  **** 
 362:track_edit.c  ****   shift = (patt >> 8) & 0x1F;
  23               		.loc 1 362 3 view .LVU2
  24               		.loc 1 362 9 is_stmt 0 view .LVU3
  25 0000 892F      		mov r24,r25
  26               	.LVL1:
  27               		.loc 1 362 9 view .LVU4
  28 0002 8F71      		andi r24,lo8(31)
  29               	.LVL2:
 363:track_edit.c  ****   if (shift & 0x10)
  30               		.loc 1 363 3 is_stmt 1 view .LVU5
  31               		.loc 1 363 6 is_stmt 0 view .LVU6
  32 0004 94FD      		sbrc r25,4
 364:track_edit.c  ****     shift |= 0xE0; // extend signed 5-bit int
  33               		.loc 1 364 5 is_stmt 1 view .LVU7
  34               		.loc 1 364 11 is_stmt 0 view .LVU8
  35 0006 806E      		ori r24,lo8(-32)
  36               	.LVL3:
 365:track_edit.c  **** 
 366:track_edit.c  ****   return shift;
  37               		.loc 1 366 3 is_stmt 1 view .LVU9
  38               	.L1:
  39               	/* epilogue start */
 367:track_edit.c  **** }
  40               		.loc 1 367 1 is_stmt 0 view .LVU10
  41 0008 0895      		ret
  42               		.cfi_endproc
  43               	.LFE2:
  45               	.global	display_curr_pitch_shift_ud
  47               	display_curr_pitch_shift_ud:
  48               	.LFB3:
 368:track_edit.c  **** void display_curr_pitch_shift_ud(void) {
  49               		.loc 1 368 40 is_stmt 1 view -0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
 369:track_edit.c  ****   if (curr_pitch_shift == 0) {
  55               		.loc 1 369 3 view .LVU12
  56               		.loc 1 369 24 is_stmt 0 view .LVU13
  57 000a 8091 0000 		lds r24,curr_pitch_shift
  58               		.loc 1 369 6 view .LVU14
  59 000e 8111      		cpse r24,__zero_reg__
  60 0010 00C0      		rjmp .L7
 370:track_edit.c  ****     clear_led(LED_UP);
  61               		.loc 1 370 5 is_stmt 1 view .LVU15
  62 0012 83E0      		ldi r24,lo8(3)
  63 0014 0E94 0000 		call clear_led
  64               	.LVL4:
 371:track_edit.c  ****     clear_led(LED_DOWN);
  65               		.loc 1 371 5 view .LVU16
  66               	.L9:
 372:track_edit.c  ****   } else if (curr_pitch_shift < 0) {
 373:track_edit.c  ****     clear_led(LED_UP);
 374:track_edit.c  ****     set_led(LED_DOWN);
 375:track_edit.c  ****   } else {
 376:track_edit.c  ****     set_led(LED_UP);
 377:track_edit.c  ****     clear_led(LED_DOWN);
  67               		.loc 1 377 5 view .LVU17
  68 0018 84E0      		ldi r24,lo8(4)
  69 001a 0C94 0000 		jmp clear_led
  70               	.LVL5:
  71               	.L7:
 372:track_edit.c  ****   } else if (curr_pitch_shift < 0) {
  72               		.loc 1 372 10 view .LVU18
 372:track_edit.c  ****   } else if (curr_pitch_shift < 0) {
  73               		.loc 1 372 13 is_stmt 0 view .LVU19
  74 001e 87FF      		sbrs r24,7
  75 0020 00C0      		rjmp .L8
  76               	.LBB4:
  77               	.LBI4:
 368:track_edit.c  ****   if (curr_pitch_shift == 0) {
  78               		.loc 1 368 6 is_stmt 1 view .LVU20
  79               	.LBB5:
 373:track_edit.c  ****     set_led(LED_DOWN);
  80               		.loc 1 373 5 view .LVU21
  81 0022 83E0      		ldi r24,lo8(3)
  82 0024 0E94 0000 		call clear_led
  83               	.LVL6:
 374:track_edit.c  ****   } else {
  84               		.loc 1 374 5 view .LVU22
  85 0028 84E0      		ldi r24,lo8(4)
  86 002a 0C94 0000 		jmp set_led
  87               	.LVL7:
  88               	.L8:
  89               	.LBE5:
  90               	.LBE4:
 376:track_edit.c  ****     clear_led(LED_DOWN);
  91               		.loc 1 376 5 view .LVU23
  92 002e 83E0      		ldi r24,lo8(3)
  93 0030 0E94 0000 		call set_led
  94               	.LVL8:
  95 0034 00C0      		rjmp .L9
  96               		.cfi_endproc
  97               	.LFE3:
  99               	.global	start_track_stepwrite_mode
 101               	start_track_stepwrite_mode:
 102               	.LFB4:
 378:track_edit.c  ****   }
 379:track_edit.c  **** }
 380:track_edit.c  **** 
 381:track_edit.c  **** void start_track_stepwrite_mode(void) {
 103               		.loc 1 381 39 view -0
 104               		.cfi_startproc
 105               	/* prologue: function */
 106               	/* frame size = 0 */
 107               	/* stack size = 0 */
 108               	.L__stack_usage = 0
 382:track_edit.c  ****   in_stepwrite_mode = TRUE;
 109               		.loc 1 382 3 view .LVU25
 110               		.loc 1 382 21 is_stmt 0 view .LVU26
 111 0036 81E0      		ldi r24,lo8(1)
 112 0038 8093 0000 		sts in_stepwrite_mode,r24
 383:track_edit.c  ****   set_led(LED_NEXT);
 113               		.loc 1 383 3 is_stmt 1 view .LVU27
 114 003c 84E2      		ldi r24,lo8(36)
 115 003e 0E94 0000 		call set_led
 116               	.LVL9:
 384:track_edit.c  ****   clear_bank_leds();
 117               		.loc 1 384 3 view .LVU28
 118 0042 0C94 0000 		jmp clear_bank_leds
 119               	.LVL10:
 120               		.cfi_endproc
 121               	.LFE4:
 123               	.global	stop_track_stepwrite_mode
 125               	stop_track_stepwrite_mode:
 126               	.LFB5:
 385:track_edit.c  **** }
 386:track_edit.c  **** 
 387:track_edit.c  **** void stop_track_stepwrite_mode(void) {
 127               		.loc 1 387 38 view -0
 128               		.cfi_startproc
 129               	/* prologue: function */
 130               	/* frame size = 0 */
 131               	/* stack size = 0 */
 132               	.L__stack_usage = 0
 388:track_edit.c  ****   in_stepwrite_mode = FALSE;
 133               		.loc 1 388 3 view .LVU30
 134               		.loc 1 388 21 is_stmt 0 view .LVU31
 135 0046 1092 0000 		sts in_stepwrite_mode,__zero_reg__
 389:track_edit.c  ****   clear_led(LED_NEXT);
 136               		.loc 1 389 3 is_stmt 1 view .LVU32
 137 004a 84E2      		ldi r24,lo8(36)
 138 004c 0E94 0000 		call clear_led
 139               	.LVL11:
 390:track_edit.c  ****   clear_all_leds();
 140               		.loc 1 390 3 view .LVU33
 141 0050 0E94 0000 		call clear_all_leds
 142               	.LVL12:
 391:track_edit.c  ****   clear_blinking_leds();
 143               		.loc 1 391 3 view .LVU34
 144 0054 0E94 0000 		call clear_blinking_leds
 145               	.LVL13:
 392:track_edit.c  ****   play_loaded_pattern = FALSE;
 146               		.loc 1 392 3 view .LVU35
 147               		.loc 1 392 23 is_stmt 0 view .LVU36
 148 0058 1092 0000 		sts play_loaded_pattern,__zero_reg__
 393:track_edit.c  ****   note_off(0);
 149               		.loc 1 393 3 is_stmt 1 view .LVU37
 150 005c 80E0      		ldi r24,0
 151 005e 0C94 0000 		jmp note_off
 152               	.LVL14:
 153               		.cfi_endproc
 154               	.LFE5:
 156               	.global	load_curr_patt
 158               	load_curr_patt:
 159               	.LFB7:
 394:track_edit.c  **** }
 395:track_edit.c  **** 
 396:track_edit.c  **** void start_track_run_mode(void) {
 397:track_edit.c  ****   in_run_mode = TRUE;
 398:track_edit.c  ****   set_led(LED_RS);
 399:track_edit.c  ****   all_rest = all_slide = all_accent = FALSE;
 400:track_edit.c  **** 
 401:track_edit.c  ****   play_loaded_pattern = play_loaded_track = FALSE;
 402:track_edit.c  **** 
 403:track_edit.c  ****   // theres a little bit of setup to get the track buffer playing
 404:track_edit.c  ****   curr_patt = track_buff[0];
 405:track_edit.c  ****   if (curr_patt != END_OF_TRACK) { // clearly, dont play the track if there aint
 406:track_edit.c  ****                                    // no data in it
 407:track_edit.c  **** 
 408:track_edit.c  ****     // begin at the first pattern, first note
 409:track_edit.c  ****     curr_track_index = 0;
 410:track_edit.c  ****     curr_pattern_index = 0;
 411:track_edit.c  ****     curr_note = REST; // make it a rest just to avoid sliding
 412:track_edit.c  **** 
 413:track_edit.c  ****     // load the first pattern
 414:track_edit.c  ****     curr_pitch_shift = load_curr_patt();
 415:track_edit.c  **** 
 416:track_edit.c  ****     // wait for the tempo interrupt to be ready for a note-on
 417:track_edit.c  ****     while (note_counter & 0x1)
 418:track_edit.c  ****       ;
 419:track_edit.c  **** 
 420:track_edit.c  ****     // get the tempo interrupt to start playing
 421:track_edit.c  ****     play_loaded_track = TRUE;
 422:track_edit.c  ****     // putstring("\n\raccent = ");putnum_ud(all_accent);
 423:track_edit.c  ****   }
 424:track_edit.c  ****   clear_bank_leds();
 425:track_edit.c  **** }
 426:track_edit.c  **** 
 427:track_edit.c  **** // a shortcut function...this code is duplicated a bunch of places.
 428:track_edit.c  **** // this just saves codespace
 429:track_edit.c  **** uint8_t load_curr_patt(void) {
 160               		.loc 1 429 30 view -0
 161               		.cfi_startproc
 162               	/* prologue: function */
 163               	/* frame size = 0 */
 164               	/* stack size = 0 */
 165               	.L__stack_usage = 0
 430:track_edit.c  ****   // load the pattern from EEPROM
 431:track_edit.c  ****   load_pattern((curr_patt >> 3) & 0xF, curr_patt & 0x7);
 166               		.loc 1 431 3 view .LVU39
 167 0062 8091 0000 		lds r24,curr_patt
 168 0066 9091 0000 		lds r25,curr_patt+1
 169 006a 682F      		mov r22,r24
 170 006c 6770      		andi r22,lo8(7)
 171               		.loc 1 431 27 is_stmt 0 view .LVU40
 172 006e 23E0      		ldi r18,3
 173               		1:
 174 0070 9695      		lsr r25
 175 0072 8795      		ror r24
 176 0074 2A95      		dec r18
 177 0076 01F4      		brne 1b
 178               		.loc 1 431 3 view .LVU41
 179 0078 8F70      		andi r24,lo8(15)
 180 007a 0E94 0000 		call load_pattern
 181               	.LVL15:
 432:track_edit.c  **** 
 433:track_edit.c  ****   // get the pattern's RAS & pitch shift
 434:track_edit.c  ****   all_rest = (curr_patt & TRACK_REST_FLAG) >> 8;
 182               		.loc 1 434 3 is_stmt 1 view .LVU42
 183               		.loc 1 434 44 is_stmt 0 view .LVU43
 184 007e 8091 0000 		lds r24,curr_patt
 185 0082 9091 0000 		lds r25,curr_patt+1
 186 0086 AC01      		movw r20,r24
 187 0088 252F      		mov r18,r21
 188 008a 2078      		andi r18,lo8(-128)
 189               		.loc 1 434 12 view .LVU44
 190 008c 2093 0000 		sts all_rest,r18
 435:track_edit.c  ****   all_accent = (curr_patt & TRACK_ACCENT_FLAG) >> 8;
 191               		.loc 1 435 3 is_stmt 1 view .LVU45
 192               		.loc 1 435 48 is_stmt 0 view .LVU46
 193 0090 252F      		mov r18,r21
 194 0092 2074      		andi r18,lo8(64)
 195               		.loc 1 435 14 view .LVU47
 196 0094 2093 0000 		sts all_accent,r18
 436:track_edit.c  ****   all_slide = (curr_patt & TRACK_SLIDE_FLAG) >> 8;
 197               		.loc 1 436 3 is_stmt 1 view .LVU48
 198               		.loc 1 436 46 is_stmt 0 view .LVU49
 199 0098 252F      		mov r18,r21
 200 009a 2072      		andi r18,lo8(32)
 201               		.loc 1 436 13 view .LVU50
 202 009c 2093 0000 		sts all_slide,r18
 437:track_edit.c  ****   curr_pattern_index = 0;
 203               		.loc 1 437 3 is_stmt 1 view .LVU51
 204               		.loc 1 437 22 is_stmt 0 view .LVU52
 205 00a0 1092 0000 		sts curr_pattern_index,__zero_reg__
 438:track_edit.c  **** 
 439:track_edit.c  ****   return get_pitchshift_from_patt(curr_patt);
 206               		.loc 1 439 3 is_stmt 1 view .LVU53
 207               		.loc 1 439 10 is_stmt 0 view .LVU54
 208 00a4 0C94 0000 		jmp get_pitchshift_from_patt
 209               	.LVL16:
 210               		.cfi_endproc
 211               	.LFE7:
 213               	.global	start_track_run_mode
 215               	start_track_run_mode:
 216               	.LFB6:
 396:track_edit.c  ****   in_run_mode = TRUE;
 217               		.loc 1 396 33 is_stmt 1 view -0
 218               		.cfi_startproc
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
 397:track_edit.c  ****   set_led(LED_RS);
 223               		.loc 1 397 3 view .LVU56
 397:track_edit.c  ****   set_led(LED_RS);
 224               		.loc 1 397 15 is_stmt 0 view .LVU57
 225 00a8 81E0      		ldi r24,lo8(1)
 226 00aa 8093 0000 		sts in_run_mode,r24
 398:track_edit.c  ****   all_rest = all_slide = all_accent = FALSE;
 227               		.loc 1 398 3 is_stmt 1 view .LVU58
 228 00ae 81E2      		ldi r24,lo8(33)
 229 00b0 0E94 0000 		call set_led
 230               	.LVL17:
 399:track_edit.c  **** 
 231               		.loc 1 399 3 view .LVU59
 399:track_edit.c  **** 
 232               		.loc 1 399 37 is_stmt 0 view .LVU60
 233 00b4 1092 0000 		sts all_accent,__zero_reg__
 399:track_edit.c  **** 
 234               		.loc 1 399 24 view .LVU61
 235 00b8 1092 0000 		sts all_slide,__zero_reg__
 399:track_edit.c  **** 
 236               		.loc 1 399 12 view .LVU62
 237 00bc 1092 0000 		sts all_rest,__zero_reg__
 401:track_edit.c  **** 
 238               		.loc 1 401 3 is_stmt 1 view .LVU63
 401:track_edit.c  **** 
 239               		.loc 1 401 43 is_stmt 0 view .LVU64
 240 00c0 1092 0000 		sts play_loaded_track,__zero_reg__
 401:track_edit.c  **** 
 241               		.loc 1 401 23 view .LVU65
 242 00c4 1092 0000 		sts play_loaded_pattern,__zero_reg__
 404:track_edit.c  ****   if (curr_patt != END_OF_TRACK) { // clearly, dont play the track if there aint
 243               		.loc 1 404 3 is_stmt 1 view .LVU66
 404:track_edit.c  ****   if (curr_patt != END_OF_TRACK) { // clearly, dont play the track if there aint
 244               		.loc 1 404 25 is_stmt 0 view .LVU67
 245 00c8 8091 0000 		lds r24,track_buff
 246 00cc 9091 0000 		lds r25,track_buff+1
 404:track_edit.c  ****   if (curr_patt != END_OF_TRACK) { // clearly, dont play the track if there aint
 247               		.loc 1 404 13 view .LVU68
 248 00d0 9093 0000 		sts curr_patt+1,r25
 249 00d4 8093 0000 		sts curr_patt,r24
 405:track_edit.c  ****                                    // no data in it
 250               		.loc 1 405 3 is_stmt 1 view .LVU69
 405:track_edit.c  ****                                    // no data in it
 251               		.loc 1 405 6 is_stmt 0 view .LVU70
 252 00d8 0196      		adiw r24,1
 253 00da 01F0      		breq .L14
 409:track_edit.c  ****     curr_pattern_index = 0;
 254               		.loc 1 409 5 is_stmt 1 view .LVU71
 409:track_edit.c  ****     curr_pattern_index = 0;
 255               		.loc 1 409 22 is_stmt 0 view .LVU72
 256 00dc 1092 0000 		sts curr_track_index,__zero_reg__
 410:track_edit.c  ****     curr_note = REST; // make it a rest just to avoid sliding
 257               		.loc 1 410 5 is_stmt 1 view .LVU73
 410:track_edit.c  ****     curr_note = REST; // make it a rest just to avoid sliding
 258               		.loc 1 410 24 is_stmt 0 view .LVU74
 259 00e0 1092 0000 		sts curr_pattern_index,__zero_reg__
 411:track_edit.c  **** 
 260               		.loc 1 411 5 is_stmt 1 view .LVU75
 411:track_edit.c  **** 
 261               		.loc 1 411 15 is_stmt 0 view .LVU76
 262 00e4 1092 0000 		sts curr_note,__zero_reg__
 414:track_edit.c  **** 
 263               		.loc 1 414 5 is_stmt 1 view .LVU77
 414:track_edit.c  **** 
 264               		.loc 1 414 24 is_stmt 0 view .LVU78
 265 00e8 0E94 0000 		call load_curr_patt
 266               	.LVL18:
 414:track_edit.c  **** 
 267               		.loc 1 414 22 view .LVU79
 268 00ec 8093 0000 		sts curr_pitch_shift,r24
 417:track_edit.c  ****       ;
 269               		.loc 1 417 5 is_stmt 1 view .LVU80
 270               	.L15:
 418:track_edit.c  **** 
 271               		.loc 1 418 7 discriminator 1 view .LVU81
 417:track_edit.c  ****       ;
 272               		.loc 1 417 25 is_stmt 0 discriminator 1 view .LVU82
 273 00f0 8091 0000 		lds r24,note_counter
 417:track_edit.c  ****       ;
 274               		.loc 1 417 11 discriminator 1 view .LVU83
 275 00f4 80FD      		sbrc r24,0
 276 00f6 00C0      		rjmp .L15
 421:track_edit.c  ****     // putstring("\n\raccent = ");putnum_ud(all_accent);
 277               		.loc 1 421 5 is_stmt 1 view .LVU84
 421:track_edit.c  ****     // putstring("\n\raccent = ");putnum_ud(all_accent);
 278               		.loc 1 421 23 is_stmt 0 view .LVU85
 279 00f8 81E0      		ldi r24,lo8(1)
 280 00fa 8093 0000 		sts play_loaded_track,r24
 281               	.L14:
 424:track_edit.c  **** }
 282               		.loc 1 424 3 is_stmt 1 view .LVU86
 283 00fe 0C94 0000 		jmp clear_bank_leds
 284               	.LVL19:
 285               		.cfi_endproc
 286               	.LFE6:
 288               	.global	stop_track_run_mode
 290               	stop_track_run_mode:
 291               	.LFB8:
 440:track_edit.c  **** }
 441:track_edit.c  **** 
 442:track_edit.c  **** void stop_track_run_mode(void) {
 292               		.loc 1 442 32 view -0
 293               		.cfi_startproc
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 296               	/* stack size = 0 */
 297               	.L__stack_usage = 0
 443:track_edit.c  ****   in_run_mode = FALSE;
 298               		.loc 1 443 3 view .LVU88
 299               		.loc 1 443 15 is_stmt 0 view .LVU89
 300 0102 1092 0000 		sts in_run_mode,__zero_reg__
 444:track_edit.c  ****   play_loaded_pattern = FALSE;
 301               		.loc 1 444 3 is_stmt 1 view .LVU90
 302               		.loc 1 444 23 is_stmt 0 view .LVU91
 303 0106 1092 0000 		sts play_loaded_pattern,__zero_reg__
 445:track_edit.c  ****   play_loaded_track = FALSE;
 304               		.loc 1 445 3 is_stmt 1 view .LVU92
 305               		.loc 1 445 21 is_stmt 0 view .LVU93
 306 010a 1092 0000 		sts play_loaded_track,__zero_reg__
 446:track_edit.c  ****   note_off(0);
 307               		.loc 1 446 3 is_stmt 1 view .LVU94
 308 010e 80E0      		ldi r24,0
 309 0110 0E94 0000 		call note_off
 310               	.LVL20:
 447:track_edit.c  ****   clear_all_leds();
 311               		.loc 1 447 3 view .LVU95
 312 0114 0E94 0000 		call clear_all_leds
 313               	.LVL21:
 448:track_edit.c  ****   clear_blinking_leds();
 314               		.loc 1 448 3 view .LVU96
 315 0118 0E94 0000 		call clear_blinking_leds
 316               	.LVL22:
 449:track_edit.c  ****   has_bank_knob_changed();
 317               		.loc 1 449 3 view .LVU97
 318 011c 0C94 0000 		jmp has_bank_knob_changed
 319               	.LVL23:
 320               		.cfi_endproc
 321               	.LFE8:
 323               	.global	load_track
 325               	load_track:
 326               	.LVL24:
 327               	.LFB9:
 450:track_edit.c  **** }
 451:track_edit.c  **** 
 452:track_edit.c  **** void load_track(uint8_t bank, uint8_t track_loc) {
 328               		.loc 1 452 50 view -0
 329               		.cfi_startproc
 330               		.loc 1 452 50 is_stmt 0 view .LVU99
 331 0120 EF92      		push r14
 332               		.cfi_def_cfa_offset 3
 333               		.cfi_offset 14, -2
 334 0122 FF92      		push r15
 335               		.cfi_def_cfa_offset 4
 336               		.cfi_offset 15, -3
 337 0124 0F93      		push r16
 338               		.cfi_def_cfa_offset 5
 339               		.cfi_offset 16, -4
 340 0126 1F93      		push r17
 341               		.cfi_def_cfa_offset 6
 342               		.cfi_offset 17, -5
 343 0128 CF93      		push r28
 344               		.cfi_def_cfa_offset 7
 345               		.cfi_offset 28, -6
 346 012a DF93      		push r29
 347               		.cfi_def_cfa_offset 8
 348               		.cfi_offset 29, -7
 349               	/* prologue: function */
 350               	/* frame size = 0 */
 351               	/* stack size = 6 */
 352               	.L__stack_usage = 6
 453:track_edit.c  ****   uint8_t i;
 353               		.loc 1 453 3 is_stmt 1 view .LVU100
 454:track_edit.c  ****   uint16_t track_addr;
 354               		.loc 1 454 3 view .LVU101
 455:track_edit.c  **** 
 456:track_edit.c  ****   track_addr = TRACK_MEM + (bank * BANK_SIZE + track_loc * TRACK_SIZE) * 2;
 355               		.loc 1 456 3 view .LVU102
 356               		.loc 1 456 46 is_stmt 0 view .LVU103
 357 012c 98E0      		ldi r25,lo8(8)
 358 012e 899F      		mul r24,r25
 359 0130 E001      		movw r28,r0
 360 0132 1124      		clr __zero_reg__
 361 0134 C60F      		add r28,r22
 362 0136 D11D      		adc r29,__zero_reg__
 363               		.loc 1 456 72 view .LVU104
 364 0138 45E0      		ldi r20,5
 365               		1:
 366 013a CC0F      		lsl r28
 367 013c DD1F      		rol r29
 368 013e 4A95      		dec r20
 369 0140 01F4      		brne 1b
 370               		.loc 1 456 14 view .LVU105
 371 0142 D85F      		subi r29,-8
 372               	.LVL25:
 457:track_edit.c  **** 
 458:track_edit.c  ****   /*
 459:track_edit.c  ****   putstring("reading track [");
 460:track_edit.c  ****   putnum_ud(bank); putstring(", "); putnum_ud(track_loc);
 461:track_edit.c  ****   putstring(" @ 0x");
 462:track_edit.c  ****   putnum_uh(track_addr);
 463:track_edit.c  ****   putstring("\n\r");
 464:track_edit.c  ****   */
 465:track_edit.c  **** 
 466:track_edit.c  ****   for (i = 0; i < TRACK_SIZE; i++) {
 373               		.loc 1 466 3 is_stmt 1 view .LVU106
 456:track_edit.c  **** 
 374               		.loc 1 456 14 is_stmt 0 view .LVU107
 375 0144 F12C      		mov r15,__zero_reg__
 376 0146 E12C      		mov r14,__zero_reg__
 377               	.LVL26:
 378               	.L22:
 467:track_edit.c  ****     track_buff[i] = spieeprom_read(track_addr + 2 * i) << 8;
 379               		.loc 1 467 5 is_stmt 1 discriminator 3 view .LVU108
 380               		.loc 1 467 21 is_stmt 0 discriminator 3 view .LVU109
 381 0148 CE01      		movw r24,r28
 382 014a 0E94 0000 		call spieeprom_read
 383               	.LVL27:
 384 014e 90E0      		ldi r25,0
 385               		.loc 1 467 56 discriminator 3 view .LVU110
 386 0150 982F      		mov r25,r24
 387 0152 8827      		clr r24
 388               		.loc 1 467 19 discriminator 3 view .LVU111
 389 0154 8701      		movw r16,r14
 390 0156 000F      		lsl r16
 391 0158 111F      		rol r17
 392 015a 0050      		subi r16,lo8(-(track_buff))
 393 015c 1040      		sbci r17,hi8(-(track_buff))
 394 015e F801      		movw r30,r16
 395 0160 9183      		std Z+1,r25
 396 0162 8083      		st Z,r24
 468:track_edit.c  ****     track_buff[i] |= spieeprom_read(track_addr + 2 * i + 1);
 397               		.loc 1 468 5 is_stmt 1 discriminator 3 view .LVU112
 398               		.loc 1 468 22 is_stmt 0 discriminator 3 view .LVU113
 399 0164 CE01      		movw r24,r28
 400 0166 0196      		adiw r24,1
 401 0168 0E94 0000 		call spieeprom_read
 402               	.LVL28:
 403               		.loc 1 468 19 discriminator 3 view .LVU114
 404 016c F801      		movw r30,r16
 405 016e 2081      		ld r18,Z
 406 0170 3181      		ldd r19,Z+1
 407 0172 282B      		or r18,r24
 408 0174 3183      		std Z+1,r19
 409 0176 2083      		st Z,r18
 410               	.LVL29:
 411               		.loc 1 468 19 discriminator 3 view .LVU115
 412 0178 FFEF      		ldi r31,-1
 413 017a EF1A      		sub r14,r31
 414 017c FF0A      		sbc r15,r31
 415               	.LVL30:
 416               		.loc 1 468 19 discriminator 3 view .LVU116
 417 017e 2296      		adiw r28,2
 466:track_edit.c  ****     track_buff[i] = spieeprom_read(track_addr + 2 * i) << 8;
 418               		.loc 1 466 3 discriminator 3 view .LVU117
 419 0180 80E1      		ldi r24,16
 420 0182 E816      		cp r14,r24
 421 0184 F104      		cpc r15,__zero_reg__
 422 0186 01F4      		brne .L22
 423               	/* epilogue start */
 469:track_edit.c  ****   }
 470:track_edit.c  **** }
 424               		.loc 1 470 1 view .LVU118
 425 0188 DF91      		pop r29
 426 018a CF91      		pop r28
 427 018c 1F91      		pop r17
 428 018e 0F91      		pop r16
 429 0190 FF90      		pop r15
 430 0192 EF90      		pop r14
 431               	.LVL31:
 432               		.loc 1 470 1 view .LVU119
 433 0194 0895      		ret
 434               		.cfi_endproc
 435               	.LFE9:
 437               	.global	write_track
 439               	write_track:
 440               	.LVL32:
 441               	.LFB10:
 471:track_edit.c  **** 
 472:track_edit.c  **** void write_track(uint8_t bank, uint8_t track_loc) {
 442               		.loc 1 472 51 is_stmt 1 view -0
 443               		.cfi_startproc
 444               		.loc 1 472 51 is_stmt 0 view .LVU121
 445 0196 EF92      		push r14
 446               		.cfi_def_cfa_offset 3
 447               		.cfi_offset 14, -2
 448 0198 FF92      		push r15
 449               		.cfi_def_cfa_offset 4
 450               		.cfi_offset 15, -3
 451 019a 0F93      		push r16
 452               		.cfi_def_cfa_offset 5
 453               		.cfi_offset 16, -4
 454 019c 1F93      		push r17
 455               		.cfi_def_cfa_offset 6
 456               		.cfi_offset 17, -5
 457 019e CF93      		push r28
 458               		.cfi_def_cfa_offset 7
 459               		.cfi_offset 28, -6
 460 01a0 DF93      		push r29
 461               		.cfi_def_cfa_offset 8
 462               		.cfi_offset 29, -7
 463               	/* prologue: function */
 464               	/* frame size = 0 */
 465               	/* stack size = 6 */
 466               	.L__stack_usage = 6
 473:track_edit.c  ****   uint8_t i;
 467               		.loc 1 473 3 is_stmt 1 view .LVU122
 474:track_edit.c  ****   uint16_t track_addr;
 468               		.loc 1 474 3 view .LVU123
 475:track_edit.c  **** 
 476:track_edit.c  ****   track_addr = TRACK_MEM + (bank * BANK_SIZE + track_loc * TRACK_SIZE) * 2;
 469               		.loc 1 476 3 view .LVU124
 470               		.loc 1 476 46 is_stmt 0 view .LVU125
 471 01a2 28E0      		ldi r18,lo8(8)
 472 01a4 829F      		mul r24,r18
 473 01a6 E001      		movw r28,r0
 474 01a8 1124      		clr __zero_reg__
 475 01aa C60F      		add r28,r22
 476 01ac D11D      		adc r29,__zero_reg__
 477               		.loc 1 476 72 view .LVU126
 478 01ae 35E0      		ldi r19,5
 479               		1:
 480 01b0 CC0F      		lsl r28
 481 01b2 DD1F      		rol r29
 482 01b4 3A95      		dec r19
 483 01b6 01F4      		brne 1b
 484               		.loc 1 476 14 view .LVU127
 485 01b8 D85F      		subi r29,-8
 486               	.LVL33:
 477:track_edit.c  **** 
 478:track_edit.c  ****   /*
 479:track_edit.c  ****   putstring("write track [");
 480:track_edit.c  ****   putnum_ud(bank); putstring(", "); putnum_ud(track_loc);
 481:track_edit.c  ****   putstring(" @ 0x");
 482:track_edit.c  ****   putnum_uh(track_addr);
 483:track_edit.c  ****   putstring("\n\r");
 484:track_edit.c  ****   */
 485:track_edit.c  **** 
 486:track_edit.c  ****   for (i = 0; i < TRACK_SIZE; i++) {
 487               		.loc 1 486 3 is_stmt 1 view .LVU128
 476:track_edit.c  **** 
 488               		.loc 1 476 14 is_stmt 0 view .LVU129
 489 01ba 10E0      		ldi r17,0
 490 01bc 00E0      		ldi r16,0
 491               	.LVL34:
 492               	.L25:
 487:track_edit.c  ****     spieeprom_write(track_buff[i] >> 8, track_addr + 2 * i);
 493               		.loc 1 487 5 is_stmt 1 discriminator 3 view .LVU130
 494               		.loc 1 487 31 is_stmt 0 discriminator 3 view .LVU131
 495 01be C801      		movw r24,r16
 496 01c0 880F      		lsl r24
 497 01c2 991F      		rol r25
 498 01c4 FC01      		movw r30,r24
 499 01c6 E050      		subi r30,lo8(-(track_buff))
 500 01c8 F040      		sbci r31,hi8(-(track_buff))
 501 01ca 7F01      		movw r14,r30
 502 01cc 8081      		ld r24,Z
 503 01ce 9181      		ldd r25,Z+1
 504               		.loc 1 487 5 discriminator 3 view .LVU132
 505 01d0 BE01      		movw r22,r28
 506 01d2 892F      		mov r24,r25
 507 01d4 0E94 0000 		call spieeprom_write
 508               	.LVL35:
 488:track_edit.c  ****     spieeprom_write(track_buff[i] & 0xFF, track_addr + 2 * i + 1);
 509               		.loc 1 488 5 is_stmt 1 discriminator 3 view .LVU133
 510               		.loc 1 488 31 is_stmt 0 discriminator 3 view .LVU134
 511 01d8 F701      		movw r30,r14
 512 01da 8081      		ld r24,Z
 513 01dc 9181      		ldd r25,Z+1
 514               		.loc 1 488 5 discriminator 3 view .LVU135
 515 01de BE01      		movw r22,r28
 516 01e0 6F5F      		subi r22,-1
 517 01e2 7F4F      		sbci r23,-1
 518 01e4 0E94 0000 		call spieeprom_write
 519               	.LVL36:
 520               		.loc 1 488 5 discriminator 3 view .LVU136
 521 01e8 0F5F      		subi r16,-1
 522 01ea 1F4F      		sbci r17,-1
 523               	.LVL37:
 524               		.loc 1 488 5 discriminator 3 view .LVU137
 525 01ec 2296      		adiw r28,2
 486:track_edit.c  ****     spieeprom_write(track_buff[i] >> 8, track_addr + 2 * i);
 526               		.loc 1 486 3 discriminator 3 view .LVU138
 527 01ee 0031      		cpi r16,16
 528 01f0 1105      		cpc r17,__zero_reg__
 529 01f2 01F4      		brne .L25
 530               	/* epilogue start */
 489:track_edit.c  ****   }
 490:track_edit.c  **** }
 531               		.loc 1 490 1 view .LVU139
 532 01f4 DF91      		pop r29
 533 01f6 CF91      		pop r28
 534 01f8 1F91      		pop r17
 535 01fa 0F91      		pop r16
 536               	.LVL38:
 537               		.loc 1 490 1 view .LVU140
 538 01fc FF90      		pop r15
 539 01fe EF90      		pop r14
 540 0200 0895      		ret
 541               		.cfi_endproc
 542               	.LFE10:
 544               	.global	do_track_edit
 546               	do_track_edit:
 547               	.LFB1:
  67:track_edit.c  ****   uint8_t i;
 548               		.loc 1 67 26 is_stmt 1 view -0
 549               		.cfi_startproc
 550 0202 EF92      		push r14
 551               		.cfi_def_cfa_offset 3
 552               		.cfi_offset 14, -2
 553 0204 FF92      		push r15
 554               		.cfi_def_cfa_offset 4
 555               		.cfi_offset 15, -3
 556 0206 0F93      		push r16
 557               		.cfi_def_cfa_offset 5
 558               		.cfi_offset 16, -4
 559 0208 1F93      		push r17
 560               		.cfi_def_cfa_offset 6
 561               		.cfi_offset 17, -5
 562 020a CF93      		push r28
 563               		.cfi_def_cfa_offset 7
 564               		.cfi_offset 28, -6
 565 020c DF93      		push r29
 566               		.cfi_def_cfa_offset 8
 567               		.cfi_offset 29, -7
 568               	/* prologue: function */
 569               	/* frame size = 0 */
 570               	/* stack size = 6 */
 571               	.L__stack_usage = 6
  68:track_edit.c  **** 
 572               		.loc 1 68 3 view .LVU142
  70:track_edit.c  **** 
 573               		.loc 1 70 3 view .LVU143
 574 020e 0E94 0000 		call turn_on_tempo
 575               	.LVL39:
  73:track_edit.c  ****   track_location = 0;
 576               		.loc 1 73 3 view .LVU144
  73:track_edit.c  ****   track_location = 0;
 577               		.loc 1 73 21 is_stmt 0 view .LVU145
 578 0212 8091 0000 		lds r24,bank
 579 0216 8770      		andi r24,lo8(7)
  73:track_edit.c  ****   track_location = 0;
 580               		.loc 1 73 14 view .LVU146
 581 0218 8093 0000 		sts track_bank,r24
  74:track_edit.c  **** 
 582               		.loc 1 74 3 is_stmt 1 view .LVU147
  74:track_edit.c  **** 
 583               		.loc 1 74 18 is_stmt 0 view .LVU148
 584 021c 1092 0000 		sts track_location,__zero_reg__
  76:track_edit.c  ****   in_run_mode = FALSE;
 585               		.loc 1 76 3 is_stmt 1 view .LVU149
  76:track_edit.c  ****   in_run_mode = FALSE;
 586               		.loc 1 76 21 is_stmt 0 view .LVU150
 587 0220 1092 0000 		sts in_stepwrite_mode,__zero_reg__
  77:track_edit.c  ****   play_loaded_track = FALSE;
 588               		.loc 1 77 3 is_stmt 1 view .LVU151
  77:track_edit.c  ****   play_loaded_track = FALSE;
 589               		.loc 1 77 15 is_stmt 0 view .LVU152
 590 0224 1092 0000 		sts in_run_mode,__zero_reg__
  78:track_edit.c  ****   play_loaded_pattern = FALSE;
 591               		.loc 1 78 3 is_stmt 1 view .LVU153
  78:track_edit.c  ****   play_loaded_pattern = FALSE;
 592               		.loc 1 78 21 is_stmt 0 view .LVU154
 593 0228 1092 0000 		sts play_loaded_track,__zero_reg__
  79:track_edit.c  ****   curr_track_index = 0;
 594               		.loc 1 79 3 is_stmt 1 view .LVU155
  79:track_edit.c  ****   curr_track_index = 0;
 595               		.loc 1 79 23 is_stmt 0 view .LVU156
 596 022c 1092 0000 		sts play_loaded_pattern,__zero_reg__
  80:track_edit.c  ****   curr_patt = END_OF_TRACK;
 597               		.loc 1 80 3 is_stmt 1 view .LVU157
  80:track_edit.c  ****   curr_patt = END_OF_TRACK;
 598               		.loc 1 80 20 is_stmt 0 view .LVU158
 599 0230 1092 0000 		sts curr_track_index,__zero_reg__
  81:track_edit.c  ****   sync = INTERNAL_SYNC;
 600               		.loc 1 81 3 is_stmt 1 view .LVU159
  81:track_edit.c  ****   sync = INTERNAL_SYNC;
 601               		.loc 1 81 13 is_stmt 0 view .LVU160
 602 0234 8FEF      		ldi r24,lo8(-1)
 603 0236 9FEF      		ldi r25,lo8(-1)
 604 0238 9093 0000 		sts curr_patt+1,r25
 605 023c 8093 0000 		sts curr_patt,r24
  82:track_edit.c  **** 
 606               		.loc 1 82 3 is_stmt 1 view .LVU161
  82:track_edit.c  **** 
 607               		.loc 1 82 8 is_stmt 0 view .LVU162
 608 0240 1092 0000 		sts sync,__zero_reg__
  84:track_edit.c  ****   clear_blinking_leds();
 609               		.loc 1 84 3 is_stmt 1 view .LVU163
 610 0244 0E94 0000 		call clear_bank_leds
 611               	.LVL40:
  85:track_edit.c  **** 
 612               		.loc 1 85 3 view .LVU164
 613 0248 0E94 0000 		call clear_blinking_leds
 614               	.LVL41:
 240:track_edit.c  ****         // stop the mode, and any playing
 615               		.loc 1 240 19 is_stmt 0 view .LVU165
 616 024c 0FEF      		ldi r16,lo8(-1)
 617 024e 1FEF      		ldi r17,lo8(-1)
 618 0250 EE24      		clr r14
 619 0252 EA94      		dec r14
 620 0254 FE2C      		mov r15,r14
 621               	.L88:
  87:track_edit.c  ****     read_switches();
 622               		.loc 1 87 3 is_stmt 1 view .LVU166
  88:track_edit.c  **** 
 623               		.loc 1 88 5 view .LVU167
 624 0256 0E94 0000 		call read_switches
 625               	.LVL42:
  91:track_edit.c  ****       // stop playing any notes
 626               		.loc 1 91 5 view .LVU168
  91:track_edit.c  ****       // stop playing any notes
 627               		.loc 1 91 8 is_stmt 0 view .LVU169
 628 025a 8091 0000 		lds r24,function
 629 025e 8130      		cpi r24,lo8(1)
 630 0260 01F0      		breq .L28
  93:track_edit.c  ****       play_loaded_track = play_loaded_pattern = 0;
 631               		.loc 1 93 7 is_stmt 1 view .LVU170
 632 0262 0E94 0000 		call turn_off_tempo
 633               	.LVL43:
  94:track_edit.c  **** 
 634               		.loc 1 94 7 view .LVU171
  94:track_edit.c  **** 
 635               		.loc 1 94 47 is_stmt 0 view .LVU172
 636 0266 1092 0000 		sts play_loaded_pattern,__zero_reg__
  94:track_edit.c  **** 
 637               		.loc 1 94 25 view .LVU173
 638 026a 1092 0000 		sts play_loaded_track,__zero_reg__
  97:track_edit.c  **** 
 639               		.loc 1 97 7 is_stmt 1 view .LVU174
 640 026e 80E0      		ldi r24,0
 641 0270 0E94 0000 		call note_off
 642               	.LVL44:
 100:track_edit.c  ****       clock_leds();
 643               		.loc 1 100 7 view .LVU175
 644 0274 0E94 0000 		call clear_all_leds
 645               	.LVL45:
 101:track_edit.c  **** 
 646               		.loc 1 101 7 view .LVU176
 647               	/* epilogue start */
 357:track_edit.c  **** 
 648               		.loc 1 357 1 is_stmt 0 view .LVU177
 649 0278 DF91      		pop r29
 650 027a CF91      		pop r28
 651 027c 1F91      		pop r17
 652 027e 0F91      		pop r16
 653 0280 FF90      		pop r15
 654 0282 EF90      		pop r14
 101:track_edit.c  **** 
 655               		.loc 1 101 7 view .LVU178
 656 0284 0C94 0000 		jmp clock_leds
 657               	.LVL46:
 658               	.L28:
 108:track_edit.c  ****       if (has_bank_knob_changed()) {
 659               		.loc 1 108 5 is_stmt 1 view .LVU179
 108:track_edit.c  ****       if (has_bank_knob_changed()) {
 660               		.loc 1 108 28 is_stmt 0 view .LVU180
 661 0288 8091 0000 		lds r24,in_stepwrite_mode
 662 028c 9091 0000 		lds r25,in_run_mode
 663 0290 892B      		or r24,r25
 664 0292 01F4      		brne .L29
 109:track_edit.c  ****         // putstring("changed track bank\n\r");
 665               		.loc 1 109 7 is_stmt 1 view .LVU181
 109:track_edit.c  ****         // putstring("changed track bank\n\r");
 666               		.loc 1 109 11 is_stmt 0 view .LVU182
 667 0294 0E94 0000 		call has_bank_knob_changed
 668               	.LVL47:
 109:track_edit.c  ****         // putstring("changed track bank\n\r");
 669               		.loc 1 109 10 view .LVU183
 670 0298 8823      		tst r24
 671 029a 01F0      		breq .L30
 111:track_edit.c  ****         load_track(track_bank, track_location);
 672               		.loc 1 111 9 is_stmt 1 view .LVU184
 111:track_edit.c  ****         load_track(track_bank, track_location);
 673               		.loc 1 111 27 is_stmt 0 view .LVU185
 674 029c 8091 0000 		lds r24,bank
 675 02a0 8770      		andi r24,lo8(7)
 111:track_edit.c  ****         load_track(track_bank, track_location);
 676               		.loc 1 111 20 view .LVU186
 677 02a2 8093 0000 		sts track_bank,r24
 112:track_edit.c  ****         clear_bank_leds(); // track changed, clear the prev indicator
 678               		.loc 1 112 9 is_stmt 1 view .LVU187
 679 02a6 6091 0000 		lds r22,track_location
 680 02aa 0E94 0000 		call load_track
 681               	.LVL48:
 113:track_edit.c  ****       }
 682               		.loc 1 113 9 view .LVU188
 683 02ae 0E94 0000 		call clear_bank_leds
 684               	.LVL49:
 685               	.L30:
 115:track_edit.c  **** 
 686               		.loc 1 115 7 view .LVU189
 687 02b2 8091 0000 		lds r24,track_bank
 688 02b6 0E94 0000 		call set_bank_led
 689               	.LVL50:
 117:track_edit.c  ****       if (i != 0) {
 690               		.loc 1 117 7 view .LVU190
 117:track_edit.c  ****       if (i != 0) {
 691               		.loc 1 117 11 is_stmt 0 view .LVU191
 692 02ba 0E94 0000 		call get_lowest_numkey_pressed
 693               	.LVL51:
 694 02be C82F      		mov r28,r24
 695               	.LVL52:
 118:track_edit.c  ****         clear_notekey_leds();
 696               		.loc 1 118 7 is_stmt 1 view .LVU192
 118:track_edit.c  ****         clear_notekey_leds();
 697               		.loc 1 118 10 is_stmt 0 view .LVU193
 698 02c0 8823      		tst r24
 699 02c2 01F0      		breq .L31
 119:track_edit.c  ****         track_location = i - 1;
 700               		.loc 1 119 9 is_stmt 1 view .LVU194
 701 02c4 0E94 0000 		call clear_notekey_leds
 702               	.LVL53:
 120:track_edit.c  ****         load_track(track_bank, track_location);
 703               		.loc 1 120 9 view .LVU195
 120:track_edit.c  ****         load_track(track_bank, track_location);
 704               		.loc 1 120 28 is_stmt 0 view .LVU196
 705 02c8 6FEF      		ldi r22,lo8(-1)
 706 02ca 6C0F      		add r22,r28
 120:track_edit.c  ****         load_track(track_bank, track_location);
 707               		.loc 1 120 24 view .LVU197
 708 02cc 6093 0000 		sts track_location,r22
 121:track_edit.c  ****       }
 709               		.loc 1 121 9 is_stmt 1 view .LVU198
 710 02d0 8091 0000 		lds r24,track_bank
 711 02d4 0E94 0000 		call load_track
 712               	.LVL54:
 713               	.L31:
 123:track_edit.c  ****     }
 714               		.loc 1 123 7 view .LVU199
 715 02d8 8091 0000 		lds r24,track_location
 716 02dc 8F5F      		subi r24,lo8(-(1))
 717 02de 0E94 0000 		call set_numkey_led
 718               	.LVL55:
 719               	.L29:
 127:track_edit.c  ****       if (in_run_mode) {
 720               		.loc 1 127 5 view .LVU200
 127:track_edit.c  ****       if (in_run_mode) {
 721               		.loc 1 127 9 is_stmt 0 view .LVU201
 722 02e2 81E0      		ldi r24,lo8(1)
 723 02e4 0E94 0000 		call just_pressed
 724               	.LVL56:
 127:track_edit.c  ****       if (in_run_mode) {
 725               		.loc 1 127 8 view .LVU202
 726 02e8 8823      		tst r24
 727 02ea 01F0      		breq .L32
 128:track_edit.c  ****         stop_track_run_mode(); // stop run mode
 728               		.loc 1 128 7 is_stmt 1 view .LVU203
 128:track_edit.c  ****         stop_track_run_mode(); // stop run mode
 729               		.loc 1 128 10 is_stmt 0 view .LVU204
 730 02ec 8091 0000 		lds r24,in_run_mode
 731 02f0 8823      		tst r24
 732 02f2 01F4      		brne .+2
 733 02f4 00C0      		rjmp .L33
 129:track_edit.c  ****       } else {
 734               		.loc 1 129 9 is_stmt 1 view .LVU205
 735 02f6 0E94 0000 		call stop_track_run_mode
 736               	.LVL57:
 737               	.L32:
 143:track_edit.c  ****       // show the current position in the edited track
 738               		.loc 1 143 5 view .LVU206
 143:track_edit.c  ****       // show the current position in the edited track
 739               		.loc 1 143 21 is_stmt 0 view .LVU207
 740 02fa 8091 0000 		lds r24,in_run_mode
 741 02fe 9091 0000 		lds r25,in_stepwrite_mode
 742 0302 892B      		or r24,r25
 743 0304 01F0      		breq .L35
 145:track_edit.c  ****         clear_blinking_leds();
 744               		.loc 1 145 7 is_stmt 1 view .LVU208
 145:track_edit.c  ****         clear_blinking_leds();
 745               		.loc 1 145 12 is_stmt 0 view .LVU209
 746 0306 8091 0000 		lds r24,curr_track_index
 747 030a 0E94 0000 		call is_bank_led_blink
 748               	.LVL58:
 145:track_edit.c  ****         clear_blinking_leds();
 749               		.loc 1 145 10 view .LVU210
 750 030e 8111      		cpse r24,__zero_reg__
 751 0310 00C0      		rjmp .L36
 146:track_edit.c  ****       set_bank_led_blink(curr_track_index);
 752               		.loc 1 146 9 is_stmt 1 view .LVU211
 753 0312 0E94 0000 		call clear_blinking_leds
 754               	.LVL59:
 755               	.L36:
 147:track_edit.c  **** 
 756               		.loc 1 147 7 view .LVU212
 757 0316 8091 0000 		lds r24,curr_track_index
 758 031a 0E94 0000 		call set_bank_led_blink
 759               	.LVL60:
 149:track_edit.c  ****         clear_note_leds();
 760               		.loc 1 149 7 view .LVU213
 149:track_edit.c  ****         clear_note_leds();
 761               		.loc 1 149 10 is_stmt 0 view .LVU214
 762 031e 8091 0000 		lds r24,curr_patt
 763 0322 9091 0000 		lds r25,curr_patt+1
 764 0326 0196      		adiw r24,1
 765 0328 01F4      		brne .L37
 150:track_edit.c  ****         // the 'end of track' (0xFFFF) lights up DONE
 766               		.loc 1 150 9 is_stmt 1 view .LVU215
 767 032a 0E94 0000 		call clear_note_leds
 768               	.LVL61:
 152:track_edit.c  ****       } else {
 769               		.loc 1 152 9 view .LVU216
 770 032e 80E0      		ldi r24,0
 771               	.L147:
 170:track_edit.c  ****         else
 772               		.loc 1 170 11 is_stmt 0 view .LVU217
 773 0330 0E94 0000 		call set_led
 774               	.LVL62:
 775               	.L35:
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 776               		.loc 1 178 5 is_stmt 1 view .LVU218
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 777               		.loc 1 178 10 is_stmt 0 view .LVU219
 778 0334 88E0      		ldi r24,lo8(8)
 779 0336 0E94 0000 		call just_pressed
 780               	.LVL63:
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 781               		.loc 1 178 8 view .LVU220
 782 033a 8823      		tst r24
 783 033c 01F4      		brne .+2
 784 033e 00C0      		rjmp .L43
 785               	.L46:
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 786               		.loc 1 178 60 view .LVU221
 787 0340 8091 0000 		lds r24,in_run_mode
 788 0344 8111      		cpse r24,__zero_reg__
 789 0346 00C0      		rjmp .L47
 179:track_edit.c  **** 
 790               		.loc 1 179 7 is_stmt 1 view .LVU222
 791 0348 80E0      		ldi r24,0
 792 034a 0E94 0000 		call note_off
 793               	.LVL64:
 181:track_edit.c  ****         if (just_pressed(KEY_NEXT)) {
 794               		.loc 1 181 7 view .LVU223
 181:track_edit.c  ****         if (just_pressed(KEY_NEXT)) {
 795               		.loc 1 181 10 is_stmt 0 view .LVU224
 796 034e 8091 0000 		lds r24,in_stepwrite_mode
 797 0352 8823      		tst r24
 798 0354 01F4      		brne .+2
 799 0356 00C0      		rjmp .L48
 182:track_edit.c  ****           // step forward in the track
 800               		.loc 1 182 9 is_stmt 1 view .LVU225
 182:track_edit.c  ****           // step forward in the track
 801               		.loc 1 182 13 is_stmt 0 view .LVU226
 802 0358 88E0      		ldi r24,lo8(8)
 803 035a 0E94 0000 		call just_pressed
 804               	.LVL65:
 182:track_edit.c  ****           // step forward in the track
 805               		.loc 1 182 12 view .LVU227
 806 035e 8823      		tst r24
 807 0360 01F4      		brne .+2
 808 0362 00C0      		rjmp .L49
 184:track_edit.c  ****               (track_buff[curr_track_index] == END_OF_TRACK))
 809               		.loc 1 184 11 is_stmt 1 view .LVU228
 184:track_edit.c  ****               (track_buff[curr_track_index] == END_OF_TRACK))
 810               		.loc 1 184 39 is_stmt 0 view .LVU229
 811 0364 8091 0000 		lds r24,curr_track_index
 184:track_edit.c  ****               (track_buff[curr_track_index] == END_OF_TRACK))
 812               		.loc 1 184 14 view .LVU230
 813 0368 8F30      		cpi r24,lo8(15)
 814 036a 00F4      		brsh .L148
 185:track_edit.c  ****             curr_track_index =
 815               		.loc 1 185 26 discriminator 1 view .LVU231
 816 036c E091 0000 		lds r30,curr_track_index
 817 0370 F0E0      		ldi r31,0
 818 0372 EE0F      		lsl r30
 819 0374 FF1F      		rol r31
 820 0376 E050      		subi r30,lo8(-(track_buff))
 821 0378 F040      		sbci r31,hi8(-(track_buff))
 822 037a 8081      		ld r24,Z
 823 037c 9181      		ldd r25,Z+1
 184:track_edit.c  ****               (track_buff[curr_track_index] == END_OF_TRACK))
 824               		.loc 1 184 54 discriminator 1 view .LVU232
 825 037e 0196      		adiw r24,1
 826 0380 01F0      		breq .+2
 827 0382 00C0      		rjmp .L51
 828               	.L148:
 204:track_edit.c  ****       }
 829               		.loc 1 204 9 is_stmt 1 view .LVU233
 204:track_edit.c  ****       }
 830               		.loc 1 204 26 is_stmt 0 view .LVU234
 831 0384 1092 0000 		sts curr_track_index,__zero_reg__
 832 0388 00C0      		rjmp .L52
 833               	.L33:
 132:track_edit.c  ****           stop_track_stepwrite_mode();
 834               		.loc 1 132 9 is_stmt 1 view .LVU235
 132:track_edit.c  ****           stop_track_stepwrite_mode();
 835               		.loc 1 132 12 is_stmt 0 view .LVU236
 836 038a 8091 0000 		lds r24,in_stepwrite_mode
 837 038e 8111      		cpse r24,__zero_reg__
 133:track_edit.c  ****         }
 838               		.loc 1 133 11 is_stmt 1 view .LVU237
 839 0390 0E94 0000 		call stop_track_stepwrite_mode
 840               	.LVL66:
 841               	.L34:
 135:track_edit.c  ****       }
 842               		.loc 1 135 9 view .LVU238
 843 0394 0E94 0000 		call start_track_run_mode
 844               	.LVL67:
 845 0398 00C0      		rjmp .L32
 846               	.L37:
 154:track_edit.c  ****         set_bank_led((curr_patt >> 3) &
 847               		.loc 1 154 9 view .LVU239
 848 039a 80E0      		ldi r24,0
 849 039c 0E94 0000 		call clear_led
 850               	.LVL68:
 155:track_edit.c  ****                      0xF); // show the bank of the current pattern
 851               		.loc 1 155 9 view .LVU240
 155:track_edit.c  ****                      0xF); // show the bank of the current pattern
 852               		.loc 1 155 33 is_stmt 0 view .LVU241
 853 03a0 8091 0000 		lds r24,curr_patt
 854 03a4 9091 0000 		lds r25,curr_patt+1
 855 03a8 23E0      		ldi r18,3
 856               		1:
 857 03aa 9695      		lsr r25
 858 03ac 8795      		ror r24
 859 03ae 2A95      		dec r18
 860 03b0 01F4      		brne 1b
 155:track_edit.c  ****                      0xF); // show the bank of the current pattern
 861               		.loc 1 155 9 view .LVU242
 862 03b2 8F70      		andi r24,lo8(15)
 863 03b4 0E94 0000 		call set_bank_led
 864               	.LVL69:
 159:track_edit.c  ****           set_led(LED_REST);
 865               		.loc 1 159 9 is_stmt 1 view .LVU243
 159:track_edit.c  ****           set_led(LED_REST);
 866               		.loc 1 159 12 is_stmt 0 view .LVU244
 867 03b8 8091 0000 		lds r24,curr_patt
 868 03bc 9091 0000 		lds r25,curr_patt+1
 869 03c0 97FF      		sbrs r25,7
 870 03c2 00C0      		rjmp .L38
 160:track_edit.c  ****         else
 871               		.loc 1 160 11 is_stmt 1 view .LVU245
 872 03c4 88E0      		ldi r24,lo8(8)
 873 03c6 0E94 0000 		call set_led
 874               	.LVL70:
 875               	.L39:
 164:track_edit.c  ****           set_led(LED_ACCENT);
 876               		.loc 1 164 9 view .LVU246
 164:track_edit.c  ****           set_led(LED_ACCENT);
 877               		.loc 1 164 12 is_stmt 0 view .LVU247
 878 03ca 8091 0000 		lds r24,curr_patt
 879 03ce 9091 0000 		lds r25,curr_patt+1
 880 03d2 96FF      		sbrs r25,6
 881 03d4 00C0      		rjmp .L40
 165:track_edit.c  ****         else
 882               		.loc 1 165 11 is_stmt 1 view .LVU248
 883 03d6 81E0      		ldi r24,lo8(1)
 884 03d8 0E94 0000 		call set_led
 885               	.LVL71:
 886               	.L41:
 169:track_edit.c  ****           set_led(LED_SLIDE);
 887               		.loc 1 169 9 view .LVU249
 169:track_edit.c  ****           set_led(LED_SLIDE);
 888               		.loc 1 169 12 is_stmt 0 view .LVU250
 889 03dc 8091 0000 		lds r24,curr_patt
 890 03e0 9091 0000 		lds r25,curr_patt+1
 891 03e4 95FF      		sbrs r25,5
 892 03e6 00C0      		rjmp .L42
 170:track_edit.c  ****         else
 893               		.loc 1 170 11 is_stmt 1 view .LVU251
 894 03e8 82E0      		ldi r24,lo8(2)
 895 03ea 00C0      		rjmp .L147
 896               	.L38:
 162:track_edit.c  **** 
 897               		.loc 1 162 11 view .LVU252
 898 03ec 88E0      		ldi r24,lo8(8)
 899 03ee 0E94 0000 		call clear_led
 900               	.LVL72:
 901 03f2 00C0      		rjmp .L39
 902               	.L40:
 167:track_edit.c  **** 
 903               		.loc 1 167 11 view .LVU253
 904 03f4 81E0      		ldi r24,lo8(1)
 905 03f6 0E94 0000 		call clear_led
 906               	.LVL73:
 907 03fa 00C0      		rjmp .L41
 908               	.L42:
 172:track_edit.c  ****       }
 909               		.loc 1 172 11 view .LVU254
 910 03fc 82E0      		ldi r24,lo8(2)
 911 03fe 0E94 0000 		call clear_led
 912               	.LVL74:
 913 0402 00C0      		rjmp .L35
 914               	.L43:
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 915               		.loc 1 178 36 is_stmt 0 discriminator 2 view .LVU255
 916 0404 83E0      		ldi r24,lo8(3)
 917 0406 0E94 0000 		call just_pressed
 918               	.LVL75:
 178:track_edit.c  ****       note_off(0); // if something -was- playing, kill it
 919               		.loc 1 178 33 discriminator 2 view .LVU256
 920 040a 8111      		cpse r24,__zero_reg__
 921 040c 00C0      		rjmp .L46
 922               	.L47:
 234:track_edit.c  ****       if (in_stepwrite_mode) {
 923               		.loc 1 234 5 is_stmt 1 view .LVU257
 234:track_edit.c  ****       if (in_stepwrite_mode) {
 924               		.loc 1 234 9 is_stmt 0 view .LVU258
 925 040e 87E1      		ldi r24,lo8(23)
 926 0410 0E94 0000 		call just_pressed
 927               	.LVL76:
 234:track_edit.c  ****       if (in_stepwrite_mode) {
 928               		.loc 1 234 8 view .LVU259
 929 0414 8823      		tst r24
 930 0416 01F0      		breq .L59
 235:track_edit.c  ****         if (curr_track_index + 1 < TRACK_SIZE) {
 931               		.loc 1 235 7 is_stmt 1 view .LVU260
 235:track_edit.c  ****         if (curr_track_index + 1 < TRACK_SIZE) {
 932               		.loc 1 235 10 is_stmt 0 view .LVU261
 933 0418 8091 0000 		lds r24,in_stepwrite_mode
 934 041c 8823      		tst r24
 935 041e 01F0      		breq .L60
 236:track_edit.c  ****           // set an EOT marker if necc.
 936               		.loc 1 236 9 is_stmt 1 view .LVU262
 236:track_edit.c  ****           // set an EOT marker if necc.
 937               		.loc 1 236 34 is_stmt 0 view .LVU263
 938 0420 8091 0000 		lds r24,curr_track_index
 236:track_edit.c  ****           // set an EOT marker if necc.
 939               		.loc 1 236 12 view .LVU264
 940 0424 8F30      		cpi r24,lo8(15)
 941 0426 00F4      		brsh .L61
 238:track_edit.c  ****         }
 942               		.loc 1 238 11 is_stmt 1 view .LVU265
 238:track_edit.c  ****         }
 943               		.loc 1 238 39 is_stmt 0 view .LVU266
 944 0428 E091 0000 		lds r30,curr_track_index
 945 042c F0E0      		ldi r31,0
 238:track_edit.c  ****         }
 946               		.loc 1 238 44 view .LVU267
 947 042e EE0F      		lsl r30
 948 0430 FF1F      		rol r31
 949 0432 E050      		subi r30,lo8(-(track_buff+2))
 950 0434 F040      		sbci r31,hi8(-(track_buff+2))
 951 0436 1183      		std Z+1,r17
 952 0438 0083      		st Z,r16
 953               	.L61:
 240:track_edit.c  ****         // stop the mode, and any playing
 954               		.loc 1 240 9 is_stmt 1 view .LVU268
 240:track_edit.c  ****         // stop the mode, and any playing
 955               		.loc 1 240 19 is_stmt 0 view .LVU269
 956 043a F092 0000 		sts curr_patt+1,r15
 957 043e E092 0000 		sts curr_patt,r14
 242:track_edit.c  ****         clear_led(LED_DONE);
 958               		.loc 1 242 9 is_stmt 1 view .LVU270
 959 0442 0E94 0000 		call stop_track_stepwrite_mode
 960               	.LVL77:
 243:track_edit.c  ****       }
 961               		.loc 1 243 9 view .LVU271
 962 0446 80E0      		ldi r24,0
 963 0448 0E94 0000 		call clear_led
 964               	.LVL78:
 965               	.L60:
 246:track_edit.c  ****     }
 966               		.loc 1 246 7 view .LVU272
 967 044c 6091 0000 		lds r22,track_location
 968 0450 8091 0000 		lds r24,track_bank
 969 0454 0E94 0000 		call write_track
 970               	.LVL79:
 971               	.L59:
 251:track_edit.c  ****       if (curr_patt != END_OF_TRACK) {
 972               		.loc 1 251 5 view .LVU273
 251:track_edit.c  ****       if (curr_patt != END_OF_TRACK) {
 973               		.loc 1 251 8 is_stmt 0 view .LVU274
 974 0458 8091 0000 		lds r24,in_stepwrite_mode
 975 045c 8823      		tst r24
 976 045e 01F4      		brne .+2
 977 0460 00C0      		rjmp .L63
 252:track_edit.c  ****         // handle RAS keypresses -> modifications to current pattern
 978               		.loc 1 252 7 is_stmt 1 view .LVU275
 252:track_edit.c  ****         // handle RAS keypresses -> modifications to current pattern
 979               		.loc 1 252 10 is_stmt 0 view .LVU276
 980 0462 8091 0000 		lds r24,curr_patt
 981 0466 9091 0000 		lds r25,curr_patt+1
 982 046a 0196      		adiw r24,1
 983 046c 01F4      		brne .+2
 984 046e 00C0      		rjmp .L65
 255:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_REST_FLAG);
 985               		.loc 1 255 9 is_stmt 1 view .LVU277
 255:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_REST_FLAG);
 986               		.loc 1 255 13 is_stmt 0 view .LVU278
 987 0470 84E1      		ldi r24,lo8(20)
 988 0472 0E94 0000 		call just_pressed
 989               	.LVL80:
 255:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_REST_FLAG);
 990               		.loc 1 255 12 view .LVU279
 991 0476 8823      		tst r24
 992 0478 01F0      		breq .L66
 256:track_edit.c  ****           all_rest = (curr_patt & TRACK_REST_FLAG) >> 8;
 993               		.loc 1 256 11 is_stmt 1 view .LVU280
 256:track_edit.c  ****           all_rest = (curr_patt & TRACK_REST_FLAG) >> 8;
 994               		.loc 1 256 53 is_stmt 0 view .LVU281
 995 047a E091 0000 		lds r30,curr_track_index
 996 047e F0E0      		ldi r31,0
 997 0480 EE0F      		lsl r30
 998 0482 FF1F      		rol r31
 999 0484 E050      		subi r30,lo8(-(track_buff))
 1000 0486 F040      		sbci r31,hi8(-(track_buff))
 1001 0488 8081      		ld r24,Z
 1002 048a 9181      		ldd r25,Z+1
 1003 048c 9058      		subi r25,-128
 1004 048e 9183      		std Z+1,r25
 1005 0490 8083      		st Z,r24
 256:track_edit.c  ****           all_rest = (curr_patt & TRACK_REST_FLAG) >> 8;
 1006               		.loc 1 256 21 view .LVU282
 1007 0492 9093 0000 		sts curr_patt+1,r25
 1008 0496 8093 0000 		sts curr_patt,r24
 257:track_edit.c  ****         }
 1009               		.loc 1 257 11 is_stmt 1 view .LVU283
 257:track_edit.c  ****         }
 1010               		.loc 1 257 52 is_stmt 0 view .LVU284
 1011 049a 892F      		mov r24,r25
 1012 049c 8078      		andi r24,lo8(-128)
 257:track_edit.c  ****         }
 1013               		.loc 1 257 20 view .LVU285
 1014 049e 8093 0000 		sts all_rest,r24
 1015               	.L66:
 259:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_ACCENT_FLAG);
 1016               		.loc 1 259 9 is_stmt 1 view .LVU286
 259:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_ACCENT_FLAG);
 1017               		.loc 1 259 13 is_stmt 0 view .LVU287
 1018 04a2 85E1      		ldi r24,lo8(21)
 1019 04a4 0E94 0000 		call just_pressed
 1020               	.LVL81:
 259:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_ACCENT_FLAG);
 1021               		.loc 1 259 12 view .LVU288
 1022 04a8 8823      		tst r24
 1023 04aa 01F0      		breq .L67
 260:track_edit.c  ****           all_accent = (curr_patt & TRACK_ACCENT_FLAG) >> 8;
 1024               		.loc 1 260 11 is_stmt 1 view .LVU289
 260:track_edit.c  ****           all_accent = (curr_patt & TRACK_ACCENT_FLAG) >> 8;
 1025               		.loc 1 260 53 is_stmt 0 view .LVU290
 1026 04ac E091 0000 		lds r30,curr_track_index
 1027 04b0 F0E0      		ldi r31,0
 1028 04b2 EE0F      		lsl r30
 1029 04b4 FF1F      		rol r31
 1030 04b6 E050      		subi r30,lo8(-(track_buff))
 1031 04b8 F040      		sbci r31,hi8(-(track_buff))
 1032 04ba 8081      		ld r24,Z
 1033 04bc 9181      		ldd r25,Z+1
 1034 04be 20E4      		ldi r18,64
 1035 04c0 9227      		eor r25,r18
 1036 04c2 9183      		std Z+1,r25
 1037 04c4 8083      		st Z,r24
 260:track_edit.c  ****           all_accent = (curr_patt & TRACK_ACCENT_FLAG) >> 8;
 1038               		.loc 1 260 21 view .LVU291
 1039 04c6 9093 0000 		sts curr_patt+1,r25
 1040 04ca 8093 0000 		sts curr_patt,r24
 261:track_edit.c  ****         }
 1041               		.loc 1 261 11 is_stmt 1 view .LVU292
 261:track_edit.c  ****         }
 1042               		.loc 1 261 56 is_stmt 0 view .LVU293
 1043 04ce 892F      		mov r24,r25
 1044 04d0 8074      		andi r24,lo8(64)
 261:track_edit.c  ****         }
 1045               		.loc 1 261 22 view .LVU294
 1046 04d2 8093 0000 		sts all_accent,r24
 1047               	.L67:
 263:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_SLIDE_FLAG);
 1048               		.loc 1 263 9 is_stmt 1 view .LVU295
 263:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_SLIDE_FLAG);
 1049               		.loc 1 263 13 is_stmt 0 view .LVU296
 1050 04d6 86E1      		ldi r24,lo8(22)
 1051 04d8 0E94 0000 		call just_pressed
 1052               	.LVL82:
 263:track_edit.c  ****           curr_patt = (track_buff[curr_track_index] ^= TRACK_SLIDE_FLAG);
 1053               		.loc 1 263 12 view .LVU297
 1054 04dc 8823      		tst r24
 1055 04de 01F0      		breq .L68
 264:track_edit.c  ****           all_slide = (curr_patt & TRACK_SLIDE_FLAG) >> 8;
 1056               		.loc 1 264 11 is_stmt 1 view .LVU298
 264:track_edit.c  ****           all_slide = (curr_patt & TRACK_SLIDE_FLAG) >> 8;
 1057               		.loc 1 264 53 is_stmt 0 view .LVU299
 1058 04e0 E091 0000 		lds r30,curr_track_index
 1059 04e4 F0E0      		ldi r31,0
 1060 04e6 EE0F      		lsl r30
 1061 04e8 FF1F      		rol r31
 1062 04ea E050      		subi r30,lo8(-(track_buff))
 1063 04ec F040      		sbci r31,hi8(-(track_buff))
 1064 04ee 8081      		ld r24,Z
 1065 04f0 9181      		ldd r25,Z+1
 1066 04f2 20E2      		ldi r18,32
 1067 04f4 9227      		eor r25,r18
 1068 04f6 9183      		std Z+1,r25
 1069 04f8 8083      		st Z,r24
 264:track_edit.c  ****           all_slide = (curr_patt & TRACK_SLIDE_FLAG) >> 8;
 1070               		.loc 1 264 21 view .LVU300
 1071 04fa 9093 0000 		sts curr_patt+1,r25
 1072 04fe 8093 0000 		sts curr_patt,r24
 265:track_edit.c  ****         }
 1073               		.loc 1 265 11 is_stmt 1 view .LVU301
 265:track_edit.c  ****         }
 1074               		.loc 1 265 54 is_stmt 0 view .LVU302
 1075 0502 892F      		mov r24,r25
 1076 0504 8072      		andi r24,lo8(32)
 265:track_edit.c  ****         }
 1077               		.loc 1 265 21 view .LVU303
 1078 0506 8093 0000 		sts all_slide,r24
 1079               	.L68:
 269:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 1080               		.loc 1 269 9 is_stmt 1 view .LVU304
 269:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 1081               		.loc 1 269 13 is_stmt 0 view .LVU305
 1082 050a 8FE0      		ldi r24,lo8(15)
 1083 050c 0E94 0000 		call is_pressed
 1084               	.LVL83:
 269:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 1085               		.loc 1 269 12 view .LVU306
 1086 0510 8823      		tst r24
 1087 0512 01F4      		brne .+2
 1088 0514 00C0      		rjmp .L69
 1089               	.L72:
 1090               	.LBB6:
 270:track_edit.c  **** 
 1091               		.loc 1 270 11 is_stmt 1 view .LVU307
 270:track_edit.c  **** 
 1092               		.loc 1 270 30 is_stmt 0 view .LVU308
 1093 0516 0E94 0000 		call get_lowest_notekey_pressed
 1094               	.LVL84:
 270:track_edit.c  **** 
 1095               		.loc 1 270 20 view .LVU309
 1096 051a C82F      		mov r28,r24
 1097 051c 880F      		lsl r24
 1098 051e DD0B      		sbc r29,r29
 1099               	.LVL85:
 272:track_edit.c  ****             clear_blinking_leds();
 1100               		.loc 1 272 11 is_stmt 1 view .LVU310
 272:track_edit.c  ****             clear_blinking_leds();
 1101               		.loc 1 272 15 is_stmt 0 view .LVU311
 1102 0520 8FE0      		ldi r24,lo8(15)
 1103 0522 0E94 0000 		call just_pressed
 1104               	.LVL86:
 272:track_edit.c  ****             clear_blinking_leds();
 1105               		.loc 1 272 14 view .LVU312
 1106 0526 8111      		cpse r24,__zero_reg__
 1107 0528 00C0      		rjmp .L70
 272:track_edit.c  ****             clear_blinking_leds();
 1108               		.loc 1 272 39 discriminator 1 view .LVU313
 1109 052a 8EE0      		ldi r24,lo8(14)
 1110 052c 0E94 0000 		call just_pressed
 1111               	.LVL87:
 272:track_edit.c  ****             clear_blinking_leds();
 1112               		.loc 1 272 36 discriminator 1 view .LVU314
 1113 0530 8823      		tst r24
 1114 0532 01F0      		breq .L74
 1115               	.L70:
 273:track_edit.c  ****             clear_notekey_leds();
 1116               		.loc 1 273 13 is_stmt 1 view .LVU315
 1117 0534 0E94 0000 		call clear_blinking_leds
 1118               	.LVL88:
 274:track_edit.c  ****             clear_led(LED_UP);
 1119               		.loc 1 274 13 view .LVU316
 1120 0538 0E94 0000 		call clear_notekey_leds
 1121               	.LVL89:
 275:track_edit.c  ****             clear_led(LED_DOWN);
 1122               		.loc 1 275 13 view .LVU317
 1123 053c 83E0      		ldi r24,lo8(3)
 1124 053e 0E94 0000 		call clear_led
 1125               	.LVL90:
 276:track_edit.c  ****           }
 1126               		.loc 1 276 13 view .LVU318
 1127 0542 84E0      		ldi r24,lo8(4)
 1128 0544 0E94 0000 		call clear_led
 1129               	.LVL91:
 1130               	.L74:
 279:track_edit.c  ****             set_led(LED_UP);
 1131               		.loc 1 279 11 view .LVU319
 279:track_edit.c  ****             set_led(LED_UP);
 1132               		.loc 1 279 15 is_stmt 0 view .LVU320
 1133 0548 8FE0      		ldi r24,lo8(15)
 1134 054a 0E94 0000 		call is_pressed
 1135               	.LVL92:
 279:track_edit.c  ****             set_led(LED_UP);
 1136               		.loc 1 279 14 view .LVU321
 1137 054e 8823      		tst r24
 1138 0550 01F4      		brne .+2
 1139 0552 00C0      		rjmp .L75
 280:track_edit.c  **** 
 1140               		.loc 1 280 13 is_stmt 1 view .LVU322
 1141 0554 83E0      		ldi r24,lo8(3)
 1142 0556 0E94 0000 		call set_led
 1143               	.LVL93:
 282:track_edit.c  ****               clear_blinking_leds();
 1144               		.loc 1 282 13 view .LVU323
 282:track_edit.c  ****               clear_blinking_leds();
 1145               		.loc 1 282 16 is_stmt 0 view .LVU324
 1146 055a CF3F      		cpi r28,-1
 1147 055c DC07      		cpc r29,r28
 1148 055e 01F0      		breq .L76
 283:track_edit.c  ****               // set the new pitchshift
 1149               		.loc 1 283 15 is_stmt 1 view .LVU325
 1150 0560 0E94 0000 		call clear_blinking_leds
 1151               	.LVL94:
 285:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1152               		.loc 1 285 15 view .LVU326
 285:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1153               		.loc 1 285 38 is_stmt 0 view .LVU327
 1154 0564 2091 0000 		lds r18,curr_patt
 1155 0568 3091 0000 		lds r19,curr_patt+1
 1156 056c 307E      		andi r19,224
 285:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1157               		.loc 1 285 59 view .LVU328
 1158 056e DC2F      		mov r29,r28
 1159 0570 CC27      		clr r28
 1160               	.LVL95:
 285:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1161               		.loc 1 285 48 view .LVU329
 1162 0572 C22B      		or r28,r18
 1163 0574 D32B      		or r29,r19
 285:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1164               		.loc 1 285 25 view .LVU330
 1165 0576 D093 0000 		sts curr_patt+1,r29
 1166 057a C093 0000 		sts curr_patt,r28
 286:track_edit.c  ****             }
 1167               		.loc 1 286 15 is_stmt 1 view .LVU331
 286:track_edit.c  ****             }
 1168               		.loc 1 286 25 is_stmt 0 view .LVU332
 1169 057e E091 0000 		lds r30,curr_track_index
 1170 0582 F0E0      		ldi r31,0
 286:track_edit.c  ****             }
 1171               		.loc 1 286 44 view .LVU333
 1172 0584 EE0F      		lsl r30
 1173 0586 FF1F      		rol r31
 1174 0588 E050      		subi r30,lo8(-(track_buff))
 1175 058a F040      		sbci r31,hi8(-(track_buff))
 1176 058c D183      		std Z+1,r29
 1177 058e C083      		st Z,r28
 1178               	.L76:
 289:track_edit.c  ****             set_notekey_led_blink(curr_pitch_shift);
 1179               		.loc 1 289 13 is_stmt 1 view .LVU334
 289:track_edit.c  ****             set_notekey_led_blink(curr_pitch_shift);
 1180               		.loc 1 289 32 is_stmt 0 view .LVU335
 1181 0590 8091 0000 		lds r24,curr_patt
 1182 0594 9091 0000 		lds r25,curr_patt+1
 1183 0598 0E94 0000 		call get_pitchshift_from_patt
 1184               	.LVL96:
 289:track_edit.c  ****             set_notekey_led_blink(curr_pitch_shift);
 1185               		.loc 1 289 30 view .LVU336
 1186 059c 8093 0000 		sts curr_pitch_shift,r24
 290:track_edit.c  ****           } else if (is_pressed(KEY_DOWN)) {
 1187               		.loc 1 290 13 is_stmt 1 view .LVU337
 1188               	.L150:
 303:track_edit.c  ****           }
 1189               		.loc 1 303 13 is_stmt 0 view .LVU338
 1190 05a0 0E94 0000 		call set_notekey_led_blink
 1191               	.LVL97:
 1192               	.L65:
 303:track_edit.c  ****           }
 1193               		.loc 1 303 13 view .LVU339
 1194               	.LBE6:
 317:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 1195               		.loc 1 317 7 is_stmt 1 view .LVU340
 317:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 1196               		.loc 1 317 13 is_stmt 0 view .LVU341
 1197 05a4 8FE0      		ldi r24,lo8(15)
 1198 05a6 0E94 0000 		call is_pressed
 1199               	.LVL98:
 317:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 1200               		.loc 1 317 10 view .LVU342
 1201 05aa 8111      		cpse r24,__zero_reg__
 1202 05ac 00C0      		rjmp .L63
 317:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 1203               		.loc 1 317 35 discriminator 1 view .LVU343
 1204 05ae 8EE0      		ldi r24,lo8(14)
 1205 05b0 0E94 0000 		call is_pressed
 1206               	.LVL99:
 317:track_edit.c  ****         i = get_lowest_numkey_just_pressed();
 1207               		.loc 1 317 11 discriminator 1 view .LVU344
 1208 05b4 8111      		cpse r24,__zero_reg__
 1209 05b6 00C0      		rjmp .L63
 1210               	.LBB7:
 318:track_edit.c  ****         if ((i != 0) || has_bank_knob_changed()) {
 1211               		.loc 1 318 9 is_stmt 1 view .LVU345
 318:track_edit.c  ****         if ((i != 0) || has_bank_knob_changed()) {
 1212               		.loc 1 318 13 is_stmt 0 view .LVU346
 1213 05b8 0E94 0000 		call get_lowest_numkey_just_pressed
 1214               	.LVL100:
 1215 05bc C82F      		mov r28,r24
 1216               	.LVL101:
 319:track_edit.c  ****           clear_numkey_leds();
 1217               		.loc 1 319 9 is_stmt 1 view .LVU347
 319:track_edit.c  ****           clear_numkey_leds();
 1218               		.loc 1 319 12 is_stmt 0 view .LVU348
 1219 05be 8823      		tst r24
 1220 05c0 01F4      		brne .+2
 1221 05c2 00C0      		rjmp .L82
 1222               	.LVL102:
 1223               	.L85:
 320:track_edit.c  ****           clear_bank_leds();
 1224               		.loc 1 320 11 is_stmt 1 view .LVU349
 1225 05c4 0E94 0000 		call clear_numkey_leds
 1226               	.LVL103:
 321:track_edit.c  ****           if (i == 0) {
 1227               		.loc 1 321 11 view .LVU350
 1228 05c8 0E94 0000 		call clear_bank_leds
 1229               	.LVL104:
 322:track_edit.c  ****             if (curr_patt == END_OF_TRACK)
 1230               		.loc 1 322 11 view .LVU351
 322:track_edit.c  ****             if (curr_patt == END_OF_TRACK)
 1231               		.loc 1 322 14 is_stmt 0 view .LVU352
 1232 05cc CC23      		tst r28
 1233 05ce 01F4      		brne .+2
 1234 05d0 00C0      		rjmp .L83
 328:track_edit.c  ****           }
 1235               		.loc 1 328 13 is_stmt 1 view .LVU353
 328:track_edit.c  ****           }
 1236               		.loc 1 328 14 is_stmt 0 view .LVU354
 1237 05d2 C150      		subi r28,lo8(-(-1))
 1238               	.LVL105:
 328:track_edit.c  ****           }
 1239               		.loc 1 328 14 view .LVU355
 1240 05d4 00C0      		rjmp .L87
 1241               	.LVL106:
 1242               	.L51:
 328:track_edit.c  ****           }
 1243               		.loc 1 328 14 view .LVU356
 1244               	.LBE7:
 189:track_edit.c  ****         } else { // just pressed key prev
 1245               		.loc 1 189 13 is_stmt 1 view .LVU357
 189:track_edit.c  ****         } else { // just pressed key prev
 1246               		.loc 1 189 29 is_stmt 0 view .LVU358
 1247 05d6 8091 0000 		lds r24,curr_track_index
 1248 05da 8F5F      		subi r24,lo8(-(1))
 1249               	.L149:
 198:track_edit.c  ****           }
 1250               		.loc 1 198 29 view .LVU359
 1251 05dc 8093 0000 		sts curr_track_index,r24
 1252 05e0 00C0      		rjmp .L52
 1253               	.L49:
 192:track_edit.c  ****             // search thru the buffer -forward- to find the EOT
 1254               		.loc 1 192 11 is_stmt 1 view .LVU360
 192:track_edit.c  ****             // search thru the buffer -forward- to find the EOT
 1255               		.loc 1 192 32 is_stmt 0 view .LVU361
 1256 05e2 8091 0000 		lds r24,curr_track_index
 192:track_edit.c  ****             // search thru the buffer -forward- to find the EOT
 1257               		.loc 1 192 14 view .LVU362
 1258 05e6 8111      		cpse r24,__zero_reg__
 1259 05e8 00C0      		rjmp .L143
 1260               	.L53:
 194:track_edit.c  ****                    (track_buff[curr_track_index] != END_OF_TRACK))
 1261               		.loc 1 194 42 view .LVU363
 1262 05ea 8091 0000 		lds r24,curr_track_index
 194:track_edit.c  ****                    (track_buff[curr_track_index] != END_OF_TRACK))
 1263               		.loc 1 194 19 view .LVU364
 1264 05ee 8F30      		cpi r24,lo8(15)
 1265 05f0 00F4      		brsh .L52
 195:track_edit.c  ****               curr_track_index++;
 1266               		.loc 1 195 31 discriminator 1 view .LVU365
 1267 05f2 E091 0000 		lds r30,curr_track_index
 1268 05f6 F0E0      		ldi r31,0
 1269 05f8 EE0F      		lsl r30
 1270 05fa FF1F      		rol r31
 1271 05fc E050      		subi r30,lo8(-(track_buff))
 1272 05fe F040      		sbci r31,hi8(-(track_buff))
 1273 0600 8081      		ld r24,Z
 1274 0602 9181      		ldd r25,Z+1
 194:track_edit.c  ****                    (track_buff[curr_track_index] != END_OF_TRACK))
 1275               		.loc 1 194 56 discriminator 1 view .LVU366
 1276 0604 0196      		adiw r24,1
 1277 0606 01F4      		brne .L56
 1278               	.L52:
 208:track_edit.c  **** 
 1279               		.loc 1 208 7 is_stmt 1 view .LVU367
 208:track_edit.c  **** 
 1280               		.loc 1 208 29 is_stmt 0 view .LVU368
 1281 0608 E091 0000 		lds r30,curr_track_index
 1282 060c F0E0      		ldi r31,0
 1283 060e EE0F      		lsl r30
 1284 0610 FF1F      		rol r31
 1285 0612 E050      		subi r30,lo8(-(track_buff))
 1286 0614 F040      		sbci r31,hi8(-(track_buff))
 1287 0616 8081      		ld r24,Z
 1288 0618 9181      		ldd r25,Z+1
 208:track_edit.c  **** 
 1289               		.loc 1 208 17 view .LVU369
 1290 061a 9093 0000 		sts curr_patt+1,r25
 1291 061e 8093 0000 		sts curr_patt,r24
 210:track_edit.c  **** 
 1292               		.loc 1 210 7 is_stmt 1 view .LVU370
 210:track_edit.c  **** 
 1293               		.loc 1 210 27 is_stmt 0 view .LVU371
 1294 0622 1092 0000 		sts play_loaded_pattern,__zero_reg__
 212:track_edit.c  ****         /*
 1295               		.loc 1 212 7 is_stmt 1 view .LVU372
 212:track_edit.c  ****         /*
 1296               		.loc 1 212 10 is_stmt 0 view .LVU373
 1297 0626 0196      		adiw r24,1
 1298 0628 01F4      		brne .+2
 1299 062a 00C0      		rjmp .L47
 220:track_edit.c  **** 
 1300               		.loc 1 220 9 is_stmt 1 view .LVU374
 220:track_edit.c  **** 
 1301               		.loc 1 220 28 is_stmt 0 view .LVU375
 1302 062c 0E94 0000 		call load_curr_patt
 1303               	.LVL107:
 220:track_edit.c  **** 
 1304               		.loc 1 220 26 view .LVU376
 1305 0630 8093 0000 		sts curr_pitch_shift,r24
 223:track_edit.c  ****         // wait for the next 'note on'
 1306               		.loc 1 223 9 is_stmt 1 view .LVU377
 223:track_edit.c  ****         // wait for the next 'note on'
 1307               		.loc 1 223 28 is_stmt 0 view .LVU378
 1308 0634 1092 0000 		sts curr_pattern_index,__zero_reg__
 225:track_edit.c  ****           ;
 1309               		.loc 1 225 9 is_stmt 1 view .LVU379
 1310               	.L58:
 226:track_edit.c  **** 
 1311               		.loc 1 226 11 discriminator 1 view .LVU380
 225:track_edit.c  ****           ;
 1312               		.loc 1 225 29 is_stmt 0 discriminator 1 view .LVU381
 1313 0638 8091 0000 		lds r24,note_counter
 225:track_edit.c  ****           ;
 1314               		.loc 1 225 15 discriminator 1 view .LVU382
 1315 063c 80FD      		sbrc r24,0
 1316 063e 00C0      		rjmp .L58
 229:track_edit.c  ****       }
 1317               		.loc 1 229 9 is_stmt 1 view .LVU383
 229:track_edit.c  ****       }
 1318               		.loc 1 229 29 is_stmt 0 view .LVU384
 1319 0640 81E0      		ldi r24,lo8(1)
 1320 0642 8093 0000 		sts play_loaded_pattern,r24
 1321 0646 00C0      		rjmp .L47
 1322               	.L56:
 196:track_edit.c  ****           } else {
 1323               		.loc 1 196 15 is_stmt 1 view .LVU385
 196:track_edit.c  ****           } else {
 1324               		.loc 1 196 31 is_stmt 0 view .LVU386
 1325 0648 8091 0000 		lds r24,curr_track_index
 1326 064c 8F5F      		subi r24,lo8(-(1))
 1327 064e 8093 0000 		sts curr_track_index,r24
 1328 0652 00C0      		rjmp .L53
 1329               	.L143:
 198:track_edit.c  ****           }
 1330               		.loc 1 198 13 is_stmt 1 view .LVU387
 198:track_edit.c  ****           }
 1331               		.loc 1 198 29 is_stmt 0 view .LVU388
 1332 0654 8091 0000 		lds r24,curr_track_index
 1333 0658 8150      		subi r24,lo8(-(-1))
 1334 065a 00C0      		rjmp .L149
 1335               	.L48:
 201:track_edit.c  ****         // not in stepwrite mode, starting stepwrite mode
 1336               		.loc 1 201 14 is_stmt 1 view .LVU389
 201:track_edit.c  ****         // not in stepwrite mode, starting stepwrite mode
 1337               		.loc 1 201 18 is_stmt 0 view .LVU390
 1338 065c 88E0      		ldi r24,lo8(8)
 1339 065e 0E94 0000 		call just_pressed
 1340               	.LVL108:
 201:track_edit.c  ****         // not in stepwrite mode, starting stepwrite mode
 1341               		.loc 1 201 17 view .LVU391
 1342 0662 8823      		tst r24
 1343 0664 01F0      		breq .L52
 203:track_edit.c  ****         curr_track_index = 0;
 1344               		.loc 1 203 9 is_stmt 1 view .LVU392
 1345 0666 0E94 0000 		call start_track_stepwrite_mode
 1346               	.LVL109:
 1347 066a 00C0      		rjmp .L148
 1348               	.L69:
 269:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 1349               		.loc 1 269 35 is_stmt 0 discriminator 1 view .LVU393
 1350 066c 8EE0      		ldi r24,lo8(14)
 1351 066e 0E94 0000 		call is_pressed
 1352               	.LVL110:
 269:track_edit.c  ****           uint16_t notekey = get_lowest_notekey_pressed();
 1353               		.loc 1 269 32 discriminator 1 view .LVU394
 1354 0672 8111      		cpse r24,__zero_reg__
 1355 0674 00C0      		rjmp .L72
 306:track_edit.c  ****             // clear up LEDs if not shifting
 1356               		.loc 1 306 11 is_stmt 1 view .LVU395
 306:track_edit.c  ****             // clear up LEDs if not shifting
 1357               		.loc 1 306 15 is_stmt 0 view .LVU396
 1358 0676 8FE0      		ldi r24,lo8(15)
 1359 0678 0E94 0000 		call just_released
 1360               	.LVL111:
 306:track_edit.c  ****             // clear up LEDs if not shifting
 1361               		.loc 1 306 14 view .LVU397
 1362 067c 8823      		tst r24
 1363 067e 01F0      		breq .L79
 1364               	.L80:
 308:track_edit.c  ****             clear_led(LED_DOWN);
 1365               		.loc 1 308 13 is_stmt 1 view .LVU398
 1366 0680 83E0      		ldi r24,lo8(3)
 1367 0682 0E94 0000 		call clear_led
 1368               	.LVL112:
 309:track_edit.c  ****             clear_blinking_leds();
 1369               		.loc 1 309 13 view .LVU399
 1370 0686 84E0      		ldi r24,lo8(4)
 1371 0688 0E94 0000 		call clear_led
 1372               	.LVL113:
 310:track_edit.c  ****           }
 1373               		.loc 1 310 13 view .LVU400
 1374 068c 0E94 0000 		call clear_blinking_leds
 1375               	.LVL114:
 1376 0690 00C0      		rjmp .L65
 1377               	.LVL115:
 1378               	.L75:
 1379               	.LBB8:
 291:track_edit.c  ****             set_led(LED_DOWN);
 1380               		.loc 1 291 18 view .LVU401
 291:track_edit.c  ****             set_led(LED_DOWN);
 1381               		.loc 1 291 22 is_stmt 0 view .LVU402
 1382 0692 8EE0      		ldi r24,lo8(14)
 1383 0694 0E94 0000 		call is_pressed
 1384               	.LVL116:
 291:track_edit.c  ****             set_led(LED_DOWN);
 1385               		.loc 1 291 21 view .LVU403
 1386 0698 8823      		tst r24
 1387 069a 01F4      		brne .+2
 1388 069c 00C0      		rjmp .L65
 292:track_edit.c  **** 
 1389               		.loc 1 292 13 is_stmt 1 view .LVU404
 1390 069e 84E0      		ldi r24,lo8(4)
 1391 06a0 0E94 0000 		call set_led
 1392               	.LVL117:
 294:track_edit.c  ****               clear_blinking_leds();
 1393               		.loc 1 294 13 view .LVU405
 294:track_edit.c  ****               clear_blinking_leds();
 1394               		.loc 1 294 16 is_stmt 0 view .LVU406
 1395 06a4 CF3F      		cpi r28,-1
 1396 06a6 DC07      		cpc r29,r28
 1397 06a8 01F0      		breq .L78
 295:track_edit.c  ****               // set the new pitchshift
 1398               		.loc 1 295 15 is_stmt 1 view .LVU407
 1399 06aa 0E94 0000 		call clear_blinking_leds
 1400               	.LVL118:
 297:track_edit.c  ****                   (curr_patt & 0xE0FF) | (((notekey - OCTAVE) & 0x1F) << 8);
 1401               		.loc 1 297 15 view .LVU408
 298:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1402               		.loc 1 298 53 is_stmt 0 view .LVU409
 1403 06ae 2C97      		sbiw r28,12
 1404               	.LVL119:
 298:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1405               		.loc 1 298 71 view .LVU410
 1406 06b0 DC2F      		mov r29,r28
 1407 06b2 CC27      		clr r28
 1408               	.LVL120:
 298:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1409               		.loc 1 298 71 view .LVU411
 1410 06b4 CC27      		clr r28
 1411 06b6 DF71      		andi r29,31
 298:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1412               		.loc 1 298 30 view .LVU412
 1413 06b8 8091 0000 		lds r24,curr_patt
 1414 06bc 9091 0000 		lds r25,curr_patt+1
 1415 06c0 907E      		andi r25,224
 298:track_edit.c  ****               track_buff[curr_track_index] = curr_patt;
 1416               		.loc 1 298 40 view .LVU413
 1417 06c2 C82B      		or r28,r24
 1418 06c4 D92B      		or r29,r25
 297:track_edit.c  ****                   (curr_patt & 0xE0FF) | (((notekey - OCTAVE) & 0x1F) << 8);
 1419               		.loc 1 297 25 view .LVU414
 1420 06c6 D093 0000 		sts curr_patt+1,r29
 1421 06ca C093 0000 		sts curr_patt,r28
 299:track_edit.c  ****             }
 1422               		.loc 1 299 15 is_stmt 1 view .LVU415
 299:track_edit.c  ****             }
 1423               		.loc 1 299 25 is_stmt 0 view .LVU416
 1424 06ce E091 0000 		lds r30,curr_track_index
 1425 06d2 F0E0      		ldi r31,0
 299:track_edit.c  ****             }
 1426               		.loc 1 299 44 view .LVU417
 1427 06d4 EE0F      		lsl r30
 1428 06d6 FF1F      		rol r31
 1429 06d8 E050      		subi r30,lo8(-(track_buff))
 1430 06da F040      		sbci r31,hi8(-(track_buff))
 1431 06dc D183      		std Z+1,r29
 1432 06de C083      		st Z,r28
 1433               	.L78:
 302:track_edit.c  ****             set_notekey_led_blink(OCTAVE + curr_pitch_shift);
 1434               		.loc 1 302 13 is_stmt 1 view .LVU418
 302:track_edit.c  ****             set_notekey_led_blink(OCTAVE + curr_pitch_shift);
 1435               		.loc 1 302 32 is_stmt 0 view .LVU419
 1436 06e0 8091 0000 		lds r24,curr_patt
 1437 06e4 9091 0000 		lds r25,curr_patt+1
 1438 06e8 0E94 0000 		call get_pitchshift_from_patt
 1439               	.LVL121:
 302:track_edit.c  ****             set_notekey_led_blink(OCTAVE + curr_pitch_shift);
 1440               		.loc 1 302 30 view .LVU420
 1441 06ec 8093 0000 		sts curr_pitch_shift,r24
 303:track_edit.c  ****           }
 1442               		.loc 1 303 13 is_stmt 1 view .LVU421
 1443 06f0 845F      		subi r24,lo8(-(12))
 1444 06f2 00C0      		rjmp .L150
 1445               	.L79:
 303:track_edit.c  ****           }
 1446               		.loc 1 303 13 is_stmt 0 view .LVU422
 1447               	.LBE8:
 306:track_edit.c  ****             // clear up LEDs if not shifting
 1448               		.loc 1 306 40 discriminator 1 view .LVU423
 1449 06f4 8EE0      		ldi r24,lo8(14)
 1450 06f6 0E94 0000 		call just_released
 1451               	.LVL122:
 306:track_edit.c  ****             // clear up LEDs if not shifting
 1452               		.loc 1 306 37 discriminator 1 view .LVU424
 1453 06fa 8111      		cpse r24,__zero_reg__
 1454 06fc 00C0      		rjmp .L80
 1455 06fe 00C0      		rjmp .L65
 1456               	.LVL123:
 1457               	.L82:
 1458               	.LBB9:
 319:track_edit.c  ****           clear_numkey_leds();
 1459               		.loc 1 319 25 discriminator 1 view .LVU425
 1460 0700 0E94 0000 		call has_bank_knob_changed
 1461               	.LVL124:
 319:track_edit.c  ****           clear_numkey_leds();
 1462               		.loc 1 319 22 discriminator 1 view .LVU426
 1463 0704 8111      		cpse r24,__zero_reg__
 1464 0706 00C0      		rjmp .L85
 1465               	.L86:
 342:track_edit.c  **** 
 1466               		.loc 1 342 9 is_stmt 1 view .LVU427
 1467 0708 0E94 0000 		call display_curr_pitch_shift_ud
 1468               	.LVL125:
 345:track_edit.c  ****       }
 1469               		.loc 1 345 9 view .LVU428
 345:track_edit.c  ****       }
 1470               		.loc 1 345 42 is_stmt 0 view .LVU429
 1471 070c 8091 0000 		lds r24,curr_patt
 1472 0710 9091 0000 		lds r25,curr_patt+1
 1473 0714 8770      		andi r24,7
 1474 0716 9927      		clr r25
 345:track_edit.c  ****       }
 1475               		.loc 1 345 9 view .LVU430
 1476 0718 0196      		adiw r24,1
 1477 071a 0E94 0000 		call set_single_numkey_led
 1478               	.LVL126:
 1479               	.L63:
 345:track_edit.c  ****       }
 1480               		.loc 1 345 9 view .LVU431
 1481               	.LBE9:
 349:track_edit.c  ****       // while we're at it, show the pitch shift
 1482               		.loc 1 349 5 is_stmt 1 view .LVU432
 349:track_edit.c  ****       // while we're at it, show the pitch shift
 1483               		.loc 1 349 8 is_stmt 0 view .LVU433
 1484 071e 8091 0000 		lds r24,in_run_mode
 1485 0722 8823      		tst r24
 1486 0724 01F4      		brne .+2
 1487 0726 00C0      		rjmp .L88
 1488               	.LBB10:
 351:track_edit.c  **** 
 1489               		.loc 1 351 7 is_stmt 1 view .LVU434
 1490 0728 0E94 0000 		call display_curr_pitch_shift_ud
 1491               	.LVL127:
 354:track_edit.c  ****     }
 1492               		.loc 1 354 7 view .LVU435
 354:track_edit.c  ****     }
 1493               		.loc 1 354 40 is_stmt 0 view .LVU436
 1494 072c 8091 0000 		lds r24,curr_patt
 1495 0730 9091 0000 		lds r25,curr_patt+1
 1496 0734 8770      		andi r24,7
 1497 0736 9927      		clr r25
 354:track_edit.c  ****     }
 1498               		.loc 1 354 7 view .LVU437
 1499 0738 0196      		adiw r24,1
 1500 073a 0E94 0000 		call set_single_numkey_led
 1501               	.LVL128:
 1502 073e 00C0      		rjmp .L88
 1503               	.LVL129:
 1504               	.L83:
 354:track_edit.c  ****     }
 1505               		.loc 1 354 7 view .LVU438
 1506               	.LBE10:
 1507               	.LBB11:
 323:track_edit.c  ****               i = 0;
 1508               		.loc 1 323 13 is_stmt 1 view .LVU439
 323:track_edit.c  ****               i = 0;
 1509               		.loc 1 323 27 is_stmt 0 view .LVU440
 1510 0740 8091 0000 		lds r24,curr_patt
 1511 0744 9091 0000 		lds r25,curr_patt+1
 323:track_edit.c  ****               i = 0;
 1512               		.loc 1 323 16 view .LVU441
 1513 0748 8F3F      		cpi r24,-1
 1514 074a 9807      		cpc r25,r24
 1515 074c 01F0      		breq .L87
 326:track_edit.c  ****           } else {
 1516               		.loc 1 326 15 is_stmt 1 view .LVU442
 326:track_edit.c  ****           } else {
 1517               		.loc 1 326 17 is_stmt 0 view .LVU443
 1518 074e C82F      		mov r28,r24
 1519               	.LVL130:
 326:track_edit.c  ****           } else {
 1520               		.loc 1 326 17 view .LVU444
 1521 0750 C770      		andi r28,lo8(7)
 1522               	.LVL131:
 1523               	.L87:
 330:track_edit.c  ****           note_off(0);
 1524               		.loc 1 330 11 is_stmt 1 view .LVU445
 330:track_edit.c  ****           note_off(0);
 1525               		.loc 1 330 31 is_stmt 0 view .LVU446
 1526 0752 1092 0000 		sts play_loaded_pattern,__zero_reg__
 331:track_edit.c  ****           curr_patt = (bank << 3) | i;
 1527               		.loc 1 331 11 is_stmt 1 view .LVU447
 1528 0756 80E0      		ldi r24,0
 1529 0758 0E94 0000 		call note_off
 1530               	.LVL132:
 332:track_edit.c  ****           track_buff[curr_track_index] = curr_patt;
 1531               		.loc 1 332 11 view .LVU448
 332:track_edit.c  ****           track_buff[curr_track_index] = curr_patt;
 1532               		.loc 1 332 29 is_stmt 0 view .LVU449
 1533 075c 8091 0000 		lds r24,bank
 1534 0760 98E0      		ldi r25,lo8(8)
 1535 0762 899F      		mul r24,r25
 1536 0764 9001      		movw r18,r0
 1537 0766 1124      		clr __zero_reg__
 332:track_edit.c  ****           track_buff[curr_track_index] = curr_patt;
 1538               		.loc 1 332 35 view .LVU450
 1539 0768 2C2B      		or r18,r28
 332:track_edit.c  ****           track_buff[curr_track_index] = curr_patt;
 1540               		.loc 1 332 21 view .LVU451
 1541 076a 3093 0000 		sts curr_patt+1,r19
 1542 076e 2093 0000 		sts curr_patt,r18
 333:track_edit.c  ****           load_pattern(bank, i);
 1543               		.loc 1 333 11 is_stmt 1 view .LVU452
 333:track_edit.c  ****           load_pattern(bank, i);
 1544               		.loc 1 333 21 is_stmt 0 view .LVU453
 1545 0772 E091 0000 		lds r30,curr_track_index
 1546 0776 F0E0      		ldi r31,0
 333:track_edit.c  ****           load_pattern(bank, i);
 1547               		.loc 1 333 40 view .LVU454
 1548 0778 EE0F      		lsl r30
 1549 077a FF1F      		rol r31
 1550 077c E050      		subi r30,lo8(-(track_buff))
 1551 077e F040      		sbci r31,hi8(-(track_buff))
 1552 0780 3183      		std Z+1,r19
 1553 0782 2083      		st Z,r18
 334:track_edit.c  ****           curr_pattern_index = 0;
 1554               		.loc 1 334 11 is_stmt 1 view .LVU455
 1555 0784 6C2F      		mov r22,r28
 1556 0786 0E94 0000 		call load_pattern
 1557               	.LVL133:
 335:track_edit.c  ****           all_rest = all_accent = all_slide = FALSE;
 1558               		.loc 1 335 11 view .LVU456
 335:track_edit.c  ****           all_rest = all_accent = all_slide = FALSE;
 1559               		.loc 1 335 30 is_stmt 0 view .LVU457
 1560 078a 1092 0000 		sts curr_pattern_index,__zero_reg__
 336:track_edit.c  ****           curr_pitch_shift = 0;
 1561               		.loc 1 336 11 is_stmt 1 view .LVU458
 336:track_edit.c  ****           curr_pitch_shift = 0;
 1562               		.loc 1 336 45 is_stmt 0 view .LVU459
 1563 078e 1092 0000 		sts all_slide,__zero_reg__
 336:track_edit.c  ****           curr_pitch_shift = 0;
 1564               		.loc 1 336 33 view .LVU460
 1565 0792 1092 0000 		sts all_accent,__zero_reg__
 336:track_edit.c  ****           curr_pitch_shift = 0;
 1566               		.loc 1 336 20 view .LVU461
 1567 0796 1092 0000 		sts all_rest,__zero_reg__
 337:track_edit.c  ****           play_loaded_pattern = TRUE;
 1568               		.loc 1 337 11 is_stmt 1 view .LVU462
 337:track_edit.c  ****           play_loaded_pattern = TRUE;
 1569               		.loc 1 337 28 is_stmt 0 view .LVU463
 1570 079a 1092 0000 		sts curr_pitch_shift,__zero_reg__
 338:track_edit.c  ****         }
 1571               		.loc 1 338 11 is_stmt 1 view .LVU464
 338:track_edit.c  ****         }
 1572               		.loc 1 338 31 is_stmt 0 view .LVU465
 1573 079e 81E0      		ldi r24,lo8(1)
 1574 07a0 8093 0000 		sts play_loaded_pattern,r24
 1575 07a4 00C0      		rjmp .L86
 1576               	.LBE11:
 1577               		.cfi_endproc
 1578               	.LFE1:
 1580               		.comm	in_run_mode,1,1
 1581               		.comm	in_stepwrite_mode,1,1
 1582               		.comm	track_buff,32,1
 1583               		.comm	track_bank,1,1
 1584               		.comm	track_location,1,1
 1585               		.comm	curr_patt,2,1
 1586               		.comm	play_loaded_track,1,1
 1587               		.comm	curr_track_index,1,1
 1588               	.Letext0:
 1589               		.file 2 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdint.h"
 1590               		.file 3 "/usr/local/Cellar/avr-gcc/9.1.0/avr/include/stdio.h"
 1591               		.file 4 "eeprom.h"
 1592               		.file 5 "synth.h"
 1593               		.file 6 "led.h"
 1594               		.file 7 "switch.h"
 1595               		.file 8 "pattern.h"
 1596               		.file 9 "main.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 track_edit.c
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:4      *ABS*:000000000000003f __SREG__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:12     .text:0000000000000000 get_pitchshift_from_patt
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:47     .text:000000000000000a display_curr_pitch_shift_ud
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:101    .text:0000000000000036 start_track_stepwrite_mode
                            *COM*:0000000000000001 in_stepwrite_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:125    .text:0000000000000046 stop_track_stepwrite_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:158    .text:0000000000000062 load_curr_patt
                            *COM*:0000000000000002 curr_patt
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:215    .text:00000000000000a8 start_track_run_mode
                            *COM*:0000000000000001 in_run_mode
                            *COM*:0000000000000001 play_loaded_track
                            *COM*:0000000000000020 track_buff
                            *COM*:0000000000000001 curr_track_index
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:290    .text:0000000000000102 stop_track_run_mode
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:325    .text:0000000000000120 load_track
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:439    .text:0000000000000196 write_track
/var/folders/r8/bhw8rf6916j75xkgjmn833680000gn/T//ccQZqFJk.s:546    .text:0000000000000202 do_track_edit
                            *COM*:0000000000000001 track_bank
                            *COM*:0000000000000001 track_location

UNDEFINED SYMBOLS
curr_pitch_shift
clear_led
set_led
clear_bank_leds
clear_all_leds
clear_blinking_leds
play_loaded_pattern
note_off
load_pattern
all_rest
all_accent
all_slide
curr_pattern_index
curr_note
note_counter
has_bank_knob_changed
spieeprom_read
spieeprom_write
turn_on_tempo
bank
sync
read_switches
function
turn_off_tempo
clock_leds
set_bank_led
get_lowest_numkey_pressed
clear_notekey_leds
set_numkey_led
just_pressed
is_bank_led_blink
set_bank_led_blink
clear_note_leds
is_pressed
get_lowest_notekey_pressed
set_notekey_led_blink
get_lowest_numkey_just_pressed
clear_numkey_leds
just_released
set_single_numkey_led
__do_clear_bss
